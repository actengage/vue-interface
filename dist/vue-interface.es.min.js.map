{"version":3,"file":"vue-interface.es.min.js","sources":["../src/Directives/Autogrow/Autogrow.js","../src/Directives/Collapse/Collapse.js","../src/Directives/Slug/Slug.js","../src/Helpers/ScrollTo/ScrollTo.js","../src/main.js","../src/Components/Alert/Alert.vue","../src/Components/Alert/AlertLink.vue","../src/Components/Alert/index.js","../src/Components/Badge/Badge.vue","../src/Components/Badge/index.js","../src/Support/BaseClass.js","../src/Http/Request/Response.js","../src/Http/Request/Request.js","../src/Http/Model/Model.js","../src/Components/BaseForm/BaseForm.vue","../src/Components/BaseForm/index.js","../src/Components/Breadcrumb/BreadcrumbItem.vue","../src/Components/Breadcrumb/Breadcrumb.vue","../src/Components/Breadcrumb/index.js","../src/Mixins/Screenreaders/Screenreaders.js","../src/Components/HelpText/HelpText.vue","../src/Components/HelpText/index.js","../src/Components/FormGroup/FormGroup.vue","../src/Components/FormGroup/index.js","../src/Components/FormLabel/FormLabel.vue","../src/Components/FormLabel/index.js","../src/Components/FormFeedback/FormFeedback.vue","../src/Components/FormFeedback/index.js","../src/Mixins/FormControl/FormControl.js","../src/Components/InputField/InputField.vue","../src/Components/InputField/index.js","../src/Components/FileField/FileField.vue","../src/Components/FileField/index.js","../src/Components/BtnFile/BtnFile.vue","../src/Components/BtnFile/index.js","../src/Components/BtnGroup/BtnGroup.vue","../src/Components/BtnGroup/BtnGroupToggle.vue","../src/Components/BtnGroup/BtnToolbar.vue","../src/Components/BtnGroup/index.js","../src/Mixins/Proxy/Proxy.js","../src/Components/DropdownMenu/DropdownMenuItem.vue","../src/Components/DropdownMenu/DropdownMenuHeader.vue","../src/Components/DropdownMenu/DropdownMenuDivider.vue","../src/Components/DropdownMenu/DropdownMenu.vue","../src/Components/DropdownMenu/index.js","../src/Components/BtnDropdown/BtnDropdown.vue","../src/Components/BtnDropdown/index.js","../src/Mixins/HasSlots/HasSlots.js","../src/Components/Card/Card.vue","../src/Components/Card/CardBody.vue","../src/Components/Card/CardBtnGroup.vue","../src/Components/Card/CardDeck.vue","../src/Components/Card/CardHeader.vue","../src/Components/Card/CardFooter.vue","../src/Components/Card/CardImg.vue","../src/Components/Card/CardImgTop.vue","../src/Components/Card/CardImgBottom.vue","../src/Components/Card/CardImgOverlay.vue","../src/Components/Card/CardLink.vue","../src/Components/Card/CardSubtitle.vue","../src/Components/Card/CardTitle.vue","../src/Components/Card/index.js","../src/Components/RadioField/RadioField.vue","../src/Helpers/Wait/Wait.js"],"sourcesContent":["const STYLE_ATTRIBUTES = [\n    'font',\n    'fontFamily',\n    'fontKerning',\n    'fontSize',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantLigatures',\n    'fontVariantCaps',\n    'fontVariantNumeric',\n    'fontVariantEastAsian',\n    'fontWeight',\n    'lineHeight',\n    'letterSpacing',\n    'padding',\n    'margin',\n    'textAlign',\n    'textAlignLast',\n    'textDecoration',\n    'textDecorationLine',\n    'textDecorationStyle',\n    'textDecorationColor',\n    'textDecorationSkipInk',\n    'textDecorationPosition',\n    'textIndent',\n    'textRendering',\n    'textShadow',\n    'textSizeAdjust',\n    'textOverflow',\n    'textTransform',\n    'width',\n    'wordBreak',\n    'wordSpacing',\n    'wordWrap'\n];\n\n\nfunction int(str) {\n    if(typeof str === \"number\") {\n        return str;\n    }\n    else if(!str || !str.replace) {\n        return 0;\n    }\n\n    return parseInt(str.replace(/[^\\d.]+/g, ''));\n}\n\nfunction input(div, el) {\n    div.innerHTML = el.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n}\n\nfunction height(el) {\n    return int(el.getBoundingClientRect().height);\n}\n\nfunction style(el, attr) {\n    return window.getComputedStyle(el)[attr];\n}\n\nfunction resize(target, div, minHeight, maxHeight) {\n    const dynamicHeight = Math.max(height(div) + int(style(div, 'lineHeight')), minHeight);\n    target.style.height = ((!maxHeight || dynamicHeight < maxHeight) ? dynamicHeight : maxHeight) + 'px';\n}\n\nfunction setMinHeight(div, el) {\n    div.style.minHeight = height(el) + 'px';\n}\n\nfunction mimic(el) {\n    const div = document.createElement('div');\n    const styles = window.getComputedStyle(el);\n\n    for(let i in STYLE_ATTRIBUTES) {\n        const key = STYLE_ATTRIBUTES[i];\n\n        div.style[key] = styles[key];\n    }\n\n    div.style.position = 'absolute';\n    div.style.bottom = '100%';\n    div.style.zIndex = -1;\n    div.style.visibility = 'hidden';\n\n    return div;\n}\n\nfunction init(el, maxHeight) {\n    const div = mimic(el);\n    const minHeight = height(el);\n\n    el.addEventListener('input', event => {\n        input(div, event.target);\n        resize(el, div, minHeight, maxHeight);\n    });\n\n    document.body.appendChild(div);\n\n    input(div, el);\n    resize(el, div, minHeight, maxHeight);\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if(el.tagName.toLowerCase() !== 'textarea') {\n            el = el.querySelector('textarea');\n        }\n\n        if(!el) {\n            throw new Error('A textarea is required for the v-autogrow directive.');\n        }\n\n        init(el, binding.value);\n    }\n\n}\n","import { isUndefined } from '../../Helpers/Functions';\nimport transition from '../../Helpers/Transition';\n\nfunction show(el, target, vnode) {\n    target.classList.remove('collapse');\n    target.classList.add('show');\n    target.$collapsedHeight = getComputedStyle(target).height;\n    target.classList.add('collapsing');\n\n    vnode.context.$nextTick(() => {\n        target.style.height = target.$collapsedHeight;\n    });\n\n    transition(target).then(delay => {\n        target.style.height = null;\n        target.classList.add('collapse');\n        target.classList.remove('collapsing');\n        el.classList.remove('collapsed');\n    });\n}\n\nfunction hide(el, target, vnode) {\n    target.style.height = target.$collapsedHeight;\n    target.classList.add('collapsing');\n    target.classList.remove('collapse');\n\n    vnode.context.$nextTick(() => {\n        target.style.height = 0;\n    });\n\n    transition(target).then(delay => {\n        target.style.height = null;\n        target.classList.add('collapse');\n        target.classList.remove('show', 'collapsing');\n        el.classList.add('collapsed');\n    });\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if(isUndefined(binding.value) || binding.value === true) {\n            el.classList.add('collapsed');\n            el.setAttribute('data-toggle', 'collapse');\n\n            const target = el.getAttribute('data-target') || el.getAttribute('href');\n            const elements = document.querySelectorAll(target);\n\n            el.addEventListener('click', event => {\n                elements.forEach(element => {\n                    if(!element.classList.contains('show')) {\n                        show(el, element, vnode);\n                    }\n                    else {\n                        hide(el, element, vnode);\n                    }\n                });\n\n                event.preventDefault();\n            });\n\n            elements.forEach(element => {\n                /*\n                if(!element.$collapsedHeight) {\n                    element.$collapsedHeight = getComputedStyle(element).height;\n                }\n                */\n\n                if(!element.classList.contains('collapse')) {\n                    element.classList.add('collapse');\n                }\n            });\n        }\n    }\n\n}\n","import { get } from '../../Helpers/Functions';\nimport { kebabCase } from '../../Helpers/Functions';\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        const input = el.querySelector('input, textarea') || el;\n        const value = get(vnode.context, binding.expression);\n\n        let editable = !input.value;\n\n        const update = value => {\n            if(editable) {\n                input.value = kebabCase(value);\n                input.dispatchEvent(new Event('input'));\n            }\n        };\n\n        vnode.context.$watch(binding.expression, update);\n\n        input.addEventListener('keyup', event => {\n            input.value = kebabCase(event.target.value) + (\n                event.target.value.match(/\\s$/) ? ' ' : ''\n            );\n        });\n\n        input.addEventListener('input', event => {\n            if(event instanceof InputEvent) {\n                editable = !event.target.value;\n            }\n        });\n\n        input.addEventListener('blur', event => {\n            input.value = kebabCase(event.target.value || binding.expression.split('.').reduce((o,i)=>o[i], vnode.context));\n            input.dispatchEvent(new Event('input'));\n        });\n\n        !input.value && update(value);\n    }\n\n}\n","const easings = {\n    linear(t) {\n        return t;\n    },\n    easeInQuad(t) {\n        return t * t;\n    },\n    easeOutQuad(t) {\n        return t * (2 - t);\n    },\n    easeInOutQuad(t) {\n        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic(t) {\n        return t * t * t;\n    },\n    easeOutCubic(t) {\n        return (--t) * t * t + 1;\n    },\n    easeInOutCubic(t) {\n        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart(t) {\n        return t * t * t * t;\n    },\n    easeOutQuart(t) {\n        return 1 - (--t) * t * t * t;\n    },\n    easeInOutQuart(t) {\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t;\n    },\n    easeInQuint(t) {\n        return t * t * t * t * t;\n    },\n    easeOutQuint(t) {\n        return 1 + (--t) * t * t * t * t;\n    },\n    easeInOutQuint(t) {\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t;\n    }\n};\n\nexport default function scrollTo(destination, duration = 1000, easing = 'easeInQuad', viewport = false) {\n    if(!viewport) {\n        viewport = document.querySelector('body');\n    }\n\n    const viewportBounds = viewport.getBoundingClientRect();\n    const destinationBounds = destination.getBoundingClientRect();\n    const destinationOffsetToScroll = Math.ceil(destinationBounds.top + document.documentElement.scrollTop);\n\n    function isScrollBottom() {\n        return document.documentElement.scrollTop >= Math.floor(viewportBounds.height) - window.innerHeight;\n    }\n\n    return new Promise((resolve, reject) => {\n        const startTime = performance.now();\n        const isStartingBottom = isScrollBottom();\n\n        function scroll() {\n            const start = document.documentElement.scrollTop;\n            const time = Math.min(1, ((performance.now() - startTime) / duration));\n            const timeFunction = easings[easing](time);\n\n            window.scroll(0, Math.ceil((timeFunction * (destinationOffsetToScroll - start)) + start));\n\n            if (document.documentElement.scrollTop === destinationOffsetToScroll || isScrollBottom() && !isStartingBottom) {\n                resolve();\n                return;\n            }\n\n            requestAnimationFrame(scroll);\n        }\n\n        scroll();\n    });\n}\n","import * as filters from './Filters';\nimport * as plugins from './Plugins';\nimport * as components from './Components';\nimport * as directives from './Directives';\nimport VueInstaller from './Helpers/VueInstaller';\n\nexport * from './Http';\nexport * from './Mixins';\nexport * from './Helpers';\nexport * from './Plugins';\nexport * from './Components';\nexport * from './Directives';\nexport * from './Filters';\n\nexport default VueInstaller.use({\n\n    install(Vue) {\n        VueInstaller.plugins(Vue, plugins);\n        VueInstaller.filters(Vue, filters);\n        VueInstaller.directives(Vue, directives);\n        VueInstaller.components(Vue, components);\n    }\n\n});\n","<template>\n    <div class=\"alert\" :class=\"mergeClasses(variantClass, {show: isVisible, fade: fade})\" role=\"alert\">\n        <alert-heading v-if=\"title || heading\">{{ title || heading }}</alert-heading>\n        <slot/>\n        <alert-close v-if=\"dismissible\" @click=\"dismiss()\"/>\n        <progress-bar v-if=\"typeof show === 'number'\" :variant=\"variant\" :height=\"5\" :value=\"dismissCount\" :max=\"show\" class=\"my-3\"/>\n    </div>\n</template>\n\n<script>\nimport AlertClose from './AlertClose';\nimport AlertHeading from './AlertHeading';\nimport ProgressBar from '../ProgressBar';\nimport Variant from '../../Mixins/Variant';\nimport transition from '../../Helpers/Transition';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'alert',\n\n    components: {\n        AlertClose,\n        AlertHeading,\n        ProgressBar\n    },\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Is the alert dismissible\n         *\n         * @property Boolean\n         */\n        dismissible: Boolean,\n\n        /**\n         * The alert's title/heading\n         *\n         * @property Boolean\n         */\n        heading: String,\n\n        /**\n         * The alert's title/heading\n         *\n         * @property Boolean\n         */\n        title: String,\n\n        /**\n         * Should the alert fade when hidden\n         *\n         * @property Boolean\n         */\n        fade: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Should the alert be visible by default. If passed a number, alert\n         * will be shown for the number of seconds that are passed.\n         *\n         * @property Boolean\n         */\n        show: {\n            type: [Number, Boolean],\n            default: true\n        }\n\n    },\n\n    methods: {\n\n        dismiss() {\n            transition(this.$el).then(delay => {\n                this.$emit('dismissed');\n            });\n\n            this.$emit('update:visible', this.isVisible = false);\n        }\n\n    },\n\n    mounted() {\n        if(typeof this.show === 'number') {\n            const el = this.$el.querySelector('.progress-bar');\n\n            this.$emit('dismiss-countdown', this.dismissCount = this.show);\n\n            const interval = setInterval(() => {\n                this.$emit('dismiss-countdown', this.dismissCount -= 1);\n\n                if(!this.dismissCount) {\n                    clearInterval(interval);\n                    transition(el).then(delay => this.dismiss());\n                }\n            }, 1000);\n        }\n    },\n\n    data() {\n        return {\n            dismissCount: this.show,\n            isVisible: this.show\n        }\n    }\n\n}\n</script>\n","<template>\n    <a class=\"alert-link\"><slot/></a>\n</template>\n\n<script>\nexport default {\n\n    name: 'alert-link'\n\n}\n</script>\n","import Alert from './Alert';\nimport AlertLink from './AlertLink';\nimport AlertClose from './AlertClose';\nimport AlertHeading from './AlertHeading';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Alert,\n            AlertLink,\n            AlertClose,\n            AlertHeading\n        });\n    }\n\n});\n\nexport * from './AlertLink';\nexport * from './AlertClose';\nexport * from './AlertHeading';\nexport default Alert;\n","<template>\n    <a v-if=\"href\" :href=\"href\" class=\"badge\" :class=\"mergeClasses(classes, variantClass)\">\n        <slot>{{label}}</slot>\n        <span class=\"sr-only\" v-html=\"accessibility\"/>\n    </a>\n    <span v-else class=\"badge\" :class=\"mergeClasses(classes, variantClass)\">\n        <slot>{{label}}</slot>\n        <span class=\"sr-only\" v-html=\"accessibility\"/>\n    </span>\n</template>\n\n<script>\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'badge',\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The screen reader accessibility label.\n         *\n         * @property String\n         */\n        accessibility: String,\n\n        /**\n         * If an href attribute is passed, the badge becomes an anchor.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The badge appear as pill shaped.\n         *\n         * @property String\n         */\n        pill: Boolean,\n\n        /**\n         * The badge label.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The badge appear as secondary in size to the parent element.\n         *\n         * @property String\n         */\n        secondary: Boolean\n\n    },\n\n    computed: {\n\n        classes() {\n            return prefix({\n                'pill': this.pill,\n                'secondary': this.secondary\n            }, this.$options.name);\n        }\n    }\n}\n\n</script>\n","import Badge from './Badge';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Badge\n        });\n    }\n\n});\n\nexport default Badge;\n","import { isObject } from '../Helpers/Functions';\n\nexport default class BaseClass {\n\n    constructor(attributes) {\n        this.setAttribute(attributes);\n    }\n\n    getAttribute(key) {\n        return this.hasOwnProperty(key) ? this[key] : null;\n    }\n\n    getAttributes() {\n        const attributes = {};\n\n        Object.getOwnPropertyNames(this).forEach(key => {\n            attributes[key] = this.getAttribute(key);\n        });\n\n        return attributes;\n    }\n\n    getPublicAttributes() {\n        return Object.keys(this.getAttributes())\n            .filter(key => {\n                return !key.match(/^\\$/);\n            })\n            .reduce((obj, key) => {\n                obj[key] = this.getAttribute(key);\n\n                return obj;\n            }, {});\n    }\n\n    setAttribute(key, value) {\n        if(isObject(key)) {\n            this.setAttributes(key)\n        }\n        else {\n            this[key] = value;\n        }\n    }\n\n    setAttributes(values) {\n        for(const i in values) {\n            this.setAttribute(i, values[i]);\n        }\n    }\n\n}\n","import BaseClass from '../../Support/BaseClass';\nimport { extend } from '../../Helpers/Functions';\n\nexport default class Response extends BaseClass {\n\n    constructor(data) {\n        super(extend({\n            date: new Date\n        }, data));\n    }\n\n    get data() {\n        return this.$data;\n    }\n\n    set data(value) {\n        this.$data = value;\n    }\n\n    get request() {\n        return this.$request;\n    }\n\n    set request(value) {\n        this.$request = value;\n    }\n\n    get date() {\n        return this.$date;\n    }\n\n    set date(value) {\n        this.$date = value;\n    }\n\n}\n","import axios from 'axios';\nimport Response from './Response';\nimport BaseClass from '../../Support/BaseClass';\nimport { extend } from '../../Helpers/Functions';\nimport { isObject } from '../../Helpers/Functions';\nimport { isString } from '../../Helpers/Functions';\n\nconst DEFAULTS = {\n    transformRequest: [],\n    transformResponse: []\n};\n\nexport default class Request extends BaseClass {\n\n    constructor(method, url, attributes) {\n        super({\n            options: {},\n            data: {},\n            headers: {},\n            params: {},\n            url: url,\n            method: method\n        })\n\n        if(isObject(attributes)) {\n            this.setAttribute(attributes);\n        }\n    }\n\n    send(attributes) {\n        this.sentAt = new Date;\n        this.setAttributes(attributes);\n\n        return new Promise((resolve, reject) => {\n            axios(this.options).then(\n                data => resolve(this.response = new Response(data)),\n                errors => reject(this.errors = errors)\n            );\n        });\n    }\n\n    set cancel(value) {\n        this.$cancel = value;\n    }\n\n    get cancel() {\n        return this.$cancel || (() => {\n            throw new Error('The request has not been sent yet.');\n        });\n    }\n\n    get options() {\n        return extend({\n            cancelToken: new axios.CancelToken(\n                cancel => this.cancel = cancel\n            )\n        }, DEFAULTS, this.getPublicAttributes());\n    }\n\n    set options(attributes) {\n        this.setAttribute(attributes);\n    }\n\n    get response() {\n        return this.$response;\n    }\n\n    set response(value) {\n        this.$response = value;\n    }\n\n    get errors() {\n        return this.$errors;\n    }\n\n    set errors(value) {\n        this.$errors = value;\n    }\n\n    get passed() {\n        return !!this.response && !this.errors;\n    }\n\n    get failed() {\n        return !!this.response && !!this.$error;\n    }\n\n    static get transform() {\n        return {\n            request: this.transformRequest,\n            response: this.transformResponse\n        }\n    }\n\n    static get defaults() {\n        return DEFAULTS;\n    }\n\n    static set defaults(value) {\n        extend(DEFAULTS, value);\n    }\n\n    static transformRequest(fn) {\n        DEFAULTS.transformRequest.push(fn);\n    }\n\n    static transformResponse(fn) {\n        DEFAULTS.transformResponse.push(fn);\n    }\n\n    static get(url, attributes) {\n        return this.make('get', url).send(attributes);\n    }\n\n    static post(url, attributes) {\n        return this.make('post', url, attributes).send();\n    }\n\n    static put(url, attributes) {\n        return this.make('put', url, attributes).send();\n    }\n\n    static patch(url, data, attributes) {\n        return this.make('path', url, attributes).send();\n    }\n\n    static delete(url, attributes) {\n        return this.make('delete', url, attributes).send();\n    }\n\n    static make(method, url, attributes) {\n        return new this(method, url, attributes);\n    }\n\n}\n","import Request from '../Request';\nimport { each } from '../../Helpers/Functions';\nimport { isNull } from '../../Helpers/Functions';\nimport { pickBy } from '../../Helpers/Functions';\nimport { isArray } from '../../Helpers/Functions';\nimport { isObject } from '../../Helpers/Functions';\nimport { isUndefined } from '../../Helpers/Functions';\n\nexport default class Model {\n\n    /**\n     * Construct the model instance\n     *\n     * @param data object\n     * @return void\n     */\n    constructor(data = {}, params = {}) {\n        this.$request = null;\n        this.$key = this.key();\n        this.$files = this.files();\n        this.$properties = this.properties();\n\n        each(params, (value, key) => {\n            this[key] = value;\n        });\n\n        this.initialize(data);\n    }\n\n    /**\n     * Initialize the model with the given data without considering the data\n     * as \"changed\".\n     *\n     * @param data object\n     * @return this\n     */\n    initialize(data) {\n        this.$exists = false;\n        this.$changed = {};\n        this.$attributes = {};\n        this.fill(data);\n        this.$initialized = true;\n\n        return this;\n    }\n\n    /**\n     * Define the corresponding API endpoint slug\n     *\n     * @return string\n     */\n    endpoint() {\n        //\n    }\n\n    /**\n     * Define the corresponding uri schema.\n     *\n     * @return string\n     */\n    uri() {\n        return [\n            (this.endpoint() || ''),\n            (this.exists() ? this.id() : null)\n        ]\n        .filter(value => !!value)\n        .concat([].slice.call(arguments))\n        .join('/');\n    }\n\n    /**\n     * Return the primary key value for the model\n     *\n     * @return {Number}\n     */\n    id() {\n        return this.get(this.key());\n    }\n\n    /**\n     * Define a primary key. This is used to determine if the model exists and\n     * which endpoint to use.\n     *\n     * @return string\n     */\n    key() {\n        return 'id';\n    }\n\n    /**\n     * Return an array of properties that are sent to the API. If no properties\n     * are defined, then all the attributes will be included in the request.\n     *\n     * @return array\n     */\n    properties() {\n        return [];\n    }\n\n    /**\n     * Return an array of file properties that are sent to the API. If no fies\n     * are defined, then request will always be sent with JSON vs. multipart.\n     *\n     * @return array\n     */\n    files() {\n        return [];\n    }\n\n    /**\n     * Set the attributes in the model with the data given.\n     *\n     * @param data object\n     * @return this\n     */\n    fill(data) {\n        this.setAttributes(data);\n\n        return this;\n    }\n\n    /**\n     * Get one or more attributes from the model.\n     *\n     * @param data string|array\n     * @return array|mixed\n     */\n    get(key) {\n        if(isArray(key) || isObject(key)) {\n            return this.getAttributes().filter((value) => {\n                return data.indexOf(value) !== -1;\n            });\n        }\n        else {\n            return this.getAttribute(key);\n        }\n    }\n\n    /**\n     * Alias for setAttributes() except this method returns `this`. This method\n     * also accepts an array of values or key/value pair.\n     *\n     * @return this\n     */\n    set(key, value = undefined) {\n        if(isArray(key) || isObject(key)) {\n            this.setAttributes(key);\n        }\n        else {\n            this.setAttribute(key, value);\n        }\n\n        return this;\n    }\n\n    /**\n     * Get all the defined attributes.\n     *\n     * @return array\n     */\n    getAttributes() {\n        return this.$attributes;\n    }\n\n    /**\n     * Get the changed attributes\n     *\n     * @return array\n     */\n    getChangedAttributes() {\n        return Object.keys(this.$changed);\n    }\n\n    /**\n     * Get the changed attributes\n     *\n     * @return array\n     */\n    getOriginalValue(key) {\n        return this.$changed[key] || this.$attributes[key];\n    }\n\n    /**\n     * Get the Request object.\n     *\n     * @return {mixed}\n     */\n    getRequest() {\n        return this.$request;\n    }\n\n    /**\n     * Get the unchanged attributes\n     *\n     * @return array\n     */\n    getUnchangedAttributes() {\n        return Object.keys(this.$attributes).filter(key => !(key in this.$changed));\n    }\n\n    /**\n     * Get an attribute with a given key. If no key is defined\n     *\n     * @param key string\n     * @param default undefined|mixed\n     * @return array\n     */\n    getAttribute(key, value = undefined) {\n        return this.$attributes[key] || value;\n    }\n\n    /**\n     * Set an array or object of data as attributes.\n     *\n     * @param attributes array|object\n     * @return void\n     */\n    setAttributes(data) {\n        if(isArray(data) || isObject(data)) {\n            each(data, (value, key) => {\n                this.setAttribute(key, value);\n            });\n        }\n    }\n\n    /**\n     * Set an attribute with a given key/value pair. This will track the changes\n     * in the model within the `this.$changed` property. If the primary key\n     * is set, it will also change the `this.$exists` property.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    setAttribute(key, value) {\n        if(this.getAttribute(key) !== value) {\n            this.handleAttributeChange(key, value);\n\n            if(isUndefined(value)) {\n                delete this.$attributes[key];\n            }\n            else {\n                this.$attributes[key] = value;\n            }\n        }\n    }\n\n    /**\n     * Revert the model to its original state.\n     *\n     * @return bool\n     */\n    revert() {\n        each(this.$changed, (value, key) => {\n            if(!isUndefined(value)) {\n                this.$attributes[key] = value;\n            }\n            else {\n                delete this.$attributes[key];\n            }\n        });\n\n        this.$changed = {};\n    }\n\n    /**\n     * Returns if the model has a primary key set.\n     *\n     * @return bool\n     */\n    exists() {\n        return !!this.$exists;\n    }\n\n    /**\n     * Returns the model been changed or not.\n     *\n     * @return bool\n     */\n    hasChanged(key) {\n        return !key ? this.getChangedAttributes().length > 0 : !isUndefined(this.$changed[key]);\n    }\n\n    /**\n     * Does the model have any File objects. If so, need to send as multipart.\n     *\n     * @return bool\n     */\n    hasFiles() {\n        function count(files, total = 0) {\n            return files.reduce((carry, value) => {\n                if(isArray(value)) {\n                    return carry + count(value, total);\n                }\n                else if(value instanceof File || value instanceof FileList) {\n                    return carry + 1;\n                }\n                else {\n                    return carry;\n                }\n            }, total);\n        }\n\n        return count(this.toJSON()) !== 0;\n    }\n\n    /**\n     * Handle settings the $changed attributes when an attribute value is set.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    handleAttributeChange(key, value) {\n        if(this.$initialized) {\n            if(this.$changed[key] === value) {\n                delete this.$changed[key];\n            }\n            else if(!(key in this.$changed)) {\n                this.$changed[key] = this.getAttribute(key);\n            }\n        }\n\n        this.handlePrimaryKeyChange(key, value);\n    }\n\n    /**\n     * Set an array or object of data as attributes.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    handlePrimaryKeyChange(key, value) {\n        if(this.$key === key) {\n            this.$exists = !isUndefined(value) && !isNull(value);\n        }\n    }\n\n    /**\n     * Cancel the current request\n     *\n     * @param data object\n     * @return bool\n     */\n    cancel() {\n        this.$request && this.$request.cancel();\n    }\n\n    /**\n     * Save the model to the database\n     *\n     * @param data object\n     * @return bool\n     */\n    save(data = {}, config = {}) {\n        this.fill(data);\n\n        return new Promise((resolve, reject) => {\n            const data = !this.hasFiles() ? this.toJSON() : this.toFormData();\n            const method = !this.exists() || this.hasFiles() ? 'post' : 'put';\n\n            this.$request = this.constructor.request(method, config.uri || this.uri(), config);\n            this.$request.send({\n                data: data\n            }).then(response => resolve(this.fill(response)), reject);\n        });\n    }\n\n    /**\n     * Delete an existing model\n     *\n     * @param  {object} config\n     * @return {bool}\n     */\n    delete(config = {}) {\n        return new Promise((resolve, reject) => {\n            if(!this.exists()) {\n                reject(new Error('The model must have a primary key before it can be delete.'));\n            }\n\n            this.$request = this.constructor.request('delete', config.uri || this.uri(), config);\n            this.$request.send().then(response => {\n                resolve(response);\n            }, reject);\n        });\n    }\n\n    /**\n     * Cancel the current HTTP request if one exists.\n     *\n     * @return {self}\n     */\n    cancel() {\n        if(this.$request) {\n            this.$request.cancel();\n        }\n\n        return this;\n    }\n\n    /**\n     * Convert the Model instance to a FormData instance\n     *\n     * @return Object\n     */\n    toFormData() {\n        const form = new FormData();\n\n        each(this.toJSON(), (value, key) => {\n            if(isArray(value)) {\n                each(value, item => {\n                    if(!(item instanceof File) && (isObject(item) || isArray(item))) {\n                        item = JSON.stringify(item);\n                    }\n\n                    form.append(key.replace(/(.+)(\\[.+\\]?)$/, '$1')+'[]', item);\n                });\n            }\n            else if(!(value instanceof File) && isObject(value)) {\n                form.append(key, JSON.stringify(value));\n            }\n            else if(!isNull(value)) {\n                form.append(key, value);\n            }\n        });\n\n        return form;\n    }\n\n    /**\n     * Convert the instance to JSON payload\n     *\n     * @return Object\n     */\n    toJSON() {\n        return pickBy(this.$attributes, (value, key) => {\n            return !this.$properties.length || (\n                key === this.key() || this.$properties.indexOf(key) !== -1\n            );\n        });\n    }\n\n    /**\n     * Convert the model to a string\n     *\n     * @return String\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * Alias for toJSON\n     *\n     * @return Object\n     */\n    toJson() {\n        return this.toJSON();\n    }\n\n    /**\n     * Search for a collection of models\n     *\n     * @param data object\n     * @return bool\n     */\n    static search(params = {}, config = {}) {\n        const model = new this;\n\n        return new Promise((resolve, reject) => {\n            model.$request = this.request('get', (config.uri || model.uri()), config);\n            model.$request.send().then(response => {\n                resolve(response);\n            }, errors => {\n                reject(errors);\n            });\n        });\n    }\n\n    /**\n     * Find an existing model by id\n     *\n     * @param data object\n     * @return bool\n     */\n    static find(id, config = {}) {\n        return new Promise((resolve, reject) => {\n            const model = new this;\n            model.$request = this.request('get', (config.uri || model.uri(id)), config);\n            model.$request.send().then(response => {\n                resolve(model.initialize(response));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Create a request from the model data\n     *\n     * @param data object\n     * @return bool\n     */\n    static request(method, url, config = {}) {\n        return Request.make(method, url, config);\n    }\n\n}\n","<template>\n    <form @submit.prevent=\"onSubmit\" :class=\"{'form-inline': inline}\" :novalidate=\"novalidate\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nimport Model from '../../Http/Model/Model';\nimport { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    props: {\n\n        /**\n         * The Model method used to send the request.\n         *\n         * @property Boolean\n         */\n        method: {\n            type: String,\n            default: 'save',\n            validate(value) {\n                return this.model && isFunction(this.model[value]);\n            }\n        },\n\n        /**\n         * An object of form data\n         *\n         * @property Object\n         */\n        data: {\n            type: Object,\n            default: () => {\n                return {};\n            }\n        },\n\n        /**\n         * A JSON object of request headers\n         *\n         * @property Object\n         */\n        headers: Object,\n\n        /**\n         * Display the form fields inline\n         *\n         * @property Object\n         */\n        model: {\n            type: Object,\n            validate(value) {\n                return value instanceof Model;\n            }\n        },\n\n        /**\n         * Display the form fields inline\n         *\n         * @property Boolean\n         */\n        inline: Boolean,\n\n        /**\n         * A callback function for the `submit` event\n         *\n         * @property Boolean\n         */\n        novalidate: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * A JSON object of key/value pairs to build the query string.\n         *\n         * @property Object\n         */\n        query: Object,\n\n        /**\n         * A URI or URL used to redirect user after form submits successfully.\n         *\n         * @property Function|String\n         */\n        redirect: [Object, String, Function],\n\n        /**\n         * A callback function for the `submit` event\n         *\n         * @property Function\n         */\n        onSubmit: {\n            type: Function,\n            default(event) {\n                this.model && this.submit(event);\n            }\n        },\n\n        /**\n         * A callback function for the `submit:success` event\n         *\n         * @property Function\n         */\n        onSubmitSuccess: {\n            type: Function,\n            default(event, data) {\n                this.$emit('submit:success', event, data);\n                this.$emit('submit:complete', event, true, data);\n\n                if(this.redirect && isFunction(this.redirect)) {\n                    this.redirect(this);\n                }\n                else if(this.redirect && this.$router) {\n                    this.$router.push(this.redirect);\n                }\n            }\n        },\n\n        /**\n         * A callback function for the `submit:success` event\n         *\n         * @property Function\n         */\n        onSubmitFailed: {\n            type: Function,\n            default(event, errors) {\n                this.$emit('submit:failed', event, errors);\n                this.$emit('submit:complete', event, false, errors);\n            }\n        }\n\n    },\n\n    methods: {\n\n        submit(event) {\n            this.$emit('submit', event);\n\n            return this.model[this.method](this.data, {\n                query: this.query,\n                headers: this.headers,\n                onUploadProgress: event => {\n                    this.$emit('submit:progress', event);\n                }\n            }).then((data) => {\n                this.onSubmitSuccess(event, data);\n            }, (errors) => {\n                this.onSubmitFailed(event, errors);\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            errors: {}\n        }\n    }\n\n}\n\n</script>\n","import BaseForm from './BaseForm';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BaseForm\n        });\n    }\n\n});\n\nexport default BaseForm;\n","<template>\n    <li class=\"breadcrumb-item\" :class=\"{'active': active}\" :aria-current=\"active ? 'page' : false\">\n        <a v-if=\"!active && href\" :href=\"href\">\n            <slot>{{label}}</slot>\n        </a>\n        <router-link v-else-if=\"!active && to\" :to=\"to\">\n            <slot>{{label}}</slot>\n        </router-link>\n        <template v-else>\n            <slot>{{label}}</slot>\n        </template>\n    </li>\n</template>\n\n<script>\nexport default {\n\n    name: 'breadcrumb-item',\n\n    props: {\n\n        /**\n         * Is the item active?\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * An href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * An breadcrumb label\n         *\n         * @prop {String}\n         */\n        label: String,\n\n        /**\n         * The to attribute which is passed to the <router-link> component.\n         *\n         * @prop {Object}\n         */\n        to: [String, Object]\n\n    }\n\n}\n</script>\n","<template>\n    <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n            <breadcrumb-item\n                v-if=\"items.length\"\n                v-for=\"(item, i) in items\"\n                v-bind=\"item\"\n                :key=\"i\"\n                :current=\"i === item.length - 1\"\n            />\n            <slot/>\n        </ol>\n    </nav>\n</template>\n\n<script>\nimport BreadcrumbItem from './BreadcrumbItem';\n\nexport default {\n\n    name: 'breadcrumb',\n\n    components: {\n        BreadcrumbItem\n    },\n\n    props: {\n\n        /**\n         * An array of breadcrumbs\n         *\n         * @prop {Array}\n         */\n        items: Array\n\n    }\n\n}\n</script>\n","import Breadcrumb from './Breadcrumb';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Breadcrumb,\n            BreadcrumbItem\n        });\n    }\n\n});\n\nexport default Breadcrumb;\n","export default {\n\n    props: {\n\n        /**\n         * Should show only for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnly: Boolean,\n\n        /**\n         * Should be focusable for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnlyFocusable: Boolean\n\n    },\n\n    computed: {\n        screenreaderClasses() {\n            return {\n                'sr-only': this.srOnly,\n                'sr-only-focusable': this.srOnlyFocusable,\n            };\n        }\n    }\n\n}\n","<template>\n\n    <small class=\"form-text\" :class=\"classes\"><slot /></small>\n\n</template>\n\n<script>\n\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'help-text',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n}\n\n</script>\n","import HelpText from './HelpText';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            HelpText\n        });\n    }\n\n});\n\nexport default HelpText;\n","<template>\n\n    <div class=\"form-group\"><slot/></div>\n\n</template>\n\n<script>\n\n\nexport default {\n\n    name: 'form-group'\n    \n}\n\n</script>\n","import FormGroup from './FormGroup';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormGroup\n        });\n    }\n\n});\n\nexport default FormGroup;\n","<template>\n\n    <label :class=\"classes\"><slot/></label>\n\n</template>\n\n<script>\n\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'form-label',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n}\n\n</script>\n","import FormLabel from './FormLabel';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormLabel\n        });\n    }\n\n});\n\nexport default FormLabel;\n","<template>\n\n    <div :class=\"{'invalid-feedback': invalid, 'valid-feedback': valid && !invalid}\">\n        <slot>{{label}}</slot>\n    </div>\n\n</template>\n\n<script>\n\nimport Colorable from '../../Mixins/Colorable/Colorable';\n\nexport default {\n\n    name: 'form-feedback',\n\n    mixins: [\n        Colorable\n    ],\n\n    props: {\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        invalid: Boolean,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        valid: Boolean\n\n    }\n\n}\n\n</script>\n","import FormFeedback from './FormFeedback';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormFeedback\n        });\n    }\n\n});\n\nexport default FormFeedback;\n","import prefix from '../../Helpers/Prefix';\nimport { each } from '../../Helpers/Functions';\nimport { isArray } from '../../Helpers/Functions';\nimport { isObject } from '../../Helpers/Functions';\nimport { camelCase } from '../../Helpers/Functions';\nimport { isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    props: {\n\n        /**\n         * The autocomplete attribute value.\n         *\n         * @property String\n         */\n        autocomplete: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        id: [Number, String],\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The field name attribute value.\n         *\n         * @property String\n         */\n        name: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        value: {\n            default: null\n        },\n\n        /**\n         * The placeholder attribute value.\n         *\n         * @property String\n         */\n        placeholder: String,\n\n        /**\n         * Is the field required.\n         *\n         * @property String\n         */\n        required: Boolean,\n\n        /**\n         * Add form-group wrapper to input\n         *\n         * @property String\n         */\n        group: {\n            type: Boolean,\n            value: true\n        },\n\n        /**\n         * The regex pattern for validation.\n         *\n         * @property String\n         */\n        pattern: String,\n\n        /**\n         * An inline field validation error.\n         *\n         * @property String|Boolean\n         */\n        error: String,\n\n        /**\n         * An inline field validation errors passed as object with key/value\n         * pairs. If errors passed as an object, the form name will be used for\n         * the key.\n         *\n         * @property Object|Boolean\n         */\n        errors: {\n            type: Object,\n            default() {\n                return {}\n            }\n        },\n\n        /**\n         * Some feedback to add to the field once the field is successfully\n         * valid.\n         *\n         * @property String\n         */\n        feedback: [String, Array],\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'change', 'click', 'keyup', 'keydown', 'progress', 'paste'];\n            }\n        },\n\n        /**\n         * The default class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control'\n        },\n\n        /**\n         * Hide the label for browsers, but leave it for screen readers.\n         *\n         * @property String\n         */\n        hideLabel: Boolean,\n\n        /**\n         * Additional margin/padding classes for fine control of spacing\n         *\n         * @property String\n         */\n        spacing: String,\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        },\n\n        /**\n         * Display the form field inline\n         *\n         * @property String\n         */\n        inline: Boolean,\n\n        /**\n         * If the form control is readonly, display only as text?\n         *\n         * @property String\n         */\n        plaintext: Boolean,\n\n        /**\n         * Is the form control readonly?\n         *\n         * @property String\n         */\n        readonly: Boolean,\n\n        /**\n         * Is the form control disabled?\n         *\n         * @property String\n         */\n        disabled: Boolean,\n\n        /**\n         * Some instructions to appear under the field label\n         *\n         * @property String\n         */\n        helpText: [Number, String],\n\n        /**\n         * The maxlength attribute\n         *\n         * @property String\n         */\n        maxlength: [Number, String]\n\n    },\n\n    directives: {\n        bindEvents: {\n            bind(el, binding, vnode) {\n                const events = binding.value || vnode.context.bindEvents;\n\n                each(events, name => {\n                    el.addEventListener(name, event => {\n                        vnode.context.$emit(name, event);\n                    });\n                });\n            }\n        }\n    },\n\n    methods: {\n\n        blur() {\n            if(this.getInputField()) {\n                this.getInputField().blur();\n            }\n        },\n\n        focus() {\n            if(this.getInputField()) {\n                this.getInputField().focus();\n            }\n        },\n\n        getInputField() {\n            return this.$el.querySelector('.form-control, input, select, textarea');\n        },\n\n        getFieldErrors() {\n            let errors = this.error || this.errors;\n\n            if(isObject(this.errors)) {\n                errors = this.errors[this.name || this.id];\n            }\n\n            return !errors || isArray(errors) || isObject(errors) ? errors : [errors];\n        }\n\n    },\n\n    computed: {\n\n        callbacks() {\n            return this.bindEvents.map(event => {\n                return {\n                    name: event,\n                    callback: this[camelCase(['on', event].join(' '))]\n                }\n            }).filter(event => !isUndefined(event.callback));\n        },\n\n        invalidFeedback() {\n            if(this.error) {\n                return this.error;\n            }\n\n            const errors = this.getFieldErrors();\n\n            return isArray(errors) ? errors.join('<br>') : errors;\n        },\n\n        validFeedback() {\n            return isArray(this.feedback) ? this.feedback.join('<br>') : this.feedback;\n        },\n\n        controlClass() {\n            return this.defaultControlClass + (this.plaintext ? '-plaintext' : '');\n        },\n\n        controlSizeClass() {\n            return prefix(this.size, this.controlClass);\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : '')\n            ].join(' ');\n        },\n\n        hasDefaultSlot () {\n            return !!this.$slots.default\n        }\n\n    }\n\n}\n","<template>\n\n    <form-group class=\"input-field\" :class=\"{'has-activity': activity}\">\n\n        <slot name=\"label\">\n            <form-label ref=\"label\" v-if=\"label || hasDefaultSlot\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <div class=\"position-relative\">\n            <slot name=\"control\">\n                <input\n                    ref=\"control\"\n                    :id=\"id\"\n                    :type=\"type\"\n                    :name=\"name\"\n                    :value=\"value\"\n                    :pattern=\"pattern\"\n                    :readonly=\"readonly\"\n                    :required=\"required\"\n                    :maxlength=\"maxlength\"\n                    :placeholder=\"placeholder\"\n                    :disabled=\"disabled || readonly\"\n                    :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                    :aria-label=\"label\"\n                    :aria-describedby=\"id\"\n                    :autocomplete=\"autocomplete\"\n                    v-bind-events=\"bindEvents\"\n                    @input=\"$emit('input', $event.target.value)\"\n                />\n            </slot>\n\n            <slot name=\"activity\">\n                <transition name=\"slide-fade\">\n                    <activity-indicator key=\"test\" v-if=\"activity\" ref=\"activity\" type=\"dots\" :size=\"size\"/>\n                </transition>\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" ref=\"feedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-else-if=\"invalidFeedback\" ref=\"feedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n        </div>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" ref=\"help\" v-html=\"helpText\" />\n        </slot>\n        \n    </form-group>\n\n</template>\n\n<script>\n\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport ActivityIndicator from '../ActivityIndicator';\n\nexport default {\n\n    name: 'input-field',\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n}\n\n</script>\n\n<style lang=\"scss\">\n.input-field {\n    position: relative;\n\n    .activity-indicator {\n        position: absolute;\n        right: 0;\n        top: 50%;\n        transform: translate(-1rem, -50%);\n        transition: all .25s ease-in;\n    }\n\n    .activity-indicator {\n    }\n\n    .slide-fade-enter {\n    }\n\n    .slide-fade-enter-active {\n    }\n\n    .slide-fade-leave-active {\n\n    }\n\n    .slide-fade-enter,\n    .slide-fade-leave-to {\n        opacity: 0;\n        transform: translate(25%, -50%);\n    }\n}\n</style>\n","import InputField from './InputField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            InputField\n        });\n    }\n\n});\n\nexport default InputField;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label || hasDefaultSlot\" :for=\"id\">\n                <slot>{{label}}</slot>\n            </form-label>\n        </slot>\n\n        <div class=\"custom-file\">\n\n            <slot name=\"placeholder\">\n                <form-label :class=\"mergeClasses(colorableClasses, 'custom-file-label')\" :for=\"id\" v-html=\"placeholder || 'Choose file'\" />\n            </slot>\n\n            <input\n                v-bind-events\n                type=\"file\"\n                :class=\"controlClasses\"\n                :id=\"id\"\n                :width=\"width\"\n                :height=\"height\"\n                :required=\"required\"\n                :multiple=\"multiple\"\n                :readonly=\"readonly\"\n                @change=\"$emit('change', $event.target.files)\">\n\n            <slot name=\"help\">\n                <help-text v-if=\"helpText\" v-html=\"helpText\" />\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n\n        </div>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport InputField from '../InputField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'file-field',\n\n    extends: InputField,\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        MergeClasses\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'custom-file-input'\n        },\n\n        /**\n         * An array of valid extensions\n         *\n         * @property String\n         */\n        extensions: Array,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        multiple: Boolean,\n\n        /**\n         * The height attribute for the control element\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * The width attribute for the control element\n         *\n         * @property String\n         */\n        width: [Number, String]\n\n    }\n\n}\n\n</script>\n","import FileField from './FileField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FileField\n        });\n    }\n\n});\n\nexport default FileField;\n","<template>\n\n    <btn class=\"btn-file\" :type=\"type\" :variant=\"variant\" :block=\"block\" :size=\"size\" :disabled=\"disabled\" :active=\"active\">\n        <slot/>\n\n        <input\n            v-bind-events\n            type=\"file\"\n            :class=\"controlClasses\"\n            :id=\"id\"\n            :width=\"width\"\n            :height=\"height\"\n            :required=\"required\"\n            :multiple=\"multiple\"\n            :readonly=\"readonly\"\n            v-on:change=\"$emit('change', multiple ? $event.target.files : $event.target.files[0])\">\n    </btn>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport FileField from '../FileField';\n\nexport default {\n\n    name: 'btn-file',\n\n    mixins: [\n        FileField\n    ],\n\n    components: {\n        Btn,\n        FileField\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * The type attribute for the button. Not applied if an anchor\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'button'\n        }\n\n    }\n\n}\n\n</script>\n\n<style lang=\"scss\">\n.btn-file {\n    cursor: pointer;\n    position: relative;\n\n    input {\n        z-index: 1;\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n}\n</style>\n","import BtnFile from './BtnFile';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BtnFile\n        });\n    }\n\n});\n\nexport default BtnFile;\n","<template>\n    <div :class=\"classes\" :data-toggle=\"toggle ? 'buttons' : false\" role=\"group\">\n        <btn v-if=\"buttons\" v-for=\"(button, i) in buttons\" :key=\"i\" v-bind=\"button\" />\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'btn-group',\n\n    components: {\n        Btn\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * An array of buttons\n         *\n         * @type {Array}\n         */\n        buttons: Array,\n\n        /**\n         * Denote the button group as toggle buttons\n         *\n         * @type {Boolean}\n         */\n        toggle: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @type {Boolean}\n         */\n        vertical: Boolean\n\n    },\n\n    computed: {\n\n        classes() {\n            return this.mergeClasses(\n                this.colorableClasses, {\n                    'btn-group': !this.vertical,\n                    'btn-group-toggle': this.toggle,\n                    'btn-group-vertical': this.vertical\n                }\n            );\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <div class=\"btn-group-toggle\" data-toggle=\"buttons\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'btn-group-toggle'\n\n}\n</script>\n","<template>\n    <div class=\"btn-toolbar\" role=\"toolbar\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'btn-toolbar'\n\n}\n</script>\n","import BtnGroup from './BtnGroup.vue';\nimport BtnGroupToggle from './BtnGroupToggle';\nimport BtnToolbar from './BtnToolbar';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BtnGroup,\n            BtnGroupToggle,\n            BtnToolbar\n        });\n    }\n\n});\n\nexport default BtnGroup;\n","import { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    methods: {\n        proxy(callback, event) {\n            if(isFunction(callback)) {\n                callback.apply(this, [].slice.call(arguments).splice(1));\n                event.preventDefault();\n            }\n        }\n    }\n\n}\n","<template>\n    <component\n        :is=\"component\"\n        :href=\"href || (component === 'a' ? '#' : false)\"\n        class=\"dropdown-item\"\n        :class=\"{'active': active}\"\n        :type=\"component === 'button' ? 'button' : false\"\n        @click=\"onClick\">\n        <i v-if=\"icon\" :class=\"icon\"/>\n        <slot>{{label}}</slot>\n    </component>\n</template>\n\n<script>\nimport Proxy from '../../Mixins/Proxy/Proxy';\n\nexport default {\n\n    mixins: [\n        Proxy\n    ],\n\n    props: {\n\n        /**\n         * Is the menu item active.\n         *\n         * @property Object\n         */\n        active: Boolean,\n\n        /**\n         * Is the menu item a button\n         *\n         * @property Object\n         */\n        button: Boolean,\n\n        /**\n         * The `element` attribute.\n         *\n         * @property Object\n         */\n        element: String,\n\n        /**\n         * The `href` attribute.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * The icon of the dropdown menu item.\n         *\n         * @property Object\n         */\n        icon: String,\n\n        /**\n         * The label of the dropdown menu item.\n         *\n         * @property Object\n         */\n        label: String\n\n    },\n\n    computed: {\n\n        component() {\n            return this.element || (this.button ? 'button' : 'a');\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @property Object\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n}\n\n</script>\n","<template>\n    <h5 class=\"dropdown-header\">\n        <slot>{{header}}</slot>\n    </h5>\n</template>\n\n<script>\n\nexport default {\n\n    name: 'dropdown-menu-header',\n\n    props: {\n\n        /**\n         * The value of the header\n         *\n         * @property Object\n         */\n        header: String\n\n    }\n\n}\n\n</script>\n","<template>\n    <div class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n\nexport default {\n\n    name: 'dropdown-menu-divider'\n\n}\n\n</script>\n","<template>\n    <div class=\"dropdown-menu\" :class=\"{'dropdown-menu-right': align === 'right', 'show': show}\" :aria-labelledby=\"id\" tabindex=\"-1\" @click=\"onClick\">\n        <template v-for=\"item in items\">\n            <component :is=\"prefix(item.type || 'item', 'dropdown-menu')\" v-bind=\"item\"/>\n        </template>\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport uuid from '../../Helpers/Uuid';\nimport prefix from '../../Helpers/Prefix';\nimport { each } from '../../Helpers/Functions';\nimport DropdownMenuItem from './DropdownMenuItem';\nimport DropdownMenuHeader from './DropdownMenuHeader';\nimport DropdownMenuDivider from './DropdownMenuDivider';\n\nexport default {\n\n    components: {\n        DropdownMenuItem,\n        DropdownMenuHeader,\n        DropdownMenuDivider\n    },\n\n    props: {\n\n        /**\n         * The `id` attribute on the toggle button and aria label. If no `id` is\n         * defined, then a UUID will be generated instead.\n         *\n         * @property Object\n         */\n        id: {\n            type: String,\n            default: uuid\n        },\n\n        /**\n         * Display the dropdown menu aligned left or right\n         *\n         * @property String\n         */\n        align: {\n            type: String,\n            default: 'left',\n            validate(value) {\n                return ['left', 'right'].indexOf(value.toLowerCase()) !== -1;\n            }\n        },\n\n        /**\n         * The default visibility of the dropdown menu.\n         *\n         * @property Object\n         */\n        show: Boolean,\n\n        /**\n         * An array of dropdown items. If an key/value pair isn't defined, the\n         * default value will be used. If no items are defined, then the slot\n         * named \"items\" can be used to define the options with HTML.\n         *\n         * [{\n         *      type: 'item', // String [item|header|divider]\n         *      href: '#', // String\n         *      label: 'Some label', // String\n         *      onClick: (event) => {} // Function\n         * }]\n         *\n         * @property Array\n         */\n        items: Array\n\n    },\n\n    methods: {\n\n        prefix: prefix,\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @param Object event\n         * @param Object item\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @param Object event\n         * @param Object item\n         * @return void\n         */\n        onItemClick(event, item) {\n            this.$emit('item:click', event, item);\n        }\n\n    },\n\n    mounted() {\n        each(this.$children, child => {\n            child.$on('click', event => {\n                this.onItemClick(event, child);\n            });\n        });\n    }\n\n}\n\n</script>\n","import DropdownMenu from './DropdownMenu';\nimport DropdownMenuDivider from './DropdownMenuDivider';\nimport DropdownMenuHeader from './DropdownMenuHeader';\nimport DropdownMenuItem from './DropdownMenuItem';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            DropdownMenu,\n            DropdownMenuDivider,\n            DropdownMenuHeader,\n            DropdownMenuItem\n        });\n    }\n\n});\n\nexport * from './DropdownMenuDivider';\nexport * from './DropdownMenuHeader';\nexport * from './DropdownMenuItem';\nexport default DropdownMenu;\n","<template>\n\n    <btn-group v-if=\"split\">\n        <template v-if=\"!dropleft\">\n            <a v-if=\"href\" :href=\"href\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"></i> {{label}}</slot>\n            </a>\n            <button v-else :type=\"type\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label-wrapper\"><i v-if=\"icon\" :class=\"icon\"></i> <slot name=\"label\">{{label}}</slot></slot>\n            </button>\n        </template>\n        <btn-group :class=\"{'dropup': dropup, 'dropright': dropright, 'dropleft': dropleft}\">\n            <button type=\"button\" aria-haspopup=\"true\" :aria-expanded=\"isDropdownShowing\" :id=\"id\" :class=\"toggleClasses\" @click.prevent=\"!isDropdownShowing ? show() : hide()\" @blur=\"onBlur\"></button>\n            <dropdown-menu\n                :id=\"id\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @click=\"onMenuClick\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </btn-group>\n        <template v-if=\"dropleft\">\n            <a v-if=\"href\" :href=\"href\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"></i> {{label}}</slot>\n            </a>\n            <button v-else :type=\"type\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label-wrapper\"><i v-if=\"icon\" :class=\"icon\"></i> <slot name=\"label\">{{label}}</slot></slot>\n            </button>\n        </template>\n    </btn-group>\n\n    <btn-group v-else :class=\"{'dropup': dropup, 'dropright': dropright, 'dropleft': dropleft}\" @click=\"onClick\">\n        <button aria-haspopup=\"true\" :aria-expanded=\"isDropdownShowing\" :type=\"type\" :id=\"id\" :class=\"toggleClasses\" @click.prevent=\"!isDropdownShowing ? show() : hide()\" @blur=\"onBlur\">\n            <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"></i> {{label}}</slot>\n        </button>\n\n        <dropdown-menu\n            :id=\"id\"\n            :align=\"align\"\n            :show.sync=\"isDropdownShowing\"\n            @click=\"onMenuClick\"\n            @item:click=\"onItemClick\">\n            <slot/>\n        </dropdown-menu>\n    </btn-group>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport Popper from 'popper.js';\nimport BtnGroup from '../BtnGroup';\nimport uuid from '../../Helpers/Uuid';\nimport prefix from '../../Helpers/Prefix';\nimport DropdownMenu from '../DropdownMenu';\nimport { each } from '../../Helpers/Functions';\n\nconst TAB_KEYCODE = 9;\nconst LEFT_ARROW_KEYCODE = 37;\nconst RIGHT_ARROW_KEYCODE = 39;\nconst UP_ARROW_KEYCODE = 38;\nconst DOWN_ARROW_KEYCODE = 40;\n\nlet ignoreBlurEvent = false;\n\nexport default {\n\n    name: 'btn-dropdown',\n\n    extends: Btn,\n\n    components: {\n        BtnGroup,\n        DropdownMenu\n    },\n\n    props: {\n\n        /**\n         * The button icon that appears before the label.\n         *\n         * @property String\n         */\n        autoclose: Boolean,\n\n        /**\n         * The button icon that appears before the label.\n         *\n         * @property String\n         */\n        icon: String,\n\n        /**\n         * The toggle button's label. If not defined as an attribute,\n         * you can override with the component's slot (inner html).\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * The `id` attribute on the toggle button and aria label. If no `id` is\n         * defined, then a UUID will be generated instead.\n         *\n         * @property String\n         */\n        id: {\n            type: String,\n            default: uuid\n        },\n\n        /**\n         * The button type attribute.\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'button'\n        },\n\n        /**\n         * Display the dropdown menu aligned left or right\n         *\n         * @property String\n         */\n        align: {\n            type: String,\n            default: 'left',\n            validate(value) {\n                return ['left', 'right'].indexOf(value.toLowerCase()) !== -1;\n            }\n        },\n\n        /**\n         * Display the dropdown button with a split toggle button.\n         *\n         * @property Boolean\n         */\n        split: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropup instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropright instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropright: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropleft instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropleft: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Focus on the the dropdown toggle button\n         *\n         * @return void\n         */\n        focus() {\n            this.$el.querySelector('.dropdown-toggle').focus();\n        },\n\n        /**\n         * Focus on the the dropdown toggle button\n         *\n         * @return void\n         */\n        queryFocusable() {\n            return this.$el.querySelector('.dropdown-menu').querySelectorAll('label, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        },\n\n        /**\n         * Method to check if the given element is focusable.\n         *\n         * @return void\n         */\n        isFocusable(element) {\n            const nodes = this.queryFocusable();\n\n            for(let i in nodes) {\n                if(element === nodes[i]) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Toggle the dropdown menu\n         *\n         * @return void\n         */\n        toggle() {\n            !this.isDropdownShowing ? this.show() : this.hide();\n        },\n\n        /**\n         * Show the dropdown menu\n         *\n         * @return void\n         */\n        show() {\n            this.isDropdownShowing = true;\n\n            this.$nextTick(() => {\n                let side = 'bottom';\n\n                if(this.dropup) {\n                    side = 'top'\n                }\n                else if(this.dropleft) {\n                    side = 'left'\n                }\n                else if(this.dropright) {\n                    side = 'right';\n                }\n\n                const menu = this.$el.querySelector('.dropdown-menu');\n                const toggle = this.$el.querySelector('.dropdown-toggle');\n                const position = [side, this.align === 'left' ? 'start' : 'end'];\n\n                new Popper(toggle, menu, {\n                    placement: position.join('-')\n                });\n\n                if(this.queryFocusable().item(0)) {\n                    this.$el.querySelector('input, select, textarea').focus();\n                }\n\n                this.$emit('show');\n            });\n        },\n\n        /**\n         * Hide the dropdown menu\n         *\n         * @return void\n         */\n        hide() {\n            this.$emit('toggle', this.isDropdownShowing = false);\n            this.$emit('hide');\n        },\n\n        /**\n         * A callback function for the `click` event for the action button\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.hide();\n            this.$emit('click', event);\n        },\n\n        /**\n         * A callback function for the `blur` event for the action button\n         *\n         * @return void\n         */\n        onBlur(event) {\n            if(!this.$el.contains(event.relatedTarget)) {\n                this.hide();\n            }\n        },\n\n        /**\n         * A callback function for the `item:click` event for the action button\n         *\n         * @return void\n         */\n        onMenuClick(event, item) {\n            if(event.target === this.$el.querySelector('.dropdown-menu')) {\n                this.focus();\n            }\n        },\n\n        /**\n         * A callback function for the `item:click` event for the action button\n         *\n         * @return void\n         */\n        onItemClick(event, item) {\n            if(!this.isFocusable(event.target)) {\n                this.hide();\n            }\n\n            this.$emit('item:click', event, item);\n        }\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return 'btn' + (this.outline ? '-outline' : '');\n        },\n\n        sizeableClassPrefix() {\n            return 'btn';\n        },\n\n        actionClasses() {\n            return [\n                'btn',\n                prefix(this.size, 'btn'),\n                prefix(this.variant, 'btn')\n            ].join(' ');\n        },\n\n        toggleClasses() {\n            return [\n                'btn',\n                'dropdown-toggle',\n                this.variantClass,\n                this.sizeableClass,\n                this.active ? 'active' : '',\n                this.block ? 'btn-block' : '',\n                (this.split ? 'dropdown-toggle-split' : ''),\n            ].join(' ');\n        }\n    },\n\n    data() {\n        return {\n            isDropdownShowing: false\n        };\n    },\n\n    mounted() {\n        each(this.$el.querySelectorAll('[type=submit], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]'), el => {\n            const keydown = event => {\n                const ignore = [\n                    LEFT_ARROW_KEYCODE,\n                    RIGHT_ARROW_KEYCODE,\n                    UP_ARROW_KEYCODE,\n                    DOWN_ARROW_KEYCODE,\n                    TAB_KEYCODE\n                ];\n\n                if(ignore.indexOf(event.keyCode) !== -1) {\n                    ignoreBlurEvent = true;\n                }\n            };\n\n            const blur = event => {\n                if(!ignoreBlurEvent) {\n                    this.focus();\n                }\n\n                ignoreBlurEvent = false;\n            };\n\n            const focus = event => {\n                ignoreBlurEvent = false;\n            };\n\n            const mousedown = event => {\n                ignoreBlurEvent = true;\n            };\n\n            el.addEventListener('blur', blur);\n            el.addEventListener('focus', focus);\n            el.addEventListener('keydown', keydown);\n            el.addEventListener('mousedown', mousedown);\n        });\n    }\n\n}\n\n</script>\n","import BtnDropdown from './BtnDropdown';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BtnDropdown\n        });\n    }\n\n});\n\nexport default BtnDropdown;\n","export default {\n\n    methods: {\n\n        getSlot(slot) {\n            return this.$slots[slot];\n        },\n\n        hasSlot(slot) {\n            return !!this.$slots[slot];\n        },\n\n        hasSlots(slots) {\n            for(let i in slots) {\n                if(!this.hasSlot(slots[i])) {\n                    return false;\n                }\n            }\n        }\n\n    },\n\n    computed: {\n\n        hasDefaultSlot() {\n            return this.hasSlot('default');\n        }\n\n    }\n\n}\n","<template>\n\n    <div :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card',\n\n    mixins: [\n        HasSlots,\n        Colorable,\n        MergeClasses\n    ],\n\n    computed: {\n\n        className() {\n            return this.$options.name\n        }\n\n    }\n\n}\n\n</script>\n","<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-body',\n\n    extends: Card\n\n}\n</script>\n","<template>\n\n    <btn-group class=\"card-btn-group\">\n        <slot/>\n    </btn-group>\n\n</template>\n\n<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-btn-group',\n\n    extends: Card\n\n}\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.card {\n    .card-btn-group,\n    .btn-group.card-btn-group {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > .btn {\n            flex: 1;\n            width: 100%;\n            text-align: center;\n            border-radius: 0;\n\n            &:not(:last-child)::after {\n                content: '';\n                position: absolute;\n                top: 50%;\n                right: 0;\n                padding: $font-size-base;\n                transform: translateY(-50%);\n                border-right: 1px solid $card-border-color;\n            }\n        }\n    }\n}\n</style>\n","<template>\n\n    <div class=\"card-deck\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'card-deck'\n\n}\n</script>\n","<template>\n\n    <component :is=\"tag\" :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </component>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-header',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The component's HTML tag name\n         *\n         * @property String\n         */\n        tag: {\n            type: String,\n            default: 'h5'\n        }\n\n    }\n\n}\n\n</script>\n","<script>\nimport CardHeader from './CardHeader';\n\nexport default {\n\n    name: 'card-footer',\n\n    extends: CardHeader,\n\n    props: {\n\n        /**\n         * The component's HTML tag name\n         *\n         * @property String\n         */\n        tag: {\n            type: String,\n            default: 'div'\n        }\n\n    }\n\n}\n\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(className)\" class=\"d-flex justify-content-center align-items-center\" :style=\"{height: unit(height)}\">\n        <div v-if=\"background\" class=\"card-img-bg\" :style=\"{background: background ? `url(${this.src})` : null, overflow: blur ? 'hidden' : 'inherit', filter: blur ? `blur(${unit(blur)})` : null}\"/>\n        <img v-if=\"!background && src\" :src=\"src\" :alt=\"alt\" class=\"img-fluid\"/>\n        <div class=\"card-img-content\" :class=\"{'text-truncate': textTruncate}\">\n            <slot/>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport unit from '../../Helpers/Unit';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-img',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The alt attribute\n         *\n         * @property String\n         */\n        alt: String,\n\n        /**\n         * Display the image as a background image fit with CSS cover.\n         *\n         * @property String\n         */\n        background: Boolean,\n\n        /**\n         * The amount to blur the background image.\n         *\n         * @property String\n         */\n        blur: [Number, String],\n\n        /**\n         * The height attribute\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * Truncate the text in the content\n         *\n         * @property String\n         */\n        textTruncate: Boolean,\n\n        /**\n         * The src attribute\n         *\n         * @property String\n         */\n        src: String\n\n    },\n\n    methods: {\n\n        unit(value) {\n            return unit(value);\n        }\n\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.card-img,\n.card-img-top,\n.card-img-bottom {\n    color: white;\n    position: relative;\n    text-shadow: 0 0 20px rgba(0, 0, 0, .5);\n\n    .card-img-bg {\n        z-index: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-size: cover !important;\n        background-position: center !important;\n        background-repeat: no-repeat !important;\n\n        & > img:first-child {\n            position: absolute;\n        }\n    }\n\n    .card-img-content {\n        flex: 1;\n        z-index: 1;\n        position: relative;\n    }\n\n    /*\n    & > :not(img) {\n        position: absolute;\n    }\n    */\n}\n</style>\n","<script>\nimport CardImg from './CardImg';\n\nexport default {\n\n    name: 'card-img-top',\n\n    extends: CardImg\n}\n\n</script>\n","<script>\nimport CardImg from './CardImg';\n\nexport default {\n\n    name: 'card-img-bottom',\n\n    extends: CardImg\n\n}\n</script>\n","<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-img-overlay',\n\n    extends: Card\n\n}\n\n</script>\n","<template>\n\n    <router-link :to=\"href\" :class=\"mergeClasses(className, colorableClasses)\" @click=\"onClick\">\n        <slot/>\n    </router-link>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-link',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The alt attribute\n         *\n         * @property String\n         */\n        alt: String,\n\n        /**\n         * The href attribute\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The to attribute\n         *\n         * @property String\n         */\n        to: [Object, String]\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n}\n\n</script>\n","<template>\n\n    <h6 :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </h6>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-subtitle',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ]\n\n}\n\n</script>\n","<template>\n\n    <h5 :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </h5>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-title',\n\n    mixins: [\n        Card,\n        MergeClasses\n    ]\n\n}\n\n</script>\n","import Card from './Card';\nimport CardBody from './CardBody';\nimport CardBtnGroup from './CardBtnGroup';\nimport CardDeck from './CardDeck';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgTop from './CardImgTop';\nimport CardImgBottom from './CardImgBottom';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardTitle from './CardTitle';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Card,\n            CardBody,\n            CardBtnGroup,\n            CardDeck,\n            CardFooter,\n            CardHeader,\n            CardImg,\n            CardImgTop,\n            CardImgBottom,\n            CardImgOverlay,\n            CardLink,\n            CardSubtitle,\n            CardTitle\n        });\n    }\n\n});\n\nexport * from './CardBody';\nexport * from './CardBtnGroup';\nexport * from './CardDeck';\nexport * from './CardFooter';\nexport * from './CardHeader';\nexport * from './CardImg';\nexport * from './CardImgTop';\nexport * from './CardImgBottom';\nexport * from './CardImgOverlay';\nexport * from './CardLink';\nexport * from './CardSubtitle';\nexport * from './CardTitle';\nexport default Card;\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"radio\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValue === value || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"$emit('change', $event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"radio\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValue === value || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"$emit('change', $event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormFeedback from '../FormFeedback';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'radio-field',\n\n    components: {\n        HelpText,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValue'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * Is this a custom element\n         *\n         * @property String\n         */\n        custom: Boolean,\n\n        /**\n         * Display the form field and label inline\n         *\n         * @property Function\n         */\n        inline: Boolean,\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checked: Boolean,\n\n        /**\n         * The checked value\n         *\n         * @property String\n         */\n        checkedValue: [Boolean, Number, String, Object],\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-check'\n        }\n\n    },\n\n    computed: {\n\n        labelClass() {\n            return prefix('label', this.controlClass);\n        },\n\n        inputClass() {\n            return prefix('input', this.controlClass);\n        },\n\n        inlineClass() {\n            return prefix('inline', this.controlClass);\n        },\n\n        controlClass() {\n            return this.custom ? 'custom-control' : this.defaultControlClass;\n        },\n\n        customControlClass() {\n            return this.custom ? prefix(this.$options.name.replace('-field', ''), 'custom') : '';\n        },\n\n        sizeableClass() {\n            return prefix(this.size, 'form-control');\n        }\n\n    }\n\n}\n\n</script>\n","import { wrap } from '../Functions';\nimport { findKey } from '../Functions';\n\nconst CALLBACKS = {};\n\nfunction id(callback) {\n    return findKey(CALLBACKS, compare => {\n        return callback.toString() == compare.toString();\n    });\n}\n\nfunction restart(callback, milliseconds) {\n    stop(id(callback));\n    start(callback, milliseconds);\n}\n\nfunction stop(id) {\n    clearTimeout(id);\n    delete CALLBACKS[id];\n}\n\nfunction start(callback, milliseconds) {\n    return CALLBACKS[setTimeout(callback, milliseconds)] = callback;\n}\n\nexport default function wait(milliseconds, callback) {\n    return new Promise((resolve, reject) => {\n        function resolver(resolver, response) {\n            return resolver(response);\n        };\n\n        restart(wrap(callback, callback => {\n            return callback(wrap(resolve, resolver), wrap(reject, resolver));\n        }), milliseconds);\n    });\n\n    return promise.finally(stop, stop);\n}\n\n\n/*\nimport { wrap } from '../Functions';\nimport { isFunction } from '../Functions';\n\nexport default function elapsed(delay, callback, elapsedCallback) {\n    let hasElapsed = false;\n\n    function start() {\n        return setInterval(() => {\n            hasElapsed = true;\n\n            if(isFunction(elapsedCallback)) {\n                elapsedCallback();\n            }\n        }, delay)\n    }\n\n    function stop() {\n        clearInterval(interval);\n    }\n\n    const interval = start(), promise = new Promise((resolve, reject) => {\n        function resolver(resolver, response) {\n            return resolver(response || hasElapsed);\n        };\n\n        callback(wrap(resolve, resolver), wrap(reject, resolver));\n    });\n\n    return promise.finally(stop, stop);\n}\n\n */\n"],"names":["t","e","inserted","el","isUndefined","classList","setAttribute","elements","contains","element","binding","value","vnode","editable","input","dispatchEvent","target","addEventListener","easings","first","isBoolean","Vue","VueInstaller","directives","dismissCount","clearInterval","interval","transition","then","delay","this","dismiss","[object Object]","show","isVisible","render","name","plugin","use","install","options","components","Alert","AlertLink","AlertClose","AlertHeading","mixins","Variant","MergeClasses","props","accessibility","String","href","pill","Boolean","label","Number","secondary","computed","$options","Badge","BaseClass","attributes","key","hasOwnProperty","getOwnPropertyNames","forEach","_this","getAttribute","keys","getAttributes","filter","match","reduce","obj","_this2","isObject","setAttributes","values","i","Response","data","extend","date","$data","$request","$date","DEFAULTS","transformRequest","transformResponse","Request","method","url","headers","params","sentAt","resolve","reject","axios","response","errors","$cancel","cancelToken","CancelToken","cancel","getPublicAttributes","$response","$errors","$error","fn","push","make","send","request","Model","$key","$files","files","$properties","properties","each","initialize","$exists","$changed","$attributes","fill","$initialized","endpoint","exists","id","concat","slice","call","arguments","join","get","indexOf","isArray","_this3","handleAttributeChange","_this4","getChangedAttributes","length","carry","count","total","toJSON","handlePrimaryKeyChange","isNull","config","_this5","hasFiles","toFormData","constructor","uri","_this6","item","JSON","stringify","form","append","replace","_this7","model","_this8","_this9","error","type","default","isFunction","Object","inline","novalidate","query","redirect","Function","onSubmit","event","submit","onSubmitSuccess","$emit","$router","onSubmitFailed","methods","onUploadProgress","BaseForm","active","to","BreadcrumbItem","items","Array","Breadcrumb","srOnly","srOnlyFocusable","screenreaderClasses","Colorable","Screenreaders","colorableClasses","HelpText","FormGroup","FormLabel","invalid","valid","FormFeedback","autocomplete","placeholder","required","group","pattern","feedback","bindEvents","defaultControlClass","hideLabel","spacing","size","validate","plaintext","readonly","disabled","helpText","maxlength","bind","context","blur","getInputField","focus","$el","querySelector","getFieldErrors","callbacks","map","callback","camelCase","invalidFeedback","validFeedback","controlClass","controlSizeClass","controlClasses","hasDefaultSlot","$slots","FormControl","ActivityIndicator","activity","InputField","extends","extensions","multiple","height","width","FileField","Btn","BtnFile","buttons","toggle","vertical","mergeClasses","btn-group","btn-group-toggle","btn-group-vertical","BtnGroup","BtnGroupToggle","BtnToolbar","proxy","apply","splice","preventDefault","Proxy","button","icon","header","DropdownMenuItem","DropdownMenuHeader","DropdownMenuDivider","uuid","align","toLowerCase","prefix","$children","child","$on","onItemClick","DropdownMenu","LEFT_ARROW_KEYCODE","RIGHT_ARROW_KEYCODE","UP_ARROW_KEYCODE","DOWN_ARROW_KEYCODE","autoclose","split","dropup","dropright","dropleft","querySelectorAll","queryFocusable","nodes","isDropdownShowing","hide","$nextTick","side","menu","placement","position","relatedTarget","isFocusable","outline","variant","variantClass","sizeableClass","block","ignore","keyCode","ignoreBlurEvent","keydown","mousedown","BtnDropdown","getSlot","slot","hasSlot","hasSlots","slots","HasSlots","Card","tag","CardHeader","alt","background","textTruncate","src","CardImg","CardBody","CardBtnGroup","CardDeck","CardFooter","CardImgTop","CardImgBottom","CardImgOverlay","CardLink","CardSubtitle","CardTitle","n","Event","linear","easeInQuart","filters","attrs","slides","Slides","slide","pickBy","Pagination","Promise","_createClass","rawName","_self","enableNextButton","$refs","isFinished","STYLE_ATTRIBUTES","tagName","add","document","expression","update","kebabCase","$watch","o","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","CALLBACKS","plugins"],"mappings":"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"}