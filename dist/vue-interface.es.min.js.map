{"version":3,"file":"vue-interface.es.min.js","sources":["../src/Directives/Autogrow/Autogrow.js","../src/Directives/Collapse/Collapse.js","../src/Directives/Slug/Slug.js","../src/Helpers/ScrollTo/ScrollTo.js","../src/main.js","../src/Components/Alert/Alert.vue","../src/Components/Alert/AlertLink.vue","../src/Components/Alert/index.js","../src/Components/Badge/Badge.vue","../src/Components/Badge/index.js","../src/Support/BaseClass.js","../src/Http/Request/Response.js","../src/Http/Request/Request.js","../src/Http/Model/Model.js","../src/Components/BaseForm/BaseForm.vue","../src/Components/BaseForm/index.js","../src/Components/Breadcrumb/BreadcrumbItem.vue","../src/Components/Breadcrumb/Breadcrumb.vue","../src/Components/Breadcrumb/index.js","../src/Mixins/Screenreaders/Screenreaders.js","../src/Components/HelpText/HelpText.vue","../src/Components/HelpText/index.js","../src/Components/FormGroup/FormGroup.vue","../src/Components/FormGroup/index.js","../src/Components/FormLabel/FormLabel.vue","../src/Components/FormLabel/index.js","../src/Components/FormFeedback/FormFeedback.vue","../src/Components/FormFeedback/index.js","../src/Mixins/FormControl/FormControl.js","../src/Components/InputField/InputField.vue","../src/Components/InputField/index.js","../src/Components/FileField/FileField.vue","../src/Components/FileField/index.js","../src/Components/BtnFile/BtnFile.vue","../src/Components/BtnFile/index.js","../src/Components/BtnGroup/BtnGroup.vue","../src/Components/BtnGroup/BtnGroupToggle.vue","../src/Components/BtnGroup/BtnToolbar.vue","../src/Components/BtnGroup/index.js","../src/Mixins/Proxy/Proxy.js","../src/Components/DropdownMenu/DropdownMenuItem.vue","../src/Components/DropdownMenu/DropdownMenuHeader.vue","../src/Components/DropdownMenu/DropdownMenuDivider.vue","../src/Components/DropdownMenu/DropdownMenu.vue","../src/Components/DropdownMenu/index.js","../src/Components/BtnDropdown/BtnDropdown.vue","../src/Components/BtnDropdown/index.js","../src/Mixins/HasSlots/HasSlots.js","../src/Components/Card/Card.vue","../src/Components/Card/CardBody.vue","../src/Components/Card/CardBtnGroup.vue","../src/Components/Card/CardDeck.vue","../src/Components/Card/CardHeader.vue","../src/Components/Card/CardFooter.vue","../src/Components/Card/CardImg.vue","../src/Components/Card/CardImgTop.vue","../src/Components/Card/CardImgBottom.vue","../src/Components/Card/CardImgOverlay.vue","../src/Components/Card/CardLink.vue","../src/Components/Card/CardSubtitle.vue","../src/Components/Card/CardTitle.vue","../src/Components/Card/index.js","../src/Components/RadioField/RadioField.vue","../src/Helpers/Wait/Wait.js"],"sourcesContent":["const STYLE_ATTRIBUTES = [\n    'font',\n    'fontFamily',\n    'fontKerning',\n    'fontSize',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantLigatures',\n    'fontVariantCaps',\n    'fontVariantNumeric',\n    'fontVariantEastAsian',\n    'fontWeight',\n    'lineHeight',\n    'letterSpacing',\n    'padding',\n    'margin',\n    'textAlign',\n    'textAlignLast',\n    'textDecoration',\n    'textDecorationLine',\n    'textDecorationStyle',\n    'textDecorationColor',\n    'textDecorationSkipInk',\n    'textDecorationPosition',\n    'textIndent',\n    'textRendering',\n    'textShadow',\n    'textSizeAdjust',\n    'textOverflow',\n    'textTransform',\n    'width',\n    'wordBreak',\n    'wordSpacing',\n    'wordWrap'\n];\n\nfunction int(str) {\n    if (typeof str === 'number') {\n        return str;\n    }\n    else if (!str || !str.replace) {\n        return 0;\n    }\n\n    return parseInt(str.replace(/[^\\d.]+/g, ''));\n}\n\nfunction input(div, el) {\n    div.innerHTML = el.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n}\n\nfunction height(el) {\n    return int(el.getBoundingClientRect().height);\n}\n\nfunction style(el, attr) {\n    return window.getComputedStyle(el)[attr];\n}\n\nfunction resize(target, div, minHeight, maxHeight) {\n    const dynamicHeight = Math.max(height(div) + int(style(div, 'lineHeight')), minHeight);\n    target.style.height = ((!maxHeight || dynamicHeight < maxHeight) ? dynamicHeight : maxHeight) + 'px';\n}\n\n/*\nfunction setMinHeight(div, el) {\n    div.style.minHeight = height(el) + 'px';\n}\n*/\n\nfunction mimic(el) {\n    const div = document.createElement('div');\n    const styles = window.getComputedStyle(el);\n\n    for (let i in STYLE_ATTRIBUTES) {\n        const key = STYLE_ATTRIBUTES[i];\n\n        div.style[key] = styles[key];\n    }\n\n    div.style.position = 'absolute';\n    div.style.bottom = '100%';\n    div.style.zIndex = -1;\n    div.style.visibility = 'hidden';\n\n    return div;\n}\n\nfunction init(el, maxHeight) {\n    const div = mimic(el);\n    const minHeight = height(el);\n\n    el.addEventListener('input', event => {\n        input(div, event.target);\n        resize(el, div, minHeight, maxHeight);\n    });\n\n    document.body.appendChild(div);\n\n    input(div, el);\n    resize(el, div, minHeight, maxHeight);\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if (el.tagName.toLowerCase() !== 'textarea') {\n            el = el.querySelector('textarea');\n        }\n\n        if (!el) {\n            throw new Error('A textarea is required for the v-autogrow directive.');\n        }\n\n        init(el, binding.value);\n    }\n\n};\n","import { isUndefined } from '../../Helpers/Functions';\nimport transition from '../../Helpers/Transition';\n\nfunction show(el, target, vnode) {\n    target.classList.remove('collapse');\n    target.classList.add('show');\n    target.$collapsedHeight = getComputedStyle(target).height;\n    target.classList.add('collapsing');\n\n    vnode.context.$nextTick(() => {\n        target.style.height = target.$collapsedHeight;\n    });\n\n    transition(target).then(delay => {\n        target.style.height = null;\n        target.classList.add('collapse');\n        target.classList.remove('collapsing');\n        el.classList.remove('collapsed');\n    });\n}\n\nfunction hide(el, target, vnode) {\n    target.style.height = target.$collapsedHeight;\n    target.classList.add('collapsing');\n    target.classList.remove('collapse');\n\n    vnode.context.$nextTick(() => {\n        target.style.height = 0;\n    });\n\n    transition(target).then(delay => {\n        target.style.height = null;\n        target.classList.add('collapse');\n        target.classList.remove('show', 'collapsing');\n        el.classList.add('collapsed');\n    });\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if (isUndefined(binding.value) || binding.value === true) {\n            el.classList.add('collapsed');\n            el.setAttribute('data-toggle', 'collapse');\n\n            const target = el.getAttribute('data-target') || el.getAttribute('href');\n            const elements = document.querySelectorAll(target);\n\n            el.addEventListener('click', event => {\n                elements.forEach(element => {\n                    if (!element.classList.contains('show')) {\n                        show(el, element, vnode);\n                    }\n                    else {\n                        hide(el, element, vnode);\n                    }\n                });\n\n                event.preventDefault();\n            });\n\n            elements.forEach(element => {\n                /*\n                if(!element.$collapsedHeight) {\n                    element.$collapsedHeight = getComputedStyle(element).height;\n                }\n                */\n\n                if (!element.classList.contains('collapse')) {\n                    element.classList.add('collapse');\n                }\n            });\n        }\n    }\n\n};\n","import { get, kebabCase } from '../../Helpers/Functions';\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        const input = el.querySelector('input, textarea') || el;\n        const value = get(vnode.context, binding.expression);\n\n        let editable = !input.value;\n\n        const update = value => {\n            if (editable) {\n                input.value = kebabCase(value);\n                input.dispatchEvent(new Event('input'));\n            }\n        };\n\n        vnode.context.$watch(binding.expression, update);\n\n        input.addEventListener('keyup', event => {\n            input.value = kebabCase(event.target.value) + (\n                event.target.value.match(/\\s$/) ? ' ' : ''\n            );\n        });\n\n        input.addEventListener('input', event => {\n            if (event instanceof InputEvent) {\n                editable = !event.target.value;\n            }\n        });\n\n        input.addEventListener('blur', event => {\n            input.value = kebabCase(event.target.value || binding.expression.split('.').reduce((o, i) => o[i], vnode.context));\n            input.dispatchEvent(new Event('input'));\n        });\n\n        !input.value && update(value);\n    }\n\n};\n","const easings = {\n    linear(t) {\n        return t;\n    },\n    easeInQuad(t) {\n        return t * t;\n    },\n    easeOutQuad(t) {\n        return t * (2 - t);\n    },\n    easeInOutQuad(t) {\n        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic(t) {\n        return t * t * t;\n    },\n    easeOutCubic(t) {\n        return (--t) * t * t + 1;\n    },\n    easeInOutCubic(t) {\n        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart(t) {\n        return t * t * t * t;\n    },\n    easeOutQuart(t) {\n        return 1 - (--t) * t * t * t;\n    },\n    easeInOutQuart(t) {\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t;\n    },\n    easeInQuint(t) {\n        return t * t * t * t * t;\n    },\n    easeOutQuint(t) {\n        return 1 + (--t) * t * t * t * t;\n    },\n    easeInOutQuint(t) {\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t;\n    }\n};\n\nexport default function scrollTo(destination, duration = 1000, easing = 'easeInQuad', viewport = false) {\n    if (!viewport) {\n        viewport = document.querySelector('body');\n    }\n\n    const viewportBounds = viewport.getBoundingClientRect();\n    const destinationBounds = destination.getBoundingClientRect();\n    const destinationOffsetToScroll = Math.ceil(destinationBounds.top + document.documentElement.scrollTop);\n\n    function isScrollBottom() {\n        return document.documentElement.scrollTop >= Math.floor(viewportBounds.height) - window.innerHeight;\n    }\n\n    return new Promise((resolve, reject) => {\n        const startTime = performance.now();\n        const isStartingBottom = isScrollBottom();\n\n        function scroll() {\n            const start = document.documentElement.scrollTop;\n            const time = Math.min(1, ((performance.now() - startTime) / duration));\n            const timeFunction = easings[easing](time);\n\n            window.scroll(0, Math.ceil((timeFunction * (destinationOffsetToScroll - start)) + start));\n\n            if (document.documentElement.scrollTop === destinationOffsetToScroll || (isScrollBottom() && !isStartingBottom)) {\n                resolve();\n                return;\n            }\n\n            requestAnimationFrame(scroll);\n        }\n\n        scroll();\n    });\n}\n","import * as filters from './Filters';\nimport * as plugins from './Plugins';\nimport * as components from './Components';\nimport * as directives from './Directives';\nimport VueInstaller from './Helpers/VueInstaller';\n\nexport * from './Http';\nexport * from './Mixins';\nexport * from './Helpers';\nexport * from './Plugins';\nexport * from './Components';\nexport * from './Directives';\nexport * from './Filters';\n\nexport default VueInstaller.use({\n\n    install(Vue) {\n        VueInstaller.plugins(Vue, plugins);\n        VueInstaller.filters(Vue, filters);\n        VueInstaller.directives(Vue, directives);\n        VueInstaller.components(Vue, components);\n    }\n\n});\n","<template>\n    <div class=\"alert\" :class=\"mergeClasses(variantClass, {show: isVisible, fade: fade})\" role=\"alert\">\n        <alert-heading v-if=\"title || heading\">{{ title || heading }}</alert-heading>\n        <slot/>\n        <alert-close v-if=\"dismissible\" @click=\"dismiss()\"/>\n        <progress-bar v-if=\"typeof show === 'number'\" :variant=\"variant\" :height=\"5\" :value=\"dismissCount\" :max=\"show\" class=\"my-3\"/>\n    </div>\n</template>\n\n<script>\nimport AlertClose from './AlertClose';\nimport AlertHeading from './AlertHeading';\nimport ProgressBar from '../ProgressBar';\nimport Variant from '../../Mixins/Variant';\nimport transition from '../../Helpers/Transition';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'alert',\n\n    components: {\n        AlertClose,\n        AlertHeading,\n        ProgressBar\n    },\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Is the alert dismissible\n         *\n         * @property Boolean\n         */\n        dismissible: Boolean,\n\n        /**\n         * The alert's title/heading\n         *\n         * @property Boolean\n         */\n        heading: String,\n\n        /**\n         * The alert's title/heading\n         *\n         * @property Boolean\n         */\n        title: String,\n\n        /**\n         * Should the alert fade when hidden\n         *\n         * @property Boolean\n         */\n        fade: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Should the alert be visible by default. If passed a number, alert\n         * will be shown for the number of seconds that are passed.\n         *\n         * @property Boolean\n         */\n        show: {\n            type: [Number, Boolean],\n            default: true\n        }\n\n    },\n\n    methods: {\n\n        dismiss() {\n            transition(this.$el).then(delay => {\n                this.$emit('dismissed');\n            });\n\n            this.$emit('update:visible', this.isVisible = false);\n        }\n\n    },\n\n    mounted() {\n        if (typeof this.show === 'number') {\n            const el = this.$el.querySelector('.progress-bar');\n\n            this.$emit('dismiss-countdown', this.dismissCount = this.show);\n\n            const interval = setInterval(() => {\n                this.$emit('dismiss-countdown', this.dismissCount -= 1);\n\n                if (!this.dismissCount) {\n                    clearInterval(interval);\n                    transition(el).then(delay => this.dismiss());\n                }\n            }, 1000);\n        }\n    },\n\n    data() {\n        return {\n            dismissCount: this.show,\n            isVisible: this.show\n        };\n    }\n\n};\n</script>\n","<template>\n    <a class=\"alert-link\"><slot/></a>\n</template>\n\n<script>\nexport default {\n\n    name: 'alert-link'\n\n};\n</script>\n","import Alert from './Alert';\nimport AlertLink from './AlertLink';\nimport AlertClose from './AlertClose';\nimport AlertHeading from './AlertHeading';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Alert,\n            AlertLink,\n            AlertClose,\n            AlertHeading\n        });\n    }\n\n});\n\nexport * from './AlertLink';\nexport * from './AlertClose';\nexport * from './AlertHeading';\nexport default Alert;\n","<template>\n    <a v-if=\"href\" :href=\"href\" class=\"badge\" :class=\"mergeClasses(classes, variantClass)\">\n        <slot>{{label}}</slot>\n        <span class=\"sr-only\" v-html=\"accessibility\"/>\n    </a>\n    <span v-else class=\"badge\" :class=\"mergeClasses(classes, variantClass)\">\n        <slot>{{label}}</slot>\n        <span class=\"sr-only\" v-html=\"accessibility\"/>\n    </span>\n</template>\n\n<script>\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'badge',\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The screen reader accessibility label.\n         *\n         * @property String\n         */\n        accessibility: String,\n\n        /**\n         * If an href attribute is passed, the badge becomes an anchor.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The badge appear as pill shaped.\n         *\n         * @property String\n         */\n        pill: Boolean,\n\n        /**\n         * The badge label.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The badge appear as secondary in size to the parent element.\n         *\n         * @property String\n         */\n        secondary: Boolean\n\n    },\n\n    computed: {\n\n        classes() {\n            return prefix({\n                'pill': this.pill,\n                'secondary': this.secondary\n            }, this.$options.name);\n        }\n    }\n};\n</script>\n","import Badge from './Badge';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Badge\n        });\n    }\n\n});\n\nexport default Badge;\n","import { isObject } from '../Helpers/Functions';\n\nexport default class BaseClass {\n    constructor(attributes) {\n        this.setAttribute(attributes);\n    }\n\n    getAttribute(key) {\n        return this.hasOwnProperty(key) ? this[key] : null;\n    }\n\n    getAttributes() {\n        const attributes = {};\n\n        Object.getOwnPropertyNames(this).forEach(key => {\n            attributes[key] = this.getAttribute(key);\n        });\n\n        return attributes;\n    }\n\n    getPublicAttributes() {\n        return Object.keys(this.getAttributes())\n            .filter(key => {\n                return !key.match(/^\\$/);\n            })\n            .reduce((obj, key) => {\n                obj[key] = this.getAttribute(key);\n\n                return obj;\n            }, {});\n    }\n\n    setAttribute(key, value) {\n        if (isObject(key)) {\n            this.setAttributes(key);\n        }\n        else {\n            this[key] = value;\n        }\n    }\n\n    setAttributes(values) {\n        for (const i in values) {\n            this.setAttribute(i, values[i]);\n        }\n    }\n}\n","import BaseClass from '../../Support/BaseClass';\nimport { extend } from '../../Helpers/Functions';\n\nexport default class Response extends BaseClass {\n    constructor(data) {\n        super(extend({\n            date: new Date()\n        }, data));\n    }\n\n    get data() {\n        return this.$data;\n    }\n\n    set data(value) {\n        this.$data = value;\n    }\n\n    get request() {\n        return this.$request;\n    }\n\n    set request(value) {\n        this.$request = value;\n    }\n\n    get date() {\n        return this.$date;\n    }\n\n    set date(value) {\n        this.$date = value;\n    }\n}\n","import axios from 'axios';\nimport Response from './Response';\nimport BaseClass from '../../Support/BaseClass';\nimport { extend, isObject } from '../../Helpers/Functions';\n\nconst DEFAULTS = {\n    transformRequest: [],\n    transformResponse: []\n};\n\nexport default class Request extends BaseClass {\n    constructor(method, url, attributes) {\n        super({\n            options: {},\n            data: {},\n            headers: {},\n            params: {},\n            url: url,\n            method: method\n        });\n\n        if (isObject(attributes)) {\n            this.setAttribute(attributes);\n        }\n    }\n\n    send(attributes) {\n        this.sentAt = new Date();\n        this.setAttributes(attributes);\n\n        return new Promise((resolve, reject) => {\n            axios(this.options).then(\n                data => resolve(this.response = new Response(data)),\n                errors => reject(this.errors = errors)\n            );\n        });\n    }\n\n    set cancel(value) {\n        this.$cancel = value;\n    }\n\n    get cancel() {\n        return this.$cancel || (() => {\n            throw new Error('The request has not been sent yet.');\n        });\n    }\n\n    get options() {\n        return extend({\n            cancelToken: new axios.CancelToken(cancel => {\n                this.cancel = cancel;\n\n                return cancel;\n            })\n        }, DEFAULTS, this.getPublicAttributes());\n    }\n\n    set options(attributes) {\n        this.setAttribute(attributes);\n    }\n\n    get response() {\n        return this.$response;\n    }\n\n    set response(value) {\n        this.$response = value;\n    }\n\n    get errors() {\n        return this.$errors;\n    }\n\n    set errors(value) {\n        this.$errors = value;\n    }\n\n    get passed() {\n        return !!this.response && !this.errors;\n    }\n\n    get failed() {\n        return !!this.response && !!this.$error;\n    }\n\n    static get transform() {\n        return {\n            request: this.transformRequest,\n            response: this.transformResponse\n        };\n    }\n\n    static get defaults() {\n        return DEFAULTS;\n    }\n\n    static set defaults(value) {\n        extend(DEFAULTS, value);\n    }\n\n    static transformRequest(fn) {\n        DEFAULTS.transformRequest.push(fn);\n    }\n\n    static transformResponse(fn) {\n        DEFAULTS.transformResponse.push(fn);\n    }\n\n    static get(url, attributes) {\n        return this.make('get', url).send(attributes);\n    }\n\n    static post(url, attributes) {\n        return this.make('post', url, attributes).send();\n    }\n\n    static put(url, attributes) {\n        return this.make('put', url, attributes).send();\n    }\n\n    static patch(url, data, attributes) {\n        return this.make('path', url, attributes).send();\n    }\n\n    static delete(url, attributes) {\n        return this.make('delete', url, attributes).send();\n    }\n\n    static make(method, url, attributes) {\n        return new this(method, url, attributes);\n    }\n}\n","import Request from '../Request';\nimport { each, isNull, pickBy, isArray, isObject, isUndefined } from '../../Helpers/Functions';\n\nexport default class Model {\n    /**\n     * Construct the model instance\n     *\n     * @param data object\n     * @return void\n     */\n    constructor(data = {}, params = {}) {\n        this.$request = null;\n        this.$key = this.key();\n        this.$files = this.files();\n        this.$properties = this.properties();\n\n        each(params, (value, key) => {\n            this[key] = value;\n        });\n\n        this.initialize(data);\n    }\n\n    /**\n     * Initialize the model with the given data without considering the data\n     * as \"changed\".\n     *\n     * @param data object\n     * @return this\n     */\n    initialize(data) {\n        this.$exists = false;\n        this.$changed = {};\n        this.$attributes = {};\n        this.fill(data);\n        this.$initialized = true;\n\n        return this;\n    }\n\n    /**\n     * Define the corresponding API endpoint slug\n     *\n     * @return string\n     */\n    endpoint() {\n        //\n    }\n\n    /**\n     * Define the corresponding uri schema.\n     *\n     * @return string\n     */\n    uri() {\n        return [\n            (this.endpoint() || ''),\n            (this.exists() ? this.id() : null)\n        ]\n            .filter(value => !!value)\n            .concat([].slice.call(arguments))\n            .join('/');\n    }\n\n    /**\n     * Return the primary key value for the model\n     *\n     * @return {Number}\n     */\n    id() {\n        return this.get(this.key());\n    }\n\n    /**\n     * Define a primary key. This is used to determine if the model exists and\n     * which endpoint to use.\n     *\n     * @return string\n     */\n    key() {\n        return 'id';\n    }\n\n    /**\n     * Return an array of properties that are sent to the API. If no properties\n     * are defined, then all the attributes will be included in the request.\n     *\n     * @return array\n     */\n    properties() {\n        return [];\n    }\n\n    /**\n     * Return an array of file properties that are sent to the API. If no fies\n     * are defined, then request will always be sent with JSON vs. multipart.\n     *\n     * @return array\n     */\n    files() {\n        return [];\n    }\n\n    /**\n     * Set the attributes in the model with the data given.\n     *\n     * @param data object\n     * @return this\n     */\n    fill(data) {\n        this.setAttributes(data);\n\n        return this;\n    }\n\n    /**\n     * Get one or more attributes from the model.\n     *\n     * @param data string|array\n     * @return array|mixed\n     */\n    get(key) {\n        if (isArray(key)) {\n            return this.getAttributes().filter((value, i) => {\n                return key.indexOf(i) !== -1;\n            });\n        }\n        else {\n            return this.getAttribute(key);\n        }\n    }\n\n    /**\n     * Alias for setAttributes() except this method returns `this`. This method\n     * also accepts an array of values or key/value pair.\n     *\n     * @return this\n     */\n    set(key, value = undefined) {\n        if (isArray(key) || isObject(key)) {\n            this.setAttributes(key);\n        }\n        else {\n            this.setAttribute(key, value);\n        }\n\n        return this;\n    }\n\n    /**\n     * Get all the defined attributes.\n     *\n     * @return array\n     */\n    getAttributes() {\n        return this.$attributes;\n    }\n\n    /**\n     * Get the changed attributes\n     *\n     * @return array\n     */\n    getChangedAttributes() {\n        return Object.keys(this.$changed);\n    }\n\n    /**\n     * Get the changed attributes\n     *\n     * @return array\n     */\n    getOriginalValue(key) {\n        return this.$changed[key] || this.$attributes[key];\n    }\n\n    /**\n     * Get the Request object.\n     *\n     * @return {mixed}\n     */\n    getRequest() {\n        return this.$request;\n    }\n\n    /**\n     * Get the unchanged attributes\n     *\n     * @return array\n     */\n    getUnchangedAttributes() {\n        return Object.keys(this.$attributes).filter(key => !(key in this.$changed));\n    }\n\n    /**\n     * Get an attribute with a given key. If no key is defined\n     *\n     * @param key string\n     * @param default undefined|mixed\n     * @return array\n     */\n    getAttribute(key, value = undefined) {\n        return this.$attributes[key] || value;\n    }\n\n    /**\n     * Set an array or object of data as attributes.\n     *\n     * @param attributes array|object\n     * @return void\n     */\n    setAttributes(data) {\n        if (isArray(data) || isObject(data)) {\n            each(data, (value, key) => {\n                this.setAttribute(key, value);\n            });\n        }\n    }\n\n    /**\n     * Set an attribute with a given key/value pair. This will track the changes\n     * in the model within the `this.$changed` property. If the primary key\n     * is set, it will also change the `this.$exists` property.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    setAttribute(key, value) {\n        if (this.getAttribute(key) !== value) {\n            this.handleAttributeChange(key, value);\n\n            if (isUndefined(value)) {\n                delete this.$attributes[key];\n            }\n            else {\n                this.$attributes[key] = value;\n            }\n        }\n    }\n\n    /**\n     * Revert the model to its original state.\n     *\n     * @return bool\n     */\n    revert() {\n        each(this.$changed, (value, key) => {\n            if (!isUndefined(value)) {\n                this.$attributes[key] = value;\n            }\n            else {\n                delete this.$attributes[key];\n            }\n        });\n\n        this.$changed = {};\n    }\n\n    /**\n     * Returns if the model has a primary key set.\n     *\n     * @return bool\n     */\n    exists() {\n        return !!this.$exists;\n    }\n\n    /**\n     * Returns the model been changed or not.\n     *\n     * @return bool\n     */\n    hasChanged(key) {\n        return !key ? this.getChangedAttributes().length > 0 : !isUndefined(this.$changed[key]);\n    }\n\n    /**\n     * Does the model have any File objects. If so, need to send as multipart.\n     *\n     * @return bool\n     */\n    hasFiles() {\n        function count(files, total = 0) {\n            return files.reduce((carry, value) => {\n                if (isArray(value)) {\n                    return carry + count(value, total);\n                }\n                else if (value instanceof File || value instanceof FileList) {\n                    return carry + 1;\n                }\n                else {\n                    return carry;\n                }\n            }, total);\n        }\n\n        return count(this.toJSON()) !== 0;\n    }\n\n    /**\n     * Handle settings the $changed attributes when an attribute value is set.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    handleAttributeChange(key, value) {\n        if (this.$initialized) {\n            if (this.$changed[key] === value) {\n                delete this.$changed[key];\n            }\n            else if (!(key in this.$changed)) {\n                this.$changed[key] = this.getAttribute(key);\n            }\n        }\n\n        this.handlePrimaryKeyChange(key, value);\n    }\n\n    /**\n     * Set an array or object of data as attributes.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    handlePrimaryKeyChange(key, value) {\n        if (this.$key === key) {\n            this.$exists = !isUndefined(value) && !isNull(value);\n        }\n    }\n\n    /**\n     * Save the model to the database\n     *\n     * @param data object\n     * @return bool\n     */\n    save(data = {}, config = {}) {\n        this.fill(data);\n\n        return new Promise((resolve, reject) => {\n            const data = !this.hasFiles() ? this.toJSON() : this.toFormData();\n            const method = !this.exists() || this.hasFiles() ? 'post' : 'put';\n\n            this.$request = this.constructor.request(method, config.uri || this.uri(), config);\n            this.$request.send({\n                data: data\n            }).then(response => resolve(this.fill(response)), reject);\n        });\n    }\n\n    /**\n     * Delete an existing model\n     *\n     * @param  {object} config\n     * @return {bool}\n     */\n    delete(config = {}) {\n        return new Promise((resolve, reject) => {\n            if (!this.exists()) {\n                reject(new Error('The model must have a primary key before it can be delete.'));\n            }\n\n            this.$request = this.constructor.request('delete', config.uri || this.uri(), config);\n            this.$request.send().then(response => {\n                resolve(response);\n            }, reject);\n        });\n    }\n\n    /**\n     * Cancel the current HTTP request if one exists.\n     *\n     * @return {self}\n     */\n    cancel() {\n        if (this.$request) {\n            this.$request.cancel();\n        }\n\n        return this;\n    }\n\n    /**\n     * Convert the Model instance to a FormData instance\n     *\n     * @return Object\n     */\n    toFormData() {\n        const form = new FormData();\n\n        each(this.toJSON(), (value, key) => {\n            if (isArray(value)) {\n                each(value, item => {\n                    if (!(item instanceof File) && (isObject(item) || isArray(item))) {\n                        item = JSON.stringify(item);\n                    }\n\n                    form.append(key.replace(/(.+)(\\[.+\\]?)$/, '$1') + '[]', item);\n                });\n            }\n            else if (!(value instanceof File) && isObject(value)) {\n                form.append(key, JSON.stringify(value));\n            }\n            else if (!isNull(value)) {\n                form.append(key, value);\n            }\n        });\n\n        return form;\n    }\n\n    /**\n     * Convert the instance to JSON payload\n     *\n     * @return Object\n     */\n    toJSON() {\n        return pickBy(this.$attributes, (value, key) => {\n            return !this.$properties.length || (\n                key === this.key() || this.$properties.indexOf(key) !== -1\n            );\n        });\n    }\n\n    /**\n     * Convert the model to a string\n     *\n     * @return String\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * Alias for toJSON\n     *\n     * @return Object\n     */\n    toJson() {\n        return this.toJSON();\n    }\n\n    /**\n     * Search for a collection of models\n     *\n     * @param data object\n     * @return bool\n     */\n    static search(params = {}, config = {}) {\n        const model = new this();\n\n        return new Promise((resolve, reject) => {\n            model.$request = this.request('get', (config.uri || model.uri()), config);\n            model.$request.send().then(response => {\n                resolve(response);\n            }, errors => {\n                reject(errors);\n            });\n        });\n    }\n\n    /**\n     * Find an existing model by id\n     *\n     * @param data object\n     * @return bool\n     */\n    static find(id, config = {}) {\n        return new Promise((resolve, reject) => {\n            const model = new this();\n            model.$request = this.request('get', (config.uri || model.uri(id)), config);\n            model.$request.send().then(response => {\n                resolve(model.initialize(response));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Create a request from the model data\n     *\n     * @param data object\n     * @return bool\n     */\n    static request(method, url, config = {}) {\n        return Request.make(method, url, config);\n    }\n}\n","<template>\n    <form @submit.prevent=\"onSubmit\" :class=\"{'form-inline': inline}\" :novalidate=\"novalidate\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nimport Model from '../../Http/Model/Model';\nimport { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    props: {\n\n        /**\n         * The Model method used to send the request.\n         *\n         * @property Boolean\n         */\n        method: {\n            type: String,\n            default: 'save',\n            validate(value) {\n                return this.model && isFunction(this.model[value]);\n            }\n        },\n\n        /**\n         * An object of form data\n         *\n         * @property Object\n         */\n        data: {\n            type: Object,\n            default: () => {\n                return {};\n            }\n        },\n\n        /**\n         * A JSON object of request headers\n         *\n         * @property Object\n         */\n        headers: Object,\n\n        /**\n         * Display the form fields inline\n         *\n         * @property Object\n         */\n        model: {\n            type: Object,\n            validate(value) {\n                return value instanceof Model;\n            }\n        },\n\n        /**\n         * Display the form fields inline\n         *\n         * @property Boolean\n         */\n        inline: Boolean,\n\n        /**\n         * A callback function for the `submit` event\n         *\n         * @property Boolean\n         */\n        novalidate: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * A JSON object of key/value pairs to build the query string.\n         *\n         * @property Object\n         */\n        query: Object,\n\n        /**\n         * A URI or URL used to redirect user after form submits successfully.\n         *\n         * @property Function|String\n         */\n        redirect: [Object, String, Function],\n\n        /**\n         * A callback function for the `submit` event\n         *\n         * @property Function\n         */\n        onSubmit: {\n            type: Function,\n            default(event) {\n                this.model && this.submit(event);\n            }\n        },\n\n        /**\n         * A callback function for the `submit:success` event\n         *\n         * @property Function\n         */\n        onSubmitSuccess: {\n            type: Function,\n            default(event, data) {\n                this.$emit('submit:success', event, data);\n                this.$emit('submit:complete', event, true, data);\n\n                if (this.redirect && isFunction(this.redirect)) {\n                    this.redirect(this);\n                }\n                else if (this.redirect && this.$router) {\n                    this.$router.push(this.redirect);\n                }\n            }\n        },\n\n        /**\n         * A callback function for the `submit:success` event\n         *\n         * @property Function\n         */\n        onSubmitFailed: {\n            type: Function,\n            default(event, errors) {\n                this.$emit('submit:failed', event, errors);\n                this.$emit('submit:complete', event, false, errors);\n            }\n        }\n\n    },\n\n    methods: {\n\n        submit(event) {\n            this.$emit('submit', event);\n\n            return this.model[this.method](this.data, {\n                query: this.query,\n                headers: this.headers,\n                onUploadProgress: event => {\n                    this.$emit('submit:progress', event);\n                }\n            }).then((data) => {\n                this.onSubmitSuccess(event, data);\n            }, (errors) => {\n                this.onSubmitFailed(event, errors);\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            errors: {}\n        };\n    }\n\n};\n</script>\n","import BaseForm from './BaseForm';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BaseForm\n        });\n    }\n\n});\n\nexport default BaseForm;\n","<template>\n    <li class=\"breadcrumb-item\" :class=\"{'active': active}\" :aria-current=\"active ? 'page' : false\">\n        <a v-if=\"!active && href\" :href=\"href\">\n            <slot>{{label}}</slot>\n        </a>\n        <router-link v-else-if=\"!active && to\" :to=\"to\">\n            <slot>{{label}}</slot>\n        </router-link>\n        <template v-else>\n            <slot>{{label}}</slot>\n        </template>\n    </li>\n</template>\n\n<script>\nexport default {\n\n    name: 'breadcrumb-item',\n\n    props: {\n\n        /**\n         * Is the item active?\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * An href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * An breadcrumb label\n         *\n         * @prop {String}\n         */\n        label: String,\n\n        /**\n         * The to attribute which is passed to the <router-link> component.\n         *\n         * @prop {Object}\n         */\n        to: [String, Object]\n\n    }\n\n};\n</script>\n","<template>\n    <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n            <breadcrumb-item\n                v-if=\"items.length\"\n                v-for=\"(item, i) in items\"\n                v-bind=\"item\"\n                :key=\"i\"\n                :current=\"i === item.length - 1\"\n            />\n            <slot/>\n        </ol>\n    </nav>\n</template>\n\n<script>\nimport BreadcrumbItem from './BreadcrumbItem';\n\nexport default {\n\n    name: 'breadcrumb',\n\n    components: {\n        BreadcrumbItem\n    },\n\n    props: {\n\n        /**\n         * An array of breadcrumbs\n         *\n         * @prop {Array}\n         */\n        items: Array\n\n    }\n\n};\n</script>\n","import Breadcrumb from './Breadcrumb';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Breadcrumb,\n            BreadcrumbItem\n        });\n    }\n\n});\n\nexport default Breadcrumb;\n","export default {\n\n    props: {\n\n        /**\n         * Should show only for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnly: Boolean,\n\n        /**\n         * Should be focusable for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnlyFocusable: Boolean\n\n    },\n\n    computed: {\n        screenreaderClasses() {\n            return {\n                'sr-only': this.srOnly,\n                'sr-only-focusable': this.srOnlyFocusable\n            };\n        }\n    }\n\n};\n","<template>\n\n    <small class=\"form-text\" :class=\"classes\"><slot /></small>\n\n</template>\n\n<script>\n\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'help-text',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n</script>\n","import HelpText from './HelpText';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            HelpText\n        });\n    }\n\n});\n\nexport default HelpText;\n","<template>\n\n    <div class=\"form-group\"><slot/></div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'form-group'\n\n};\n</script>\n","import FormGroup from './FormGroup';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormGroup\n        });\n    }\n\n});\n\nexport default FormGroup;\n","<template>\n\n    <label :class=\"classes\"><slot/></label>\n\n</template>\n\n<script>\n\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'form-label',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n</script>\n","import FormLabel from './FormLabel';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormLabel\n        });\n    }\n\n});\n\nexport default FormLabel;\n","<template>\n\n    <div :class=\"{'invalid-feedback': invalid, 'valid-feedback': valid && !invalid}\">\n        <slot>{{label}}</slot>\n    </div>\n\n</template>\n\n<script>\n\nimport Colorable from '../../Mixins/Colorable/Colorable';\n\nexport default {\n\n    name: 'form-feedback',\n\n    mixins: [\n        Colorable\n    ],\n\n    props: {\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        invalid: Boolean,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        valid: Boolean\n\n    }\n\n};\n</script>\n","import FormFeedback from './FormFeedback';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormFeedback\n        });\n    }\n\n});\n\nexport default FormFeedback;\n","import prefix from '../../Helpers/Prefix';\nimport { each, isArray, isObject, camelCase, isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    props: {\n\n        /**\n         * The autocomplete attribute value.\n         *\n         * @property String\n         */\n        autocomplete: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        id: [Number, String],\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The field name attribute value.\n         *\n         * @property String\n         */\n        name: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        value: {\n            default: null\n        },\n\n        /**\n         * The placeholder attribute value.\n         *\n         * @property String\n         */\n        placeholder: String,\n\n        /**\n         * Is the field required.\n         *\n         * @property String\n         */\n        required: Boolean,\n\n        /**\n         * Add form-group wrapper to input\n         *\n         * @property String\n         */\n        group: {\n            type: Boolean,\n            value: true\n        },\n\n        /**\n         * The regex pattern for validation.\n         *\n         * @property String\n         */\n        pattern: String,\n\n        /**\n         * An inline field validation error.\n         *\n         * @property String|Boolean\n         */\n        error: String,\n\n        /**\n         * An inline field validation errors passed as object with key/value\n         * pairs. If errors passed as an object, the form name will be used for\n         * the key.\n         *\n         * @property Object|Boolean\n         */\n        errors: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n\n        /**\n         * Some feedback to add to the field once the field is successfully\n         * valid.\n         *\n         * @property String\n         */\n        feedback: [String, Array],\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'change', 'click', 'keyup', 'keydown', 'progress', 'paste'];\n            }\n        },\n\n        /**\n         * The default class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control'\n        },\n\n        /**\n         * Hide the label for browsers, but leave it for screen readers.\n         *\n         * @property String\n         */\n        hideLabel: Boolean,\n\n        /**\n         * Additional margin/padding classes for fine control of spacing\n         *\n         * @property String\n         */\n        spacing: String,\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        },\n\n        /**\n         * Display the form field inline\n         *\n         * @property String\n         */\n        inline: Boolean,\n\n        /**\n         * If the form control is readonly, display only as text?\n         *\n         * @property String\n         */\n        plaintext: Boolean,\n\n        /**\n         * Is the form control readonly?\n         *\n         * @property String\n         */\n        readonly: Boolean,\n\n        /**\n         * Is the form control disabled?\n         *\n         * @property String\n         */\n        disabled: Boolean,\n\n        /**\n         * Some instructions to appear under the field label\n         *\n         * @property String\n         */\n        helpText: [Number, String],\n\n        /**\n         * The maxlength attribute\n         *\n         * @property String\n         */\n        maxlength: [Number, String]\n\n    },\n\n    directives: {\n        bindEvents: {\n            bind(el, binding, vnode) {\n                const events = binding.value || vnode.context.bindEvents;\n\n                each(events, name => {\n                    el.addEventListener(name, event => {\n                        vnode.context.$emit(name, event);\n                    });\n                });\n            }\n        }\n    },\n\n    methods: {\n\n        blur() {\n            if (this.getInputField()) {\n                this.getInputField().blur();\n            }\n        },\n\n        focus() {\n            if (this.getInputField()) {\n                this.getInputField().focus();\n            }\n        },\n\n        getInputField() {\n            return this.$el.querySelector('.form-control, input, select, textarea');\n        },\n\n        getFieldErrors() {\n            let errors = this.error || this.errors;\n\n            if (isObject(this.errors)) {\n                errors = this.errors[this.name || this.id];\n            }\n\n            return !errors || isArray(errors) || isObject(errors) ? errors : [errors];\n        }\n\n    },\n\n    computed: {\n\n        callbacks() {\n            return this.bindEvents.map(event => {\n                return {\n                    name: event,\n                    callback: this[camelCase(['on', event].join(' '))]\n                };\n            }).filter(event => !isUndefined(event.callback));\n        },\n\n        invalidFeedback() {\n            if (this.error) {\n                return this.error;\n            }\n\n            const errors = this.getFieldErrors();\n\n            return isArray(errors) ? errors.join('<br>') : errors;\n        },\n\n        validFeedback() {\n            return isArray(this.feedback) ? this.feedback.join('<br>') : this.feedback;\n        },\n\n        controlClass() {\n            return this.defaultControlClass + (this.plaintext ? '-plaintext' : '');\n        },\n\n        controlSizeClass() {\n            return prefix(this.size, this.controlClass);\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : '')\n            ].join(' ');\n        },\n\n        hasDefaultSlot() {\n            return !!this.$slots.default;\n        }\n\n    }\n\n};\n","<template>\n\n    <form-group class=\"input-field\" :class=\"{'has-activity': activity}\">\n\n        <slot name=\"label\">\n            <form-label ref=\"label\" v-if=\"label || hasDefaultSlot\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <div class=\"position-relative\">\n            <slot name=\"control\">\n                <input\n                    ref=\"control\"\n                    :id=\"id\"\n                    :type=\"type\"\n                    :name=\"name\"\n                    :value=\"value\"\n                    :pattern=\"pattern\"\n                    :readonly=\"readonly\"\n                    :required=\"required\"\n                    :maxlength=\"maxlength\"\n                    :placeholder=\"placeholder\"\n                    :disabled=\"disabled || readonly\"\n                    :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                    :aria-label=\"label\"\n                    :aria-describedby=\"id\"\n                    :autocomplete=\"autocomplete\"\n                    v-bind-events=\"bindEvents\"\n                    @input=\"$emit('input', $event.target.value)\"\n                />\n            </slot>\n\n            <slot name=\"activity\">\n                <transition name=\"slide-fade\">\n                    <activity-indicator key=\"test\" v-if=\"activity\" ref=\"activity\" type=\"dots\" :size=\"size\"/>\n                </transition>\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" ref=\"feedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-else-if=\"invalidFeedback\" ref=\"feedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n        </div>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" ref=\"help\" v-html=\"helpText\" />\n        </slot>\n        \n    </form-group>\n\n</template>\n\n<script>\n\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport ActivityIndicator from '../ActivityIndicator';\n\nexport default {\n\n    name: 'input-field',\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.input-field {\n    position: relative;\n\n    .activity-indicator {\n        position: absolute;\n        right: 0;\n        top: 50%;\n        transform: translate(-1rem, -50%);\n        transition: all .25s ease-in;\n    }\n\n    .activity-indicator {\n    }\n\n    .slide-fade-enter {\n    }\n\n    .slide-fade-enter-active {\n    }\n\n    .slide-fade-leave-active {\n\n    }\n\n    .slide-fade-enter,\n    .slide-fade-leave-to {\n        opacity: 0;\n        transform: translate(25%, -50%);\n    }\n}\n</style>\n","import InputField from './InputField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            InputField\n        });\n    }\n\n});\n\nexport default InputField;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label || hasDefaultSlot\" :for=\"id\">\n                <slot>{{label}}</slot>\n            </form-label>\n        </slot>\n\n        <div class=\"custom-file\">\n\n            <slot name=\"placeholder\">\n                <form-label :class=\"mergeClasses(colorableClasses, 'custom-file-label')\" :for=\"id\" v-html=\"placeholder || 'Choose file'\" />\n            </slot>\n\n            <input\n                v-bind-events\n                type=\"file\"\n                :class=\"controlClasses\"\n                :id=\"id\"\n                :width=\"width\"\n                :height=\"height\"\n                :required=\"required\"\n                :multiple=\"multiple\"\n                :readonly=\"readonly\"\n                @change=\"$emit('change', $event.target.files)\">\n\n            <slot name=\"help\">\n                <help-text v-if=\"helpText\" v-html=\"helpText\" />\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n\n        </div>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport InputField from '../InputField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'file-field',\n\n    extends: InputField,\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        MergeClasses\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'custom-file-input'\n        },\n\n        /**\n         * An array of valid extensions\n         *\n         * @property String\n         */\n        extensions: Array,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        multiple: Boolean,\n\n        /**\n         * The height attribute for the control element\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * The width attribute for the control element\n         *\n         * @property String\n         */\n        width: [Number, String]\n\n    }\n\n};\n</script>\n","import FileField from './FileField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FileField\n        });\n    }\n\n});\n\nexport default FileField;\n","<template>\n\n    <btn class=\"btn-file\" :type=\"type\" :variant=\"variant\" :block=\"block\" :size=\"size\" :disabled=\"disabled\" :active=\"active\">\n        <slot/>\n\n        <input\n            v-bind-events\n            type=\"file\"\n            :class=\"controlClasses\"\n            :id=\"id\"\n            :width=\"width\"\n            :height=\"height\"\n            :required=\"required\"\n            :multiple=\"multiple\"\n            :readonly=\"readonly\"\n            v-on:change=\"$emit('change', multiple ? $event.target.files : $event.target.files[0])\">\n    </btn>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport FileField from '../FileField';\n\nexport default {\n\n    name: 'btn-file',\n\n    mixins: [\n        FileField\n    ],\n\n    components: {\n        Btn,\n        FileField\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * The type attribute for the button. Not applied if an anchor\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'button'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.btn-file {\n    cursor: pointer;\n    position: relative;\n\n    input {\n        z-index: 1;\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n}\n</style>\n","import BtnFile from './BtnFile';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BtnFile\n        });\n    }\n\n});\n\nexport default BtnFile;\n","<template>\n    <div :class=\"classes\" :data-toggle=\"toggle ? 'buttons' : false\" role=\"group\">\n        <btn v-if=\"buttons\" v-for=\"(button, i) in buttons\" :key=\"i\" v-bind=\"button\" />\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'btn-group',\n\n    components: {\n        Btn\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * An array of buttons\n         *\n         * @type {Array}\n         */\n        buttons: Array,\n\n        /**\n         * Denote the button group as toggle buttons\n         *\n         * @type {Boolean}\n         */\n        toggle: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @type {Boolean}\n         */\n        vertical: Boolean\n\n    },\n\n    computed: {\n\n        classes() {\n            return this.mergeClasses(\n                this.colorableClasses, {\n                    'btn-group': !this.vertical,\n                    'btn-group-toggle': this.toggle,\n                    'btn-group-vertical': this.vertical\n                }\n            );\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"btn-group-toggle\" data-toggle=\"buttons\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'btn-group-toggle'\n\n};\n</script>\n","<template>\n    <div class=\"btn-toolbar\" role=\"toolbar\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'btn-toolbar'\n\n};\n</script>\n","import BtnGroup from './BtnGroup.vue';\nimport BtnGroupToggle from './BtnGroupToggle';\nimport BtnToolbar from './BtnToolbar';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BtnGroup,\n            BtnGroupToggle,\n            BtnToolbar\n        });\n    }\n\n});\n\nexport default BtnGroup;\n","import { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    methods: {\n        proxy(callback, event) {\n            if (isFunction(callback)) {\n                callback.apply(this, [].slice.call(arguments).splice(1));\n                event.preventDefault();\n            }\n        }\n    }\n\n};\n","<template>\n    <component\n        :is=\"component\"\n        :href=\"href || (component === 'a' ? '#' : false)\"\n        class=\"dropdown-item\"\n        :class=\"{'active': active}\"\n        :type=\"component === 'button' ? 'button' : false\"\n        @click=\"onClick\">\n        <i v-if=\"icon\" :class=\"icon\"/>\n        <slot>{{label}}</slot>\n    </component>\n</template>\n\n<script>\nimport Proxy from '../../Mixins/Proxy/Proxy';\n\nexport default {\n\n    mixins: [\n        Proxy\n    ],\n\n    props: {\n\n        /**\n         * Is the menu item active.\n         *\n         * @property Object\n         */\n        active: Boolean,\n\n        /**\n         * Is the menu item a button\n         *\n         * @property Object\n         */\n        button: Boolean,\n\n        /**\n         * The `element` attribute.\n         *\n         * @property Object\n         */\n        element: String,\n\n        /**\n         * The `href` attribute.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * The icon of the dropdown menu item.\n         *\n         * @property Object\n         */\n        icon: String,\n\n        /**\n         * The label of the dropdown menu item.\n         *\n         * @property Object\n         */\n        label: String\n\n    },\n\n    computed: {\n\n        component() {\n            return this.element || (this.button ? 'button' : 'a');\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @property Object\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <h5 class=\"dropdown-header\">\n        <slot>{{header}}</slot>\n    </h5>\n</template>\n\n<script>\n\nexport default {\n\n    name: 'dropdown-menu-header',\n\n    props: {\n\n        /**\n         * The value of the header\n         *\n         * @property Object\n         */\n        header: String\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n\nexport default {\n\n    name: 'dropdown-menu-divider'\n\n};\n</script>\n","<template>\n    <div class=\"dropdown-menu\" :class=\"{'dropdown-menu-right': align === 'right', 'show': show}\" :aria-labelledby=\"id\" tabindex=\"-1\" @click=\"onClick\">\n        <template v-for=\"item in items\">\n            <component :is=\"prefix(item.type || 'item', 'dropdown-menu')\" v-bind=\"item\"/>\n        </template>\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport uuid from '../../Helpers/Uuid';\nimport prefix from '../../Helpers/Prefix';\nimport { each } from '../../Helpers/Functions';\nimport DropdownMenuItem from './DropdownMenuItem';\nimport DropdownMenuHeader from './DropdownMenuHeader';\nimport DropdownMenuDivider from './DropdownMenuDivider';\n\nexport default {\n\n    components: {\n        DropdownMenuItem,\n        DropdownMenuHeader,\n        DropdownMenuDivider\n    },\n\n    props: {\n\n        /**\n         * The `id` attribute on the toggle button and aria label. If no `id` is\n         * defined, then a UUID will be generated instead.\n         *\n         * @property Object\n         */\n        id: {\n            type: String,\n            default: uuid\n        },\n\n        /**\n         * Display the dropdown menu aligned left or right\n         *\n         * @property String\n         */\n        align: {\n            type: String,\n            default: 'left',\n            validate(value) {\n                return ['left', 'right'].indexOf(value.toLowerCase()) !== -1;\n            }\n        },\n\n        /**\n         * The default visibility of the dropdown menu.\n         *\n         * @property Object\n         */\n        show: Boolean,\n\n        /**\n         * An array of dropdown items. If an key/value pair isn't defined, the\n         * default value will be used. If no items are defined, then the slot\n         * named \"items\" can be used to define the options with HTML.\n         *\n         * [{\n         *      type: 'item', // String [item|header|divider]\n         *      href: '#', // String\n         *      label: 'Some label', // String\n         *      onClick: (event) => {} // Function\n         * }]\n         *\n         * @property Array\n         */\n        items: Array\n\n    },\n\n    methods: {\n\n        prefix: prefix,\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @param Object event\n         * @param Object item\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @param Object event\n         * @param Object item\n         * @return void\n         */\n        onItemClick(event, item) {\n            this.$emit('item:click', event, item);\n        }\n\n    },\n\n    mounted() {\n        each(this.$children, child => {\n            child.$on('click', event => {\n                this.onItemClick(event, child);\n            });\n        });\n    }\n\n};\n</script>\n","import DropdownMenu from './DropdownMenu';\nimport DropdownMenuDivider from './DropdownMenuDivider';\nimport DropdownMenuHeader from './DropdownMenuHeader';\nimport DropdownMenuItem from './DropdownMenuItem';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            DropdownMenu,\n            DropdownMenuDivider,\n            DropdownMenuHeader,\n            DropdownMenuItem\n        });\n    }\n\n});\n\nexport * from './DropdownMenuDivider';\nexport * from './DropdownMenuHeader';\nexport * from './DropdownMenuItem';\nexport default DropdownMenu;\n","<template>\n\n    <btn-group v-if=\"split\">\n        <template v-if=\"!dropleft\">\n            <a v-if=\"href\" :href=\"href\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"></i> {{label}}</slot>\n            </a>\n            <button v-else :type=\"type\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label-wrapper\"><i v-if=\"icon\" :class=\"icon\"></i> <slot name=\"label\">{{label}}</slot></slot>\n            </button>\n        </template>\n        <btn-group :class=\"{'dropup': dropup, 'dropright': dropright, 'dropleft': dropleft}\">\n            <button type=\"button\" aria-haspopup=\"true\" :aria-expanded=\"isDropdownShowing\" :id=\"id\" :class=\"toggleClasses\" @click.prevent=\"!isDropdownShowing ? show() : hide()\" @blur=\"onBlur\"></button>\n            <dropdown-menu\n                :id=\"id\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @click=\"onMenuClick\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </btn-group>\n        <template v-if=\"dropleft\">\n            <a v-if=\"href\" :href=\"href\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"></i> {{label}}</slot>\n            </a>\n            <button v-else :type=\"type\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label-wrapper\"><i v-if=\"icon\" :class=\"icon\"></i> <slot name=\"label\">{{label}}</slot></slot>\n            </button>\n        </template>\n    </btn-group>\n\n    <btn-group v-else :class=\"{'dropup': dropup, 'dropright': dropright, 'dropleft': dropleft}\" @click=\"onClick\">\n        <button aria-haspopup=\"true\" :aria-expanded=\"isDropdownShowing\" :type=\"type\" :id=\"id\" :class=\"toggleClasses\" @click.prevent=\"!isDropdownShowing ? show() : hide()\" @blur=\"onBlur\">\n            <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"></i> {{label}}</slot>\n        </button>\n\n        <dropdown-menu\n            :id=\"id\"\n            :align=\"align\"\n            :show.sync=\"isDropdownShowing\"\n            @click=\"onMenuClick\"\n            @item:click=\"onItemClick\">\n            <slot/>\n        </dropdown-menu>\n    </btn-group>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport Popper from 'popper.js';\nimport BtnGroup from '../BtnGroup';\nimport uuid from '../../Helpers/Uuid';\nimport prefix from '../../Helpers/Prefix';\nimport DropdownMenu from '../DropdownMenu';\nimport { each } from '../../Helpers/Functions';\n\nconst TAB_KEYCODE = 9;\nconst LEFT_ARROW_KEYCODE = 37;\nconst RIGHT_ARROW_KEYCODE = 39;\nconst UP_ARROW_KEYCODE = 38;\nconst DOWN_ARROW_KEYCODE = 40;\n\nlet ignoreBlurEvent = false;\n\nexport default {\n\n    name: 'btn-dropdown',\n\n    extends: Btn,\n\n    components: {\n        BtnGroup,\n        DropdownMenu\n    },\n\n    props: {\n\n        /**\n         * The button icon that appears before the label.\n         *\n         * @property String\n         */\n        autoclose: Boolean,\n\n        /**\n         * The button icon that appears before the label.\n         *\n         * @property String\n         */\n        icon: String,\n\n        /**\n         * The toggle button's label. If not defined as an attribute,\n         * you can override with the component's slot (inner html).\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * The `id` attribute on the toggle button and aria label. If no `id` is\n         * defined, then a UUID will be generated instead.\n         *\n         * @property String\n         */\n        id: {\n            type: String,\n            default: uuid\n        },\n\n        /**\n         * The button type attribute.\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'button'\n        },\n\n        /**\n         * Display the dropdown menu aligned left or right\n         *\n         * @property String\n         */\n        align: {\n            type: String,\n            default: 'left',\n            validate(value) {\n                return ['left', 'right'].indexOf(value.toLowerCase()) !== -1;\n            }\n        },\n\n        /**\n         * Display the dropdown button with a split toggle button.\n         *\n         * @property Boolean\n         */\n        split: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropup instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropright instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropright: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropleft instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropleft: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Focus on the the dropdown toggle button\n         *\n         * @return void\n         */\n        focus() {\n            this.$el.querySelector('.dropdown-toggle').focus();\n        },\n\n        /**\n         * Focus on the the dropdown toggle button\n         *\n         * @return void\n         */\n        queryFocusable() {\n            return this.$el.querySelector('.dropdown-menu').querySelectorAll('label, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        },\n\n        /**\n         * Method to check if the given element is focusable.\n         *\n         * @return void\n         */\n        isFocusable(element) {\n            const nodes = this.queryFocusable();\n\n            for (let i in nodes) {\n                if (element === nodes[i]) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Toggle the dropdown menu\n         *\n         * @return void\n         */\n        toggle() {\n            !this.isDropdownShowing ? this.show() : this.hide();\n        },\n\n        /**\n         * Show the dropdown menu\n         *\n         * @return void\n         */\n        show() {\n            this.isDropdownShowing = true;\n\n            this.$nextTick(() => {\n                let side = 'bottom';\n\n                if (this.dropup) {\n                    side = 'top';\n                }\n                else if (this.dropleft) {\n                    side = 'left';\n                }\n                else if (this.dropright) {\n                    side = 'right';\n                }\n\n                const menu = this.$el.querySelector('.dropdown-menu');\n                const toggle = this.$el.querySelector('.dropdown-toggle');\n                const position = [side, this.align === 'left' ? 'start' : 'end'];\n\n                this.$popper = new Popper(toggle, menu, {\n                    placement: position.join('-')\n                });\n\n                if (this.queryFocusable().item(0)) {\n                    this.$el.querySelector('input, select, textarea').focus();\n                }\n\n                this.$emit('show');\n            });\n        },\n\n        /**\n         * Hide the dropdown menu\n         *\n         * @return void\n         */\n        hide() {\n            this.$emit('toggle', this.isDropdownShowing = false);\n            this.$emit('hide');\n        },\n\n        /**\n         * A callback function for the `click` event for the action button\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.hide();\n            this.$emit('click', event);\n        },\n\n        /**\n         * A callback function for the `blur` event for the action button\n         *\n         * @return void\n         */\n        onBlur(event) {\n            if (!this.$el.contains(event.relatedTarget)) {\n                this.hide();\n            }\n        },\n\n        /**\n         * A callback function for the `item:click` event for the action button\n         *\n         * @return void\n         */\n        onMenuClick(event, item) {\n            if (event.target === this.$el.querySelector('.dropdown-menu')) {\n                this.focus();\n            }\n        },\n\n        /**\n         * A callback function for the `item:click` event for the action button\n         *\n         * @return void\n         */\n        onItemClick(event, item) {\n            if (!this.isFocusable(event.target)) {\n                this.hide();\n            }\n\n            this.$emit('item:click', event, item);\n        }\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return 'btn' + (this.outline ? '-outline' : '');\n        },\n\n        sizeableClassPrefix() {\n            return 'btn';\n        },\n\n        actionClasses() {\n            return [\n                'btn',\n                prefix(this.size, 'btn'),\n                prefix(this.variant, 'btn')\n            ].join(' ');\n        },\n\n        toggleClasses() {\n            return [\n                'btn',\n                'dropdown-toggle',\n                this.variantClass,\n                this.sizeableClass,\n                this.active ? 'active' : '',\n                this.block ? 'btn-block' : '',\n                (this.split ? 'dropdown-toggle-split' : '')\n            ].join(' ');\n        }\n    },\n\n    data() {\n        return {\n            isDropdownShowing: false\n        };\n    },\n\n    mounted() {\n        each(this.$el.querySelectorAll('[type=submit], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]'), el => {\n            const keydown = event => {\n                const ignore = [\n                    LEFT_ARROW_KEYCODE,\n                    RIGHT_ARROW_KEYCODE,\n                    UP_ARROW_KEYCODE,\n                    DOWN_ARROW_KEYCODE,\n                    TAB_KEYCODE\n                ];\n\n                if (ignore.indexOf(event.keyCode) !== -1) {\n                    ignoreBlurEvent = true;\n                }\n            };\n\n            const blur = event => {\n                if (!ignoreBlurEvent) {\n                    this.focus();\n                }\n\n                ignoreBlurEvent = false;\n            };\n\n            const focus = event => {\n                ignoreBlurEvent = false;\n            };\n\n            const mousedown = event => {\n                ignoreBlurEvent = true;\n            };\n\n            el.addEventListener('blur', blur);\n            el.addEventListener('focus', focus);\n            el.addEventListener('keydown', keydown);\n            el.addEventListener('mousedown', mousedown);\n        });\n    }\n\n};\n</script>\n","import BtnDropdown from './BtnDropdown';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            BtnDropdown\n        });\n    }\n\n});\n\nexport default BtnDropdown;\n","export default {\n\n    methods: {\n\n        getSlot(slot) {\n            return this.$slots[slot];\n        },\n\n        hasSlot(slot) {\n            return !!this.$slots[slot];\n        },\n\n        hasSlots(slots) {\n            for (let i in slots) {\n                if (!this.hasSlot(slots[i])) {\n                    return false;\n                }\n            }\n        }\n\n    },\n\n    computed: {\n\n        hasDefaultSlot() {\n            return this.hasSlot('default');\n        }\n\n    }\n\n};\n","<template>\n\n    <div :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card',\n\n    mixins: [\n        HasSlots,\n        Colorable,\n        MergeClasses\n    ],\n\n    computed: {\n\n        className() {\n            return this.$options.name;\n        }\n\n    }\n\n};\n</script>\n","<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-body',\n\n    extends: Card\n\n};\n</script>\n","<template>\n\n    <btn-group class=\"card-btn-group\">\n        <slot/>\n    </btn-group>\n\n</template>\n\n<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-btn-group',\n\n    extends: Card\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.card {\n    .card-btn-group,\n    .btn-group.card-btn-group {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > .btn {\n            flex: 1;\n            width: 100%;\n            text-align: center;\n            border-radius: 0;\n\n            &:not(:last-child)::after {\n                content: '';\n                position: absolute;\n                top: 50%;\n                right: 0;\n                padding: $font-size-base;\n                transform: translateY(-50%);\n                border-right: 1px solid $card-border-color;\n            }\n        }\n    }\n}\n</style>\n","<template>\n\n    <div class=\"card-deck\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'card-deck'\n\n};\n</script>\n","<template>\n\n    <component :is=\"tag\" :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </component>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-header',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The component's HTML tag name\n         *\n         * @property String\n         */\n        tag: {\n            type: String,\n            default: 'h5'\n        }\n\n    }\n\n};\n</script>\n","<script>\nimport CardHeader from './CardHeader';\n\nexport default {\n\n    name: 'card-footer',\n\n    extends: CardHeader,\n\n    props: {\n\n        /**\n         * The component's HTML tag name\n         *\n         * @property String\n         */\n        tag: {\n            type: String,\n            default: 'div'\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(className)\" class=\"d-flex justify-content-center align-items-center\" :style=\"{height: unit(height)}\">\n        <div v-if=\"background\" class=\"card-img-bg\" :style=\"{background: background ? `url(${this.src})` : null, overflow: blur ? 'hidden' : 'inherit', filter: blur ? `blur(${unit(blur)})` : null}\"/>\n        <img v-if=\"!background && src\" :src=\"src\" :alt=\"alt\" class=\"img-fluid\"/>\n        <div class=\"card-img-content\" :class=\"{'text-truncate': textTruncate}\">\n            <slot/>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport unit from '../../Helpers/Unit';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-img',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The alt attribute\n         *\n         * @property String\n         */\n        alt: String,\n\n        /**\n         * Display the image as a background image fit with CSS cover.\n         *\n         * @property String\n         */\n        background: Boolean,\n\n        /**\n         * The amount to blur the background image.\n         *\n         * @property String\n         */\n        blur: [Number, String],\n\n        /**\n         * The height attribute\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * Truncate the text in the content\n         *\n         * @property String\n         */\n        textTruncate: Boolean,\n\n        /**\n         * The src attribute\n         *\n         * @property String\n         */\n        src: String\n\n    },\n\n    methods: {\n\n        unit(value) {\n            return unit(value);\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.card-img,\n.card-img-top,\n.card-img-bottom {\n    color: white;\n    position: relative;\n    text-shadow: 0 0 20px rgba(0, 0, 0, .5);\n\n    .card-img-bg {\n        z-index: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-size: cover !important;\n        background-position: center !important;\n        background-repeat: no-repeat !important;\n\n        & > img:first-child {\n            position: absolute;\n        }\n    }\n\n    .card-img-content {\n        flex: 1;\n        z-index: 1;\n        position: relative;\n    }\n\n    /*\n    & > :not(img) {\n        position: absolute;\n    }\n    */\n}\n</style>\n","<script>\nimport CardImg from './CardImg';\n\nexport default {\n\n    name: 'card-img-top',\n\n    extends: CardImg\n};\n</script>\n","<script>\nimport CardImg from './CardImg';\n\nexport default {\n\n    name: 'card-img-bottom',\n\n    extends: CardImg\n\n};\n</script>\n","<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-img-overlay',\n\n    extends: Card\n\n};\n</script>\n","<template>\n\n    <router-link :to=\"href\" :class=\"mergeClasses(className, colorableClasses)\" @click=\"onClick\">\n        <slot/>\n    </router-link>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-link',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The alt attribute\n         *\n         * @property String\n         */\n        alt: String,\n\n        /**\n         * The href attribute\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The to attribute\n         *\n         * @property String\n         */\n        to: [Object, String]\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <h6 :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </h6>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-subtitle',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ]\n\n};\n</script>\n","<template>\n\n    <h5 :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </h5>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-title',\n\n    mixins: [\n        Card,\n        MergeClasses\n    ]\n\n};\n</script>\n","import Card from './Card';\nimport CardBody from './CardBody';\nimport CardBtnGroup from './CardBtnGroup';\nimport CardDeck from './CardDeck';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgTop from './CardImgTop';\nimport CardImgBottom from './CardImgBottom';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardTitle from './CardTitle';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Card,\n            CardBody,\n            CardBtnGroup,\n            CardDeck,\n            CardFooter,\n            CardHeader,\n            CardImg,\n            CardImgTop,\n            CardImgBottom,\n            CardImgOverlay,\n            CardLink,\n            CardSubtitle,\n            CardTitle\n        });\n    }\n\n});\n\nexport * from './CardBody';\nexport * from './CardBtnGroup';\nexport * from './CardDeck';\nexport * from './CardFooter';\nexport * from './CardHeader';\nexport * from './CardImg';\nexport * from './CardImgTop';\nexport * from './CardImgBottom';\nexport * from './CardImgOverlay';\nexport * from './CardLink';\nexport * from './CardSubtitle';\nexport * from './CardTitle';\nexport default Card;\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"radio\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValue === value || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"$emit('change', $event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"radio\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValue === value || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"$emit('change', $event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormFeedback from '../FormFeedback';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'radio-field',\n\n    components: {\n        HelpText,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValue'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * Is this a custom element\n         *\n         * @property String\n         */\n        custom: Boolean,\n\n        /**\n         * Display the form field and label inline\n         *\n         * @property Function\n         */\n        inline: Boolean,\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checked: Boolean,\n\n        /**\n         * The checked value\n         *\n         * @property String\n         */\n        checkedValue: [Boolean, Number, String, Object],\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-check'\n        }\n\n    },\n\n    computed: {\n\n        labelClass() {\n            return prefix('label', this.controlClass);\n        },\n\n        inputClass() {\n            return prefix('input', this.controlClass);\n        },\n\n        inlineClass() {\n            return prefix('inline', this.controlClass);\n        },\n\n        controlClass() {\n            return this.custom ? 'custom-control' : this.defaultControlClass;\n        },\n\n        customControlClass() {\n            return this.custom ? prefix(this.$options.name.replace('-field', ''), 'custom') : '';\n        },\n\n        sizeableClass() {\n            return prefix(this.size, 'form-control');\n        }\n\n    }\n\n};\n</script>\n","import { wrap, findKey } from '../Functions';\n\nconst CALLBACKS = {};\n\nfunction id(callback) {\n    return findKey(CALLBACKS, compare => {\n        return callback.toString() === compare.toString();\n    });\n}\n\nfunction restart(callback, milliseconds) {\n    stop(id(callback));\n    start(callback, milliseconds);\n}\n\nfunction stop(id) {\n    clearTimeout(id);\n    delete CALLBACKS[id];\n}\n\nfunction start(callback, milliseconds) {\n    CALLBACKS[setTimeout(callback, milliseconds)] = callback;\n}\n\nexport default function wait(milliseconds, callback) {\n    return new Promise((resolve, reject) => {\n        function resolver(resolver, response) {\n            return resolver(response);\n        };\n\n        restart(wrap(callback, callback => {\n            return callback(wrap(resolve, resolver), wrap(reject, resolver));\n        }), milliseconds);\n    });\n}\n"],"names":["tagName","toLowerCase","getAttribute","document","el","element","forEach","classList","vnode","get","s","value","input","dispatchEvent","$watch","event","e","target","kebabCase","binding","split","Event","t","easeOutQuint","easeInOutQuint","VueInstaller","use","install","dismissCount","clearInterval","interval","transition","then","delay","this","dismiss","[object Object]","show","isVisible","render","name","Vue","options","components","Alert","AlertLink","AlertClose","AlertHeading","mixins","Variant","MergeClasses","props","accessibility","String","href","pill","Boolean","label","Number","secondary","computed","$options","Badge","attributes","setAttribute","key","hasOwnProperty","getOwnPropertyNames","_this","keys","getAttributes","filter","match","reduce","obj","_this2","isObject","setAttributes","values","i","Response","data","extend","date","$data","$request","$date","BaseClass","DEFAULTS","transformRequest","transformResponse","Request","method","url","headers","params","sentAt","resolve","reject","axios","response","errors","$cancel","cancelToken","CancelToken","cancel","getPublicAttributes","$response","$errors","$error","fn","push","make","send","request","Model","$key","$files","files","$properties","properties","each","initialize","$exists","$changed","$attributes","fill","$initialized","endpoint","exists","id","concat","slice","call","arguments","join","indexOf","isArray","_this3","handleAttributeChange","isUndefined","_this4","getChangedAttributes","length","carry","count","total","toJSON","handlePrimaryKeyChange","isNull","config","_this5","hasFiles","toFormData","constructor","uri","_this6","item","JSON","stringify","form","append","replace","_this7","model","_this8","_this9","error","type","default","isFunction","Object","inline","novalidate","query","redirect","Function","onSubmit","submit","onSubmitSuccess","$emit","$router","onSubmitFailed","methods","onUploadProgress","BaseForm","active","to","BreadcrumbItem","items","Array","Breadcrumb","srOnly","srOnlyFocusable","screenreaderClasses","Colorable","Screenreaders","colorableClasses","HelpText","FormGroup","FormLabel","invalid","valid","FormFeedback","autocomplete","placeholder","required","group","pattern","feedback","bindEvents","defaultControlClass","hideLabel","spacing","size","validate","plaintext","readonly","disabled","helpText","maxlength","directives","bind","context","addEventListener","blur","getInputField","focus","$el","querySelector","getFieldErrors","callbacks","map","callback","camelCase","invalidFeedback","validFeedback","controlClass","controlSizeClass","controlClasses","hasDefaultSlot","$slots","FormControl","ActivityIndicator","activity","InputField","extends","extensions","multiple","height","width","FileField","Btn","BtnFile","buttons","toggle","vertical","mergeClasses","btn-group","btn-group-toggle","btn-group-vertical","BtnGroup","BtnGroupToggle","BtnToolbar","proxy","apply","splice","preventDefault","Proxy","button","icon","header","DropdownMenuItem","DropdownMenuHeader","DropdownMenuDivider","uuid","align","prefix","$children","child","$on","onItemClick","DropdownMenu","LEFT_ARROW_KEYCODE","RIGHT_ARROW_KEYCODE","UP_ARROW_KEYCODE","DOWN_ARROW_KEYCODE","autoclose","dropup","dropright","dropleft","querySelectorAll","queryFocusable","nodes","isDropdownShowing","hide","$nextTick","side","$popper","menu","placement","position","contains","relatedTarget","isFocusable","outline","variant","variantClass","sizeableClass","block","ignore","keyCode","ignoreBlurEvent","keydown","mousedown","BtnDropdown","getSlot","slot","hasSlot","hasSlots","slots","HasSlots","Card","tag","CardHeader","alt","background","textTruncate","src","CardImg","CardBody","CardBtnGroup","CardDeck","CardFooter","CardImgTop","CardImgBottom","CardImgOverlay","CardLink","CardSubtitle","CardTitle","custom","checked","RadioField","_self","class","innerHTML","_s","Promise","style","FileList","attrs","n","description","minHeight","Popper","ref","unit","inserted","add","elements","expression","editable","update","o","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","CALLBACKS","plugins","filters"],"mappings":"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"}