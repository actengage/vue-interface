{"version":3,"file":"vue-interface.js","sources":["../src/Helpers/Functions/extend.js","../src/Helpers/Functions/isNull.js","../src/Helpers/Functions/isArray.js","../src/Helpers/Functions/isObject.js","../src/Helpers/Functions/deepExtend.js","../src/Helpers/Functions/isNumber.js","../src/Helpers/Functions/isNumeric.js","../src/Helpers/Functions/key.js","../src/Helpers/Functions/each.js","../src/Helpers/Functions/first.js","../src/Helpers/Functions/matches.js","../src/Helpers/Functions/isString.js","../src/Helpers/Functions/get.js","../src/Helpers/Functions/property.js","../src/Helpers/Functions/isFunction.js","../src/Helpers/Functions/matchesProperty.js","../src/Helpers/Functions/predicate.js","../src/Helpers/Functions/find.js","../src/Helpers/Functions/findIndex.js","../src/Helpers/Functions/isBoolean.js","../src/Helpers/Functions/isUndefined.js","../src/Helpers/Functions/kebabCase.js","../src/Helpers/Functions/mapKeys.js","../src/Helpers/Functions/pickBy.js","../src/Helpers/Functions/remove.js","../src/Helpers/Unit/Unit.js","../src/Components/ActivityIndicator/Types/BaseType.vue","../node_modules/vue-runtime-helpers/normalize-component.js","../src/Components/ActivityIndicator/Types/Dots.vue","../src/Components/ActivityIndicator/Types/Spinner.vue","../src/Components/ActivityIndicator/ActivityIndicator.vue","../src/Components/Alert/AlertClose.vue","../src/Components/Alert/AlertHeading.vue","../src/Helpers/Prefix/Prefix.js","../src/Mixins/Variant/Variant.js","../src/Mixins/MergeClasses/MergeClasses.js","../src/Components/ProgressBar/ProgressBar.vue","../src/Helpers/Transition/Transition.js","../src/Components/Alert/Alert.vue","../src/Components/Alert/AlertLink.vue","../src/Components/Badge/Badge.vue","../src/Support/BaseClass.js","../src/Http/Request/Response.js","../src/Http/Request/Request.js","../src/Http/Model/Model.js","../src/Components/BaseForm/BaseForm.vue","../src/Components/Breadcrumb/BreadcrumbItem.vue","../src/Components/Breadcrumb/Breadcrumb.vue","../src/Mixins/Sizeable/Sizeable.js","../src/Mixins/Colorable/Colorable.js","../src/Components/Btn/Btn.vue","../src/Components/BtnActivity/BtnActivity.vue","../src/Mixins/Screenreaders/Screenreaders.js","../src/Components/HelpText/HelpText.vue","../src/Components/FormGroup/FormGroup.vue","../src/Components/FormLabel/FormLabel.vue","../src/Components/FormFeedback/FormFeedback.vue","../src/Mixins/FormControl/FormControl.js","../src/Components/FormControl/FormControl.vue","../src/Components/InputField/InputField.vue","../src/Components/FileField/FileField.vue","../src/Components/BtnFile/BtnFile.vue","../src/Components/BtnGroup/BtnGroup.vue","../src/Components/BtnGroup/BtnGroupToggle.vue","../src/Components/BtnGroup/BtnToolbar.vue","../src/Helpers/Uuid/Uuid.js","../src/Mixins/Proxy/Proxy.js","../src/Components/DropdownMenu/DropdownMenuItem.vue","../src/Components/DropdownMenu/DropdownMenuHeader.vue","../src/Components/DropdownMenu/DropdownMenuDivider.vue","../src/Components/DropdownMenu/DropdownMenu.vue","../src/Components/BtnDropdown/BtnDropdown.vue","../src/Mixins/HasSlots/HasSlots.js","../src/Components/Card/Card.vue","../src/Components/Card/CardBody.vue","../src/Components/Card/CardBtnGroup.vue","../src/Components/Card/CardDeck.vue","../src/Components/Card/CardHeader.vue","../src/Components/Card/CardFooter.vue","../src/Components/Card/CardImg.vue","../src/Components/Card/CardImgTop.vue","../src/Components/Card/CardImgBottom.vue","../src/Components/Card/CardImgOverlay.vue","../src/Components/Card/CardLink.vue","../src/Components/Card/CardSubtitle.vue","../src/Components/Card/CardTitle.vue","../src/Components/RadioField/RadioField.vue","../src/Components/CheckboxField/CheckboxField.vue","../src/Components/Container/Container.vue","../src/Components/Dropzone/Dropzone.vue","../src/Helpers/ReadFile/ReadFile.js","../src/Components/FilePreview/FilePreview.vue","../src/Components/InfiniteScrolling/InfiniteScrolling.vue","../src/Components/InputGroup/InputGroupText.vue","../src/Components/InputGroup/InputGroupAppend.vue","../src/Components/InputGroup/InputGroupPrepend.vue","../src/Components/InputGroup/InputGroup.vue","../src/Components/LightSwitchField/LightSwitchField.vue","../src/Components/ListGroup/ListGroupItem.vue","../src/Components/ListGroup/ListGroup.vue","../src/Components/Modal/ModalBody.vue","../src/Components/Modal/ModalDialog.vue","../src/Components/Modal/ModalTitle.vue","../src/Components/Modal/ModalHeader.vue","../src/Components/Modal/ModalFooter.vue","../src/Components/Modal/ModalContent.vue","../src/Components/Modal/ModalBackdrop.vue","../src/Mixins/Triggerable/Triggerable.js","../src/Components/Modal/Modal.vue","../src/Components/Navbar/NavbarBrand.vue","../src/Components/Navbar/NavbarCollapse.vue","../src/Components/Navbar/NavbarText.vue","../src/Components/Navbar/NavbarTogglerIcon.vue","../src/Components/Navbar/NavbarToggler.vue","../src/Components/Navbar/Navbar.vue","../src/Components/Navigation/NavigationError.vue","../src/Components/Navigation/NavigationLink.vue","../src/Components/Navigation/NavigationItem.vue","../src/Components/Navigation/Navigation.vue","../src/Components/Navigation/NavigationDropdown.vue","../src/Components/Navbar/NavbarNav.vue","../src/Components/Overlay/OverlayBody.vue","../src/Components/Overlay/OverlayContent.vue","../src/Components/Overlay/Overlay.vue","../src/Components/Pagination/Pagination.vue","../src/Components/Popover/Popover.vue","../src/Components/Popover/PopoverBody.vue","../src/Components/Popover/PopoverHeader.vue","../src/Components/SelectField/SelectField.vue","../src/Components/SlideDeck/Slides.vue","../src/Components/SlideDeck/SlideDeckControls.vue","../src/Components/SlideDeck/SlideDeck.vue","../src/Components/TableView/TableViewHeader.vue","../src/Components/TableView/Table.vue","../src/Http/Transformer/Transformer.js","../src/Http/TableViewTransformer/TableViewTransformer.js","../src/Components/TableView/TableView.vue","../src/Components/TextareaField/TextareaField.vue","../src/Components/ThumbnailList/ThumbnailListItem.vue","../src/Components/ThumbnailList/ThumbnailList.vue","../src/Components/UploadField/UploadField.vue","../src/Components/Wizard/WizardButtons.vue","../src/Components/Wizard/WizardStep.vue","../src/Components/Wizard/WizardError.vue","../src/Components/Wizard/WizardHeader.vue","../src/Components/Wizard/WizardProgress.vue","../src/Components/Wizard/WizardSuccess.vue","../src/Components/Wizard/Wizard.vue","../src/Directives/Autogrow/Autogrow.js","../src/Directives/Collapse/Collapse.js","../src/Directives/Slug/Slug.js","../src/Helpers/Instantiate/Instantiate.js","../src/Plugins/Modal/Modal.js","../src/Plugins/Overlay/Overlay.js","../src/Plugins/Popover/Popover.js","../src/install.js","../src/main.js"],"sourcesContent":["export default function extend(...args) {\n    return Object.assign(...args);\n}\n","export default function isNull(value) {\n    return value === null;\n}\n","export default function isArray(value) {\n    return Array.isArray(value);\n}\n","import isNull from './isNull';\nimport isArray from './isArray';\n\nexport default function isObject(value) {\n    return (typeof value === 'object') && !isNull(value) && !isArray(value);\n}\n","import extend from './extend';\nimport isObject from './isObject';\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n*/\nexport default function deepExtend(target, ...sources) {\n    if(!sources.length) return target;\n\n    const source = sources.shift();\n\n    if(isObject(target) && isObject(source)) {\n        for(const key in source) {\n            if(isObject(source[key])) {\n                if(!target[key]) extend(target, { [key]: {} });\n                deepExtend(target[key], source[key]);\n            }\n            else {\n                extend(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return deepExtend(target, ...sources);\n}\n","export default function isNumber(value) {\n    return (typeof value === 'number') || (\n        value ? value.toString() === '[object Number]' : false\n    );\n}\n","import isArray from './isArray';\nimport isNumber from './isNumber';\n\nexport default function isNumeric(value) {\n    return isNumber(value) || (\n        !!value && !isArray(value) && !!value.toString().match(/^-?[\\d.,]+$/)\n    );\n}\n","import isNumeric from './isNumeric';\n\nexport default function key(value) {\n    return isNumeric(value) ? parseFloat(value) : value;\n}\n","import key from './key';\n\nexport default function each(subject, fn) {\n    for(const i in subject) {\n        fn(subject[i], key(i));\n    }\n}\n","export default function first(array) {\n    return (array && array.length) ? array[0] : undefined;\n}\n","import isObject from './isObject';\n\nexport default function matches(properties) {\n    return subject => {\n        for(const i in properties) {\n            if(isObject(properties[i])) {\n                return subject[i] ? matches(properties[i])(subject[i]) : false;\n            }\n            else if(!subject || subject[i] !== properties[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n}\n","export default function isString(value) {\n    return typeof value === 'string';\n}\n","import isArray from './isArray';\nimport isString from './isString';\n\nexport default function get(object, path) {\n    return (isString(path) ? path.split('.') : (!isArray(path) ? [path] : path)).reduce((a, b) => a[b], object);\n}\n","import get from './get';\n\nexport default function property(path) {\n    return object => {\n        return get(object, path);\n    };\n}\n","export default function isFunction(value) {\n    return value instanceof Function;\n}\n","import get from './get';\n\nexport default function matchesProperty(path, value) {\n    return subject => {\n        return get(subject, path) === value;\n    };\n}\n","import isArray from './isArray';\nimport matches from './matches';\nimport isObject from './isObject';\nimport property from './property';\nimport isFunction from './isFunction';\nimport matchesProperty from './matchesProperty';\n\nexport default function predicate(value) {\n    if(isObject(value)) {\n        value = matches(value);\n    }\n    else if(isArray(value)) {\n        value = matchesProperty(value[0], value[1]);\n    }\n    else if(!isFunction(value)) {\n        value = property(value);\n    }\n\n    return value;\n}\n","import first from './first';\nimport predicate from './predicate';\n\nexport default function find(subject, value) {\n    return first(subject.filter(object => predicate(value)(object)));\n}\n","import key from './key';\nimport predicate from './predicate';\n\nexport default function findIndex(subject, value) {\n    for(const i in subject) {\n        if(predicate(value)(subject[i])) {\n            return key(i);\n        }\n    }\n\n    return -1;\n}\n","export default function isBoolean(value) {\n    return value === true || value === false;\n}\n","export default function isUndefined(value) {\n    return typeof value === 'undefined';\n}\n","export default function kebabCase(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2')\n        .replace(/\\s+/g, '-')\n        .replace(/_/g, '-')\n        .toLowerCase();\n}\n","import each from './each';\n\nexport default function mapKeys(object, fn) {\n    const mapped = {};\n\n    each(object, (value, key) => {\n        mapped[fn(value, key)] = value;\n    });\n\n    return mapped;\n}\n","import each from './each';\nimport predicate from './predicate';\n\nexport default function pickBy(object, match) {\n    const subject = {};\n\n    each(object, (value, key) => {\n        if(predicate(match)(value)) {\n            subject[key] = value;\n        }\n    });\n\n    return subject;\n}\n","import key from './key';\nimport predicate from './predicate';\n\nexport default function remove(array, match) {\n    const indexes = [];\n\n    for(const i in array) {\n        if(predicate(match)(array[i])) {\n            indexes.push(key(i));\n        }\n    }\n\n    return array.filter((value, i) => {\n        return indexes.indexOf(i) !== -1;\n    });\n}\n","export default function(height) {\n    return isFinite(height) ? height + 'px' : height;\n}\n","<template>\n    <div class=\"activity-indicator\" :class=\"classes\">\n        <div v-for=\"i in nodes\"></div>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    props: {\n        nodes: {\n            type: Number,\n            default: 3\n        },\n        size: {\n            type: String,\n            default: ''\n        },\n        prefix: {\n            type: String,\n            default: 'activity-indicator-'\n        }\n    },\n\n    computed: {\n        classes: function() {\n            const classes = {};\n\n            classes[this.$options.name] = !!this.$options.name;\n            classes[this.prefix + this.size.replace(this.prefix, '')] = !!this.size;\n\n            return classes;\n        }\n    }\n\n};\n</script>\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<script>\nimport BaseType from './BaseType';\n\nexport default {\n\n    name: 'activity-indicator-dots',\n\n    extends: BaseType\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n$activity-indicator-dot-size: .6rem;\n\n.activity-indicator-dots {\n\n    & > div {\n        border-radius: 100%;\n        display: inline-block;\n        background-color: $gray-900;\n        width: $activity-indicator-dot-size;\n        height: $activity-indicator-dot-size;\n        animation: activity-indicator-dots 1.4s infinite ease-in-out both;\n    }\n\n    & > div:not(:last-child) {\n        margin-right: $activity-indicator-dot-size * .33;\n    }\n\n    &.activity-indicator-xs > div {\n        width: $activity-indicator-dot-size * .5;\n        height: $activity-indicator-dot-size * .5;\n    }\n\n    &.activity-indicator-sm > div {\n        width: $activity-indicator-dot-size * .75;\n        height: $activity-indicator-dot-size * .75;\n    }\n\n    &.activity-indicator-md > div {\n        width: $activity-indicator-dot-size * 1;\n        height: $activity-indicator-dot-size * 1;\n    }\n\n    &.activity-indicator-lg > div {\n        width: $activity-indicator-dot-size * 1.5;\n        height: $activity-indicator-dot-size * 1.5;\n    }\n\n    &.activity-indicator-xl > div {\n        width: $activity-indicator-dot-size * 2;\n        height: $activity-indicator-dot-size * 2;\n    }\n\n    @for $i from 0 through 12 {\n        & > div:nth-child(#{$i + 1}) {\n            animation-delay: $i * .16s;\n        }\n    }\n\n    @keyframes activity-indicator-dots {\n        0%, 80%, 100% {\n            transform: scale(0);\n        } 40% {\n            transform: scale(1.0);\n        }\n    }\n}\n\n.btn-activity-indicator-dots {\n    &:not(.btn-warning) .activity-indicator-dots > div {\n        background: white;\n    }\n}\n\n</style>\n","<script>\nimport BaseType from './BaseType';\nimport { extend } from '../../../Helpers/Functions';\n\nexport default {\n\n    name: 'activity-indicator-spinner',\n\n    extends: BaseType,\n\n    props: extend({}, BaseType.props, {\n        nodes: {\n            type: Number,\n            default: 12\n        }\n    })\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n$activity-indicator-spinner-size: $font-size-base * 2.25;\n$activity-indicator-spinner-width: 10%;\n$activity-indicator-spinner-height: 30%;\n$activity-indicator-spinner-delay: 1s;\n\n@mixin spinner-rotate-selectors($start:1, $end:16, $delay:1.2s) {\n    @for $i from $start through $end {\n        & > div:first-child:nth-last-child(#{$i}),\n        & > div:first-child:nth-last-child(#{$i}) ~ div {\n            @include spinner-rotate-transform($i, $delay);\n        }\n    }\n}\n\n@mixin spinner-rotate-transform($total, $delay:1.2s) {\n    @for $i from 1 through $total {\n        &:nth-child(#{$i}) {\n            transform: rotate(#{360 / $total * $i}deg);\n\n            &:before {\n                animation-delay: -#{$delay - ($delay / $total * ($i - 1))};\n            }\n        }\n    }\n}\n\n.activity-indicator-spinner {\n    position: relative;\n    width: $activity-indicator-spinner-size;\n    height: $activity-indicator-spinner-size;\n\n    & > div  {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        left: 0;\n        top: 0;\n\n        &:before {\n            content: '';\n            display: block;\n            margin: 0 auto;\n            background-color: $gray-900;\n            width: $activity-indicator-spinner-width;\n            height: $activity-indicator-spinner-height;\n            border-radius: 5px;\n            animation: activity-indicator-spinner $activity-indicator-spinner-delay infinite ease-in-out both;\n        }\n    }\n\n    &.activity-indicator-xs {\n        width: $activity-indicator-spinner-size * .5;\n        height: $activity-indicator-spinner-size * .5;\n    }\n    &.activity-indicator-sm {\n        width: $activity-indicator-spinner-size * .75;\n        height: $activity-indicator-spinner-size * .75;\n    }\n    &.activity-indicator-md {\n        width: $activity-indicator-spinner-size * 1;\n        height: $activity-indicator-spinner-size * 1;\n    }\n    &.activity-indicator-lg {\n        width: $activity-indicator-spinner-size * 1.5;\n        height: $activity-indicator-spinner-size * 1.5;\n    }\n    &.activity-indicator-xl {\n        width: $activity-indicator-spinner-size * 2;\n        height: $activity-indicator-spinner-size * 2;\n    }\n\n    @include spinner-rotate-selectors(1, 12, $activity-indicator-spinner-delay);\n\n    @keyframes activity-indicator-spinner {\n        0%, 39%, 100% { opacity: 0; }\n        40% { opacity: 1; }\n    }\n}\n\n.btn-activity-indicator-spinner {\n    &:not(.btn-warning) .activity-indicator-spinner > div:before {\n        background-color: white;\n    }\n}\n\n</style>\n","<template>\n    <div v-if=\"center\" class=\"center-wrapper\" :class=\"{'position-relative': relative, 'position-fixed': fixed}\" :style=\"style\">\n        <div class=\"center-content d-flex flex-column align-items-center\">\n            <component :is=\"component\" :size=\"size\" :prefix=\"prefix\"/>\n            <div v-if=\"label\" v-html=\"label\" class=\"activity-indicator-label\"/>\n        </div>\n    </div>\n    <div v-else class=\"d-flex flex-column justify-content-center align-items-center\" :style=\"style\">\n        <component :is=\"component\" :size=\"size\" :prefix=\"prefix\"/>\n        <div v-if=\"label\" v-html=\"label\" class=\"activity-indicator-label\"/>\n    </div>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\nimport BaseType from './Types/BaseType';\nimport ActivityIndicatorDots from './Types/Dots';\nimport { kebabCase } from '../../Helpers/Functions';\nimport ActivityIndicatorSpinner from './Types/Spinner';\n\nexport default {\n\n    name: 'activity-indicator',\n\n    extends: BaseType,\n\n    props: {\n\n        center: Boolean,\n\n        fixed: Boolean,\n\n        label: String,\n\n        relative: Boolean,\n\n        type: {\n            type: String,\n            default: 'dots'\n        },\n\n        height: [String, Number],\n\n        maxHeight: [String, Number],\n\n        minHeight: [String, Number],\n\n        width: [String, Number],\n\n        maxWidth: [String, Number],\n\n        minWidth: [String, Number]\n\n    },\n\n    components: {\n        ActivityIndicatorDots,\n        ActivityIndicatorSpinner\n    },\n\n    computed: {\n\n        style() {\n            return {\n                width: unit(this.width),\n                maxWidth: unit(this.maxWidth),\n                minWidth: unit(this.minWidth),\n                height: unit(this.height),\n                maxHeight: unit(this.maxHeight),\n                minHeight: unit(this.minHeight)\n            };\n        },\n\n        component() {\n            return kebabCase(this.prefix + this.type.replace(this.prefix, ''));\n        }\n    }\n\n};\n</script>\n","<template>\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" @click=\"onClick\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</template>\n\n<script>\nexport default {\n\n    name: 'alert-close',\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <h4 class=\"alert-heading\"><slot/></h4>\n</template>\n\n<script>\nexport default {\n\n    name: 'alert-heading'\n\n};\n</script>\n","import {\n    mapKeys,\n    isObject,\n    isBoolean\n} from '../Functions';\n\nexport default function prefix(subject, prefix, delimeter = '-') {\n    const prefixer = (value, key) => {\n        const string = (key || value)\n            .replace(new RegExp(`^${prefix}${delimeter}?`), '');\n\n        return [prefix, string].filter(value => !!value).join(delimeter);\n    };\n\n    if(isBoolean(subject)) {\n        return subject;\n    }\n\n    if(isObject(subject)) {\n        return mapKeys(subject, prefixer);\n    }\n\n    return prefixer(subject);\n}\n","import prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    props: {\n\n        /**\n         * The variant attribute\n         *\n         * @property String\n         */\n        variant: {\n            type: String,\n            default: 'primary'\n        }\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return this.$options.name;\n        },\n\n        variantClass() {\n            return prefix(this.variant, this.variantClassPrefix);\n        }\n\n    }\n\n};\n","import { each, extend, isArray, isObject } from '../../Helpers/Functions';\n\nexport default {\n\n    methods: {\n\n        mergeClasses() {\n            let classes = {};\n\n            each([].slice.call(arguments), arg => {\n                if(isObject(arg)) {\n                    extend(classes, arg);\n                }\n                else if(isArray(arg)) {\n                    classes = classes.concat(arg);\n                }\n                else if(arg) {\n                    classes[arg] = true;\n                }\n            });\n\n            return classes;\n        }\n\n    }\n\n};\n","<template>\n    <div class=\"progress\" :style=\"{'height': formattedHeight}\">\n        <div class=\"progress-bar\" role=\"progressbar\" :style=\"styles\" :class=\"mergeClasses(progressClasses, variantClass)\" :aria-valuenow=\"offsetValue\" :aria-valuemin=\"min\" :aria-valuemax=\"max\">\n            <span v-if=\"!!label\"><template v-if=\"label !== true\">{{label}}</template> {{offsetValue}}%</span>\n            <span v-else><slot/></span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\nimport Variant from '../../Mixins/Variant';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'progress-bar',\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * A custom color to be applied inline in the styles vs a contextual\n         * variant.\n         *\n         * @property String\n         */\n        color: String,\n\n        /**\n         * The progress bar percentage value\n         *\n         * @property String\n         */\n        value: {\n            type: Number,\n            required: true\n        },\n\n        /**\n         * The height of the progress bar\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * Show the progress bar value as a label inside the bar\n         *\n         * @property String\n         */\n        label: [String, Boolean],\n\n        /**\n         * Should the progress bar appear with stripes\n         *\n         * @property String\n         */\n        striped: Boolean,\n\n        /**\n         * Should the progress bar appear with animated stripes\n         *\n         * @property String\n         */\n        animated: Boolean,\n\n        /**\n         * The minimum value\n         *\n         * @property String\n         */\n        min: {\n            type: Number,\n            default: 0\n        },\n\n        /**\n         * The max value\n         *\n         * @property String\n         */\n        max: {\n            type: Number,\n            default: 100\n        }\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return 'bg';\n        },\n\n        offsetValue() {\n            return this.value / this.max * 100;\n        },\n\n        formattedHeight() {\n            return this.height ? unit(this.height) : null;\n        },\n\n        progressClasses() {\n            return {\n                'progress-bar-striped': this.striped,\n                'progress-bar-animated': this.animated\n            };\n        },\n\n        styles() {\n            return {\n                width: `${this.offsetValue}%`,\n                background: `${this.color} !important`\n            };\n        }\n\n    }\n\n};\n</script>\n","function duration(el) {\n    const duration = getComputedStyle(el).transitionDuration;\n    const numeric = parseFloat(duration, 10) || 0;\n    const unit = duration.match(/m?s/);\n\n    switch (unit[0]) {\n    case 's':\n        return numeric * 1000;\n    case 'ms':\n        return numeric;\n    }\n}\n\nexport default function transition(el) {\n    return new Promise((resolve, reject) => {\n        try {\n            const delay = duration(el);\n\n            setTimeout(() => {\n                resolve(delay);\n            }, delay);\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n","<template>\n    <div class=\"alert\" :class=\"mergeClasses(variantClass, {show: isVisible, fade: fade})\" role=\"alert\">\n        <alert-heading v-if=\"title || heading\">{{ title || heading }}</alert-heading>\n        <slot/>\n        <alert-close v-if=\"dismissible\" @click=\"dismiss()\"/>\n        <progress-bar v-if=\"typeof show === 'number'\" :variant=\"variant\" :height=\"5\" :value=\"dismissCount\" :max=\"show\" class=\"my-3\"/>\n    </div>\n</template>\n\n<script>\nimport AlertClose from './AlertClose';\nimport AlertHeading from './AlertHeading';\nimport ProgressBar from '../ProgressBar';\nimport Variant from '../../Mixins/Variant';\nimport transition from '../../Helpers/Transition';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'alert',\n\n    components: {\n        AlertClose,\n        AlertHeading,\n        ProgressBar\n    },\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Is the alert dismissible\n         *\n         * @property Boolean\n         */\n        dismissible: Boolean,\n\n        /**\n         * The alert's title/heading\n         *\n         * @property Boolean\n         */\n        heading: String,\n\n        /**\n         * The alert's title/heading\n         *\n         * @property Boolean\n         */\n        title: String,\n\n        /**\n         * Should the alert fade when hidden\n         *\n         * @property Boolean\n         */\n        fade: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Should the alert be visible by default. If passed a number, alert\n         * will be shown for the number of seconds that are passed.\n         *\n         * @property Boolean\n         */\n        show: {\n            type: [Number, Boolean],\n            default: true\n        }\n\n    },\n\n    methods: {\n\n        dismiss() {\n            transition(this.$el).then(delay => {\n                this.$emit('dismissed');\n            });\n\n            this.$emit('update:visible', this.isVisible = false);\n        }\n\n    },\n\n    mounted() {\n        if(typeof this.show === 'number') {\n            const el = this.$el.querySelector('.progress-bar');\n\n            this.$emit('dismiss-countdown', this.dismissCount = this.show);\n\n            const interval = setInterval(() => {\n                this.$emit('dismiss-countdown', this.dismissCount -= 1);\n\n                if(!this.dismissCount) {\n                    clearInterval(interval);\n                    transition(el).then(delay => this.dismiss());\n                }\n            }, 1000);\n        }\n    },\n\n    data() {\n        return {\n            dismissCount: this.show,\n            isVisible: this.show\n        };\n    }\n\n};\n</script>\n","<template>\n    <a class=\"alert-link\"><slot/></a>\n</template>\n\n<script>\nexport default {\n\n    name: 'alert-link'\n\n};\n</script>\n","<template>\n    <a v-if=\"href\" :href=\"href\" class=\"badge\" :class=\"mergeClasses(classes, variantClass)\">\n        <slot>{{label}}</slot>\n        <span class=\"sr-only\" v-html=\"accessibility\"/>\n    </a>\n    <span v-else class=\"badge\" :class=\"mergeClasses(classes, variantClass)\">\n        <slot>{{label}}</slot>\n        <span class=\"sr-only\" v-html=\"accessibility\"/>\n    </span>\n</template>\n\n<script>\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'badge',\n\n    mixins: [\n        Variant,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The screen reader accessibility label.\n         *\n         * @property String\n         */\n        accessibility: String,\n\n        /**\n         * If an href attribute is passed, the badge becomes an anchor.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The badge appear as pill shaped.\n         *\n         * @property String\n         */\n        pill: Boolean,\n\n        /**\n         * The badge label.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The badge appear as secondary in size to the parent element.\n         *\n         * @property String\n         */\n        secondary: Boolean\n\n    },\n\n    computed: {\n\n        classes() {\n            return prefix({\n                'pill': this.pill,\n                'secondary': this.secondary\n            }, this.$options.name);\n        }\n    }\n};\n</script>\n","import { isObject } from '../Helpers/Functions';\n\nexport default class BaseClass {\n    constructor(attributes) {\n        this.setAttribute(attributes);\n    }\n\n    getAttribute(key) {\n        return this.hasOwnProperty(key) ? this[key] : null;\n    }\n\n    getAttributes() {\n        const attributes = {};\n\n        Object.getOwnPropertyNames(this).forEach(key => {\n            attributes[key] = this.getAttribute(key);\n        });\n\n        return attributes;\n    }\n\n    getPublicAttributes() {\n        return Object.keys(this.getAttributes())\n            .filter(key => {\n                return !key.match(/^\\$/);\n            })\n            .reduce((obj, key) => {\n                obj[key] = this.getAttribute(key);\n\n                return obj;\n            }, {});\n    }\n\n    setAttribute(key, value) {\n        if(isObject(key)) {\n            this.setAttributes(key);\n        }\n        else {\n            this[key] = value;\n        }\n    }\n\n    setAttributes(values) {\n        for(const i in values) {\n            this.setAttribute(i, values[i]);\n        }\n    }\n}\n","import BaseClass from '../../Support/BaseClass';\nimport { extend } from '../../Helpers/Functions';\n\nexport default class Response extends BaseClass {\n    constructor(data) {\n        super(extend({\n            date: new Date()\n        }, data));\n    }\n\n    get data() {\n        return this.$data;\n    }\n\n    set data(value) {\n        this.$data = value;\n    }\n\n    get error() {\n        return this.$error;\n    }\n\n    set error(value) {\n        this.$error = value;\n    }\n\n    get request() {\n        return this.$request;\n    }\n\n    set request(value) {\n        this.$request = value;\n    }\n\n    get date() {\n        return this.$date;\n    }\n\n    set date(value) {\n        this.$date = value;\n    }\n\n    get success() {\n        return this.status >= 200 && this.status < 300;\n    }\n\n    get failed() {\n        return !this.success;\n    }\n}\n","import axios from 'axios';\nimport Response from './Response';\nimport BaseClass from '../../Support/BaseClass';\nimport { extend, deepExtend, isObject } from '../../Helpers/Functions';\n\nconst DEFAULTS = {\n    transformRequest: [],\n    transformResponse: []\n};\n\nexport default class Request extends BaseClass {\n    constructor(method, url, attributes) {\n        super({\n            options: {},\n            data: {},\n            headers: {},\n            params: {},\n            url: url,\n            method: method\n        });\n\n        if(isObject(attributes)) {\n            this.setAttribute(attributes);\n        }\n    }\n\n    send(attributes) {\n        this.sentAt = new Date();\n        this.setAttributes(attributes);\n\n        return new Promise((resolve, reject) => {\n            axios(this.options).then(\n                response => resolve(this.response = new Response(response)),\n                error => reject(this.response = new Response(error.response))\n            );\n        });\n    }\n\n    set cancel(value) {\n        this.$cancel = value;\n    }\n\n    get cancel() {\n        return this.$cancel || (() => {\n            throw new Error('The request has not been sent yet.');\n        });\n    }\n\n    get options() {\n        return deepExtend({\n            cancelToken: new axios.CancelToken(cancel => {\n                this.cancel = cancel;\n\n                return cancel;\n            })\n        }, DEFAULTS, this.getPublicAttributes());\n    }\n\n    set options(attributes) {\n        this.setAttribute(attributes);\n    }\n\n    get response() {\n        return this.$response;\n    }\n\n    set response(value) {\n        this.$response = value;\n    }\n\n    get error() {\n        return this.$error;\n    }\n\n    set error(value) {\n        this.$error = value;\n    }\n\n    get passed() {\n        return !!this.response && !this.error;\n    }\n\n    get failed() {\n        return !!this.response && !!this.error;\n    }\n\n    static get transform() {\n        return {\n            request: this.transformRequest,\n            response: this.transformResponse\n        };\n    }\n\n    static get defaults() {\n        return DEFAULTS;\n    }\n\n    static set defaults(value) {\n        extend(DEFAULTS, value);\n    }\n\n    static transformRequest(fn) {\n        DEFAULTS.transformRequest.push(fn);\n    }\n\n    static transformResponse(fn) {\n        DEFAULTS.transformResponse.push(fn);\n    }\n\n    static get(url, attributes) {\n        return this.make('get', url).send(attributes);\n    }\n\n    static post(url, attributes) {\n        return this.make('post', url, attributes).send();\n    }\n\n    static put(url, attributes) {\n        return this.make('put', url, attributes).send();\n    }\n\n    static patch(url, data, attributes) {\n        return this.make('path', url, attributes).send();\n    }\n\n    static delete(url, attributes) {\n        return this.make('delete', url, attributes).send();\n    }\n\n    static make(method, url, attributes) {\n        return new this(method, url, attributes);\n    }\n}\n","import Request from '../Request';\nimport { each, isNull, pickBy, isArray, isObject, isUndefined } from '../../Helpers/Functions';\n\nexport default class Model {\n    /**\n     * Construct the model instance\n     *\n     * @param data object\n     * @return void\n     */\n    constructor(data = {}, params = {}) {\n        this.$request = null;\n        this.$key = this.key();\n        this.$files = this.files();\n        this.$properties = this.properties();\n\n        each(params, (value, key) => {\n            this[key] = value;\n        });\n\n        this.initialize(data);\n    }\n\n    /**\n     * Initialize the model with the given data without considering the data\n     * as \"changed\".\n     *\n     * @param data object\n     * @return this\n     */\n    initialize(data) {\n        this.$exists = false;\n        this.$changed = {};\n        this.$attributes = {};\n        this.fill(data);\n        this.$initialized = true;\n\n        return this;\n    }\n\n    /**\n     * Define the corresponding API endpoint slug\n     *\n     * @return string\n     */\n    endpoint() {\n        //\n    }\n\n    /**\n     * Define the corresponding uri schema.\n     *\n     * @return string\n     */\n    uri() {\n        return [\n            (this.endpoint() || ''),\n            (this.exists() ? this.id() : null)\n        ]\n            .filter(value => !!value)\n            .concat([].slice.call(arguments))\n            .join('/');\n    }\n\n    /**\n     * Return the primary key value for the model\n     *\n     * @return {Number}\n     */\n    id() {\n        return this.get(this.key());\n    }\n\n    /**\n     * Define a primary key. This is used to determine if the model exists and\n     * which endpoint to use.\n     *\n     * @return string\n     */\n    key() {\n        return 'id';\n    }\n\n    /**\n     * Return an array of properties that are sent to the API. If no properties\n     * are defined, then all the attributes will be included in the request.\n     *\n     * @return array\n     */\n    properties() {\n        return [];\n    }\n\n    /**\n     * Return an array of file properties that are sent to the API. If no fies\n     * are defined, then request will always be sent with JSON vs. multipart.\n     *\n     * @return array\n     */\n    files() {\n        return [];\n    }\n\n    /**\n     * Set the attributes in the model with the data given.\n     *\n     * @param data object\n     * @return this\n     */\n    fill(data) {\n        this.setAttributes(data);\n\n        return this;\n    }\n\n    /**\n     * Get one or more attributes from the model.\n     *\n     * @param data string|array\n     * @return array|mixed\n     */\n    get(key) {\n        if(isArray(key)) {\n            return this.getAttributes().filter((value, i) => {\n                return key.indexOf(i) !== -1;\n            });\n        }\n        else {\n            return this.getAttribute(key);\n        }\n    }\n\n    /**\n     * Alias for setAttributes() except this method returns `this`. This method\n     * also accepts an array of values or key/value pair.\n     *\n     * @return this\n     */\n    set(key, value = undefined) {\n        if(isArray(key) || isObject(key)) {\n            this.setAttributes(key);\n        }\n        else {\n            this.setAttribute(key, value);\n        }\n\n        return this;\n    }\n\n    /**\n     * Get all the defined attributes.\n     *\n     * @return array\n     */\n    getAttributes() {\n        return this.$attributes;\n    }\n\n    /**\n     * Get the changed attributes\n     *\n     * @return array\n     */\n    getChangedAttributes() {\n        return Object.keys(this.$changed);\n    }\n\n    /**\n     * Get the changed attributes\n     *\n     * @return array\n     */\n    getOriginalValue(key) {\n        return this.$changed[key] || this.$attributes[key];\n    }\n\n    /**\n     * Get the Request object.\n     *\n     * @return {mixed}\n     */\n    getRequest() {\n        return this.$request;\n    }\n\n    /**\n     * Get the unchanged attributes\n     *\n     * @return array\n     */\n    getUnchangedAttributes() {\n        return Object.keys(this.$attributes).filter(key => !(key in this.$changed));\n    }\n\n    /**\n     * Get an attribute with a given key. If no key is defined\n     *\n     * @param key string\n     * @param default undefined|mixed\n     * @return array\n     */\n    getAttribute(key, value = undefined) {\n        return this.$attributes[key] || value;\n    }\n\n    /**\n     * Set an array or object of data as attributes.\n     *\n     * @param attributes array|object\n     * @return void\n     */\n    setAttributes(data) {\n        if(isArray(data) || isObject(data)) {\n            each(data, (value, key) => {\n                this.setAttribute(key, value);\n            });\n        }\n    }\n\n    /**\n     * Set an attribute with a given key/value pair. This will track the changes\n     * in the model within the `this.$changed` property. If the primary key\n     * is set, it will also change the `this.$exists` property.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    setAttribute(key, value) {\n        if(this.getAttribute(key) !== value) {\n            this.handleAttributeChange(key, value);\n\n            if(isUndefined(value)) {\n                delete this.$attributes[key];\n            }\n            else {\n                this.$attributes[key] = value;\n            }\n        }\n    }\n\n    /**\n     * Revert the model to its original state.\n     *\n     * @return bool\n     */\n    revert() {\n        each(this.$changed, (value, key) => {\n            if(!isUndefined(value)) {\n                this.$attributes[key] = value;\n            }\n            else {\n                delete this.$attributes[key];\n            }\n        });\n\n        this.$changed = {};\n    }\n\n    /**\n     * Returns if the model has a primary key set.\n     *\n     * @return bool\n     */\n    exists() {\n        return !!this.$exists;\n    }\n\n    /**\n     * Returns the model been changed or not.\n     *\n     * @return bool\n     */\n    hasChanged(key) {\n        return !key ? this.getChangedAttributes().length > 0 : !isUndefined(this.$changed[key]);\n    }\n\n    /**\n     * Does the model have any File objects. If so, need to send as multipart.\n     *\n     * @return bool\n     */\n    hasFiles() {\n        function count(files, total = 0) {\n            return Object.keys(files).reduce((carry, key) => {\n                const value = files[key];\n\n                if(isArray(value)) {\n                    return carry + count(value, total);\n                }\n                else if(value instanceof File || value instanceof FileList) {\n                    return carry + 1;\n                }\n                else {\n                    return carry;\n                }\n            }, total);\n        }\n\n        return count(this.toJSON()) !== 0;\n    }\n\n    /**\n     * Handle settings the $changed attributes when an attribute value is set.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    handleAttributeChange(key, value) {\n        if(this.$initialized) {\n            if(this.$changed[key] === value) {\n                delete this.$changed[key];\n            }\n            else if(!(key in this.$changed)) {\n                this.$changed[key] = this.getAttribute(key);\n            }\n        }\n\n        this.handlePrimaryKeyChange(key, value);\n    }\n\n    /**\n     * Set an array or object of data as attributes.\n     *\n     * @param key string\n     * @param value mixed\n     * @return void\n     */\n    handlePrimaryKeyChange(key, value) {\n        if(this.$key === key) {\n            this.$exists = !isUndefined(value) && !isNull(value);\n        }\n    }\n\n    /**\n     * Save the model to the database\n     *\n     * @param data object\n     * @return bool\n     */\n    save(data = {}, config = {}) {\n        this.fill(data);\n\n        return new Promise((resolve, reject) => {\n            const data = !this.hasFiles() ? this.toJSON() : this.toFormData();\n            const uri = config.uri || this.uri();\n            const method = config.method || (\n                !this.exists() || this.hasFiles() ? 'post' : 'put'\n            );\n\n            this.$request = this.constructor.request(method, uri, config);\n            this.$request.send({\n                data: data\n            }).then(response => resolve(this.fill(response)), reject);\n        });\n    }\n\n    /**\n     * Delete an existing model\n     *\n     * @param  {object} config\n     * @return {bool}\n     */\n    delete(config = {}) {\n        return new Promise((resolve, reject) => {\n            if(!this.exists()) {\n                reject(new Error('The model must have a primary key before it can be delete.'));\n            }\n\n            this.$request = this.constructor.request('delete', config.uri || this.uri(), config);\n            this.$request.send().then(response => {\n                resolve(response);\n            }, reject);\n        });\n    }\n\n    /**\n     * Cancel the current HTTP request if one exists.\n     *\n     * @return {self}\n     */\n    cancel() {\n        if(this.$request) {\n            this.$request.cancel();\n        }\n\n        return this;\n    }\n\n    /**\n     * Convert the Model instance to a FormData instance\n     *\n     * @return Object\n     */\n    toFormData() {\n        const form = new FormData();\n\n        each(this.toJSON(), (value, key) => {\n            if(isArray(value)) {\n                each(value, item => {\n                    if(!(item instanceof File) && (isObject(item) || isArray(item))) {\n                        item = JSON.stringify(item);\n                    }\n\n                    form.append(key.replace(/(.+)(\\[.+\\]?)$/, '$1') + '[]', item);\n                });\n            }\n            else if(!(value instanceof File) && isObject(value)) {\n                form.append(key, JSON.stringify(value));\n            }\n            else if(!isNull(value)) {\n                form.append(key, value);\n            }\n        });\n\n        return form;\n    }\n\n    /**\n     * Convert the instance to JSON payload\n     *\n     * @return Object\n     */\n    toJSON() {\n        return pickBy(this.$attributes, (value, key) => {\n            return !this.$properties.length || (\n                key === this.key() || this.$properties.indexOf(key) !== -1\n            );\n        });\n    }\n\n    /**\n     * Convert the model to a string\n     *\n     * @return String\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * Alias for toJSON\n     *\n     * @return Object\n     */\n    toJson() {\n        return this.toJSON();\n    }\n\n    /**\n     * Search for a collection of models\n     *\n     * @param data object\n     * @return bool\n     */\n    static search(params = {}, config = {}) {\n        const model = new this();\n\n        return new Promise((resolve, reject) => {\n            model.$request = this.request('get', (config.uri || model.uri()), config);\n            model.$request.send().then(response => {\n                resolve(response);\n            }, errors => {\n                reject(errors);\n            });\n        });\n    }\n\n    /**\n     * Find an existing model by id\n     *\n     * @param data object\n     * @return bool\n     */\n    static find(id, config = {}) {\n        return new Promise((resolve, reject) => {\n            const model = new this();\n            model.$request = this.request('get', (config.uri || model.uri(id)), config);\n            model.$request.send().then(response => {\n                resolve(model.initialize(response.data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Create a request from the model data\n     *\n     * @param data object\n     * @return bool\n     */\n    static request(method, url, config = {}) {\n        return Request.make(method, url, config);\n    }\n}\n","<template>\n    <form @submit.prevent=\"onSubmit\" :class=\"{'form-inline': inline}\" :novalidate=\"novalidate\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nimport Model from '../../Http/Model/Model';\nimport { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    props: {\n\n        /**\n         * The Model method used to send the request.\n         *\n         * @property Boolean\n         */\n        method: {\n            type: String,\n            default: 'save',\n            validate(value) {\n                return this.model && isFunction(this.model[value]);\n            }\n        },\n\n        /**\n         * An object of form data\n         *\n         * @property Object\n         */\n        data: {\n            type: Object,\n            default: () => {\n                return {};\n            }\n        },\n\n        /**\n         * A JSON object of request headers\n         *\n         * @property Object\n         */\n        headers: Object,\n\n        /**\n         * Display the form fields inline\n         *\n         * @property Object\n         */\n        model: {\n            type: Object,\n            validate(value) {\n                return value instanceof Model;\n            }\n        },\n\n        /**\n         * Display the form fields inline\n         *\n         * @property Boolean\n         */\n        inline: Boolean,\n\n        /**\n         * A callback function for the `submit` event\n         *\n         * @property Boolean\n         */\n        novalidate: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * A JSON object of key/value pairs to build the query string.\n         *\n         * @property Object\n         */\n        query: Object,\n\n        /**\n         * A URI or URL used to redirect user after form submits successfully.\n         *\n         * @property Function|String\n         */\n        redirect: [Object, String, Function],\n\n        /**\n         * A callback function for the `submit` event\n         *\n         * @property Function\n         */\n        onSubmit: {\n            type: Function,\n            default(event) {\n                this.model && this.submit(event);\n            }\n        },\n\n        /**\n         * A callback function for the `submit:success` event\n         *\n         * @property Function\n         */\n        onSubmitSuccess: {\n            type: Function,\n            default(event, data) {\n                this.$emit('submit:success', event, data);\n                this.$emit('submit:complete', event, true, data);\n\n                if(this.redirect && isFunction(this.redirect)) {\n                    this.redirect(this);\n                }\n                else if(this.redirect && this.$router) {\n                    this.$router.push(this.redirect);\n                }\n            }\n        },\n\n        /**\n         * A callback function for the `submit:success` event\n         *\n         * @property Function\n         */\n        onSubmitFailed: {\n            type: Function,\n            default(event, errors) {\n                this.$emit('submit:failed', event, errors);\n                this.$emit('submit:complete', event, false, errors);\n            }\n        }\n\n    },\n\n    methods: {\n\n        submit(event) {\n            this.$emit('submit', event);\n\n            return this.model[this.method](this.data, {\n                query: this.query,\n                headers: this.headers,\n                onUploadProgress: event => {\n                    this.$emit('submit:progress', event);\n                }\n            }).then((data) => {\n                this.onSubmitSuccess(event, data);\n            }, (errors) => {\n                this.onSubmitFailed(event, errors);\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            errors: {}\n        };\n    }\n\n};\n</script>\n","<template>\n    <li class=\"breadcrumb-item\" :class=\"{'active': active}\" :aria-current=\"active ? 'page' : false\">\n        <a v-if=\"!active && href\" :href=\"href\">\n            <slot>{{label}}</slot>\n        </a>\n        <router-link v-else-if=\"!active && to\" :to=\"to\">\n            <slot>{{label}}</slot>\n        </router-link>\n        <template v-else>\n            <slot>{{label}}</slot>\n        </template>\n    </li>\n</template>\n\n<script>\nexport default {\n\n    name: 'breadcrumb-item',\n\n    props: {\n\n        /**\n         * Is the item active?\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * An href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * An breadcrumb label\n         *\n         * @prop {String}\n         */\n        label: String,\n\n        /**\n         * The to attribute which is passed to the <router-link> component.\n         *\n         * @prop {Object}\n         */\n        to: [String, Object]\n\n    }\n\n};\n</script>\n","<template>\n    <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n            <breadcrumb-item\n                v-if=\"items.length\"\n                v-for=\"(item, i) in items\"\n                v-bind=\"item\"\n                :key=\"i\"\n                :current=\"i === item.length - 1\"\n            />\n            <slot/>\n        </ol>\n    </nav>\n</template>\n\n<script>\nimport BreadcrumbItem from './BreadcrumbItem';\n\nexport default {\n\n    name: 'breadcrumb',\n\n    components: {\n        BreadcrumbItem\n    },\n\n    props: {\n\n        /**\n         * An array of breadcrumbs\n         *\n         * @prop {Array}\n         */\n        items: Array\n\n    }\n\n};\n</script>\n","import prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    props: {\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        }\n\n    },\n\n    computed: {\n\n        sizeableClassPrefix() {\n            return this.$options.name;\n        },\n\n        sizeableClass() {\n            return prefix(this.size, this.sizeableClassPrefix);\n        }\n\n    }\n\n};\n","export default {\n\n    computed: {\n\n        colorableClasses() {\n            const classes = {};\n\n            for(let i in this.$attrs) {\n                if(i.match(/^bg|text|border|bg-gradient-/)) {\n                    classes[i] = true;\n                }\n            }\n\n            return classes;\n        }\n\n    }\n\n};\n","<template>\n    <router-link v-if=\"to\" :to=\"to\" :disabled=\"disabled\" :class=\"classes\" @click=\"onClick\" role=\"button\">\n        <slot/>\n    </router-link>\n    <a v-else-if=\"href\" :href=\"href\" :disabled=\"disabled\" :class=\"classes\" @click=\"onClick\" role=\"button\">\n        <slot/>\n    </a>\n    <label v-else-if=\"label\" :disabled=\"disabled\" :class=\"classes\" @click=\"onClick\" role=\"button\">\n        <slot/>\n    </label>\n    <button v-else :type=\"type\" :disabled=\"disabled\" :class=\"classes\" @click=\"onClick\">\n        <slot/>\n    </button>\n</template>\n\n<script>\nimport Variant from '../../Mixins/Variant';\nimport Sizeable from '../../Mixins/Sizeable';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'btn',\n\n    mixins: [\n        Variant,\n        Sizeable,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Display button with active state\n         *\n         * @property String\n         */\n        active: Boolean,\n\n        /**\n         * Display button with blocked state\n         *\n         * @property String\n         */\n        block: Boolean,\n\n        /**\n         * Display button with disabled state\n         *\n         * @property String\n         */\n        disabled: Boolean,\n\n        /**\n         * If an href is passed, button is an router-link element\n         *\n         * @property Boolean\n         */\n        href: String,\n\n        /**\n         * Should use <label> as the element for the button. Used for inputs\n         * wrappers (toggles).\n         *\n         * @property Boolean\n         */\n        label: Boolean,\n\n        /**\n         * Display as an outline button\n         *\n         * @property String\n         */\n        outline: Boolean,\n\n        /**\n         * If an to is passed, button is an router-link element\n         *\n         * @property Boolean\n         */\n        to: [Object, String],\n\n        /**\n         * The type attribute for the button. Not applied if an anchor\n         *\n         * @property String\n         */\n        type: String\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return this.$options.name + (this.outline ? '-outline' : '');\n        },\n\n        classes() {\n            return this.mergeClasses(\n                'btn',\n                this.variantClass,\n                this.sizeableClass,\n                this.colorableClasses,\n                this.block ? 'btn-block' : '',\n                this.active ? 'active' : ''\n            );\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/mixins.scss';\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n@mixin button-block($size) {\n    width: 100%;\n    display: block;\n}\n\n@include media-breakpoint-down(xs) {\n    .btn-xs-block {\n        @include button-block(xs);\n\n        + .btn-xs-block {\n            margin-top: $btn-block-spacing-y;\n        }\n    }\n}\n\n@include media-breakpoint-down(sm) {\n    .btn-sm-block {\n        @include button-block(sm);\n\n        + .btn-xs-block,\n        + .btn-sm-block {\n            margin-top: $btn-block-spacing-y;\n        }\n    }\n}\n\n@include media-breakpoint-down(md) {\n    .btn-md-block {\n        @include button-block(md);\n\n        + .btn-xs-block,\n        + .btn-sm-block,\n        + .btn-md-block {\n            margin-top: $btn-block-spacing-y;\n        }\n    }\n}\n\n@include media-breakpoint-down(lg) {\n    .btn-lg-block {\n        @include button-block(lg);\n\n        + .btn-xs-block,\n        + .btn-sm-block,\n        + .btn-md-block,\n        + .btn-lg-block {\n            margin-top: $btn-block-spacing-y;\n        }\n    }\n}\n\n@include media-breakpoint-down(xl) {\n    .btn-xl-block {\n        @include button-block(xl);\n\n        + .btn-xs-block,\n        + .btn-sm-block,\n        + .btn-md-block,\n        + .btn-lg-block,\n        + .btn-xl-block {\n            margin-top: $btn-block-spacing-y;\n        }\n    }\n}\n\n</style>\n","<template>\n    <button :type=\"type\" class=\"btn\" :class=\"classes\" @click=\"onClick\">\n        <i v-if=\"icon\" :class=\"icon\"/> {{label}}\n        <slot/>\n        <activity-indicator :type=\"indicator\" />\n    </button>\n</template>\n\n<script>\nimport ActivityIndicator from '../ActivityIndicator';\n\nconst convertAnimationDelayToInt = function(delay) {\n    const num = parseFloat(delay, 10);\n    const matches = delay.match(/m?s/);\n    const unit = matches ? matches[0] : false;\n\n    let milliseconds;\n\n    switch (unit) {\n    case 's': // seconds\n        milliseconds = num * 1000;\n        break;\n    case 'ms':\n    default:\n        milliseconds = num;\n        break;\n    }\n\n    return milliseconds || 0;\n};\n\nconst animated = function(el, callback) {\n    const defaultView = (el.ownerDocument || document).defaultView;\n\n    setTimeout(() => {\n        callback.apply();\n    }, convertAnimationDelayToInt(defaultView.getComputedStyle(el).animationDuration));\n};\n\nexport default {\n\n    name: 'activity-button',\n\n    components: {\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Make the button appear with the active state.\n         *\n         * @property {Boolea}n}\n         */\n        active: Boolean,\n\n        /**\n         * Show the activity indicator inside the button.\n         *\n         * @property {Boolea}n}\n         */\n        activity: Boolean,\n\n        /**\n         * Display the button as block width.\n         *\n         * @property {Boolea}n}\n         */\n        block: Boolean,\n\n        /**\n         * Make the button appear with the disabled state.\n         *\n         * @property {Boolea}n}\n         */\n        disabled: Boolean,\n\n        /**\n         * The button label. If not passed as a property, label must be passed\n         * inside the element's html.\n         *\n         * @property {String}\n         */\n        label: String,\n\n        /**\n         * The button icon\n         *\n         * @property {String}\n         */\n        icon: String,\n\n        /**\n         * The `type` attribute for the button element.\n         *\n         * @property {String}\n         */\n        type: String,\n\n        /**\n         * The size of the button.\n         *\n         * @property {String}\n         */\n        size: {\n            type: String,\n            default: 'md'\n        },\n\n        /**\n         * The variant of the button.\n         *\n         * @property {String}\n         */\n        variant: {\n            type: String,\n            default: 'primary'\n        },\n\n        /**\n         * The type of activity indicator inside the button.\n         *\n         * @property {String}\n         */\n        indicator: {\n            type: String,\n            default: 'spinner'\n        },\n\n        /**\n         * The orientation of the activity button inside the button.\n         *\n         * @property {String}\n         */\n        orientation: {\n            type: String,\n            default: 'right'\n        }\n    },\n\n    methods: {\n\n        /**\n         * Disable the button.\n         *\n         * @return void\n         */\n        disable() {\n            this.$el.disabled = true;\n        },\n\n        /**\n         * Enable the button.\n         *\n         * @return void\n         */\n        enable() {\n            this.$el.disabled = false;\n        },\n\n        /**\n         * Show the activity indicator inside the button.\n         *\n         * @return void\n         */\n        showActivity() {\n            this.disable();\n\n            animated(this.$el, () => {\n                this.$el.classList.add('btn-activity');\n                this.$emit('activity:show');\n            });\n        },\n\n        /**\n         * Hide the activity indicator inside the button.\n         *\n         * @return void\n         */\n        hideActivity() {\n            this.$el.classList.add('btn-hide-activity');\n\n            animated(this.$el, () => {\n                this.enable();\n                this.$el.classList.remove('btn-activity', 'btn-hide-activity');\n                this.$emit('activity:hide');\n            });\n        },\n\n        /**\n         * The click callback function\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * An object of classes to append to the button.\n         *\n         * @return void\n         */\n        classes() {\n            const classes = {\n                'disabled': this.disabled,\n                'active': this.active,\n                'btn-block': this.block,\n                'btn-activity': this.activity\n            };\n\n            classes['btn-' + this.size.replace('btn-', '')] = !!this.size;\n            classes['btn-' + this.variant.replace('btn-', '')] = !!this.variant;\n            classes['btn-activity-' + this.orientation.replace('btn-activity-', '')] = !!this.orientation;\n            classes['btn-activity-indicator-' + this.indicator.replace('btn-activity-indicator-', '')] = !!this.indicator;\n\n            return classes;\n        }\n    },\n\n    watch: {\n\n        activity(value) {\n            if(value) {\n                this.showActivity();\n            }\n            else {\n                this.hideActivity();\n            }\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n// Activity Indicator variables\n$activity-indicator-animated-delay-in: 333ms;\n$activity-indicator-animated-delay-out: 333ms;\n\n$activity-indicator-spinner-size: $font-size-base * 2.25;\n$activity-indicator-spinner-width: 10%;\n$activity-indicator-spinner-height: 30%;\n$activity-indicator-spinner-delay: 1s;\n\n@keyframes btn-activity-in {\n    0%, 100% {\n        transform: scale(1);\n    } 30% {\n        transform: scale(.98);\n    }\n}\n\n@keyframes btn-activity-out {\n    0%, 100% {\n        transform: scale(1);\n    } 70% {\n        transform: scale(.98);\n    }\n}\n\n// Activity Indicator Button\n.btn-activity-top,\n.btn-activity-bottom,\n.btn-activity-left,\n.btn-activity-right {\n    position: relative;\n    transition: padding ($activity-indicator-animated-delay-in / 2) ease-in;\n\n    & .activity-indicator {\n        opacity: 0;\n        position: absolute;\n        visibility: hidden;\n        transition: opacity $activity-indicator-animated-delay-out ease-in;\n    }\n}\n\n.btn-activity-top .activity-indicator,\n.btn-activity-bottom .activity-indicator {\n    left: 50%;\n    margin-right: -50%;\n    transform: translateX(-50%);\n}\n.btn-activity-left .activity-indicator,\n.btn-activity-right .activity-indicator {\n    top: 50%;\n    margin-bottom: -50%;\n    transform: translateY(-50%);\n}\n\n.btn-activity:not(.btn-link) {\n    animation: btn-activity-in $activity-indicator-animated-delay-in;\n}\n.btn-hide-activity:not(.btn-link) {\n    animation: btn-activity-out $activity-indicator-animated-delay-out;\n}\n\n.btn-activity {\n\n    &.btn-hide-activity .activity-indicator {\n        opacity: 0;\n    }\n\n    & .activity-indicator {\n        opacity: 1;\n        visibility: visible;\n        position: absolute;\n    }\n\n    &.btn-outline-primary.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $primary;\n    }\n    &.btn-outline-secondary.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $success;\n    }\n    &.btn-outline-danger.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $danger;\n    }\n    &.btn-outline-success.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $success;\n    }\n    &.btn-outline-warning.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $warning;\n    }\n    &.btn-outline-info.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $info;\n    }\n    &.btn-outline-link.btn-activity-indicator-spinner .activity-indicator > div:before {\n        background-color: $link-color;\n    }\n\n    &.btn-xs {\n        &.btn-activity-top.btn-activity-indicator-dots {\n            padding-top: $font-size-base * 1.25;\n\n            & .activity-indicator {\n                top: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-dots {\n            padding-bottom: $font-size-base * 1.25;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-dots {\n            padding-left: $font-size-base * 2.33;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-dots {\n            padding-right: $font-size-base * 2.33;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-dots .activity-indicator > div,\n        & .activity-indicator-dots > div {\n            width: $font-size-base / 3;\n            height: $font-size-base / 3;\n        }\n\n        &.btn-activity-top.btn-activity-indicator-spinner {\n            padding-top: $font-size-base * 1.66;\n\n            & .activity-indicator {\n                top: $font-size-base * .25;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-spinner {\n            padding-bottom: $font-size-base * 1.66;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .25;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-spinner {\n            padding-left: $font-size-base * 1.66;\n\n            & .activity-indicator {\n                left: $font-size-base * .25;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-spinner {\n            padding-right: $font-size-base * 1.66;\n\n            & .activity-indicator {\n                right: $font-size-base * .25;\n            }\n        }\n\n        &.btn-activity-indicator-spinner .activity-indicator,\n        & .activity-indicator-spinner {\n            width: $font-size-base * 1;\n            height: $font-size-base * 1;\n\n            & > div:before {\n                //width: $activity-indicator-spinner-width * .63;\n                //height: $activity-indicator-spinner-height * .66;\n                width: $activity-indicator-spinner-width * .84;\n                height: $activity-indicator-spinner-height * 1;\n            }\n        }\n    }\n\n    &.btn-sm {\n        &.btn-activity-top.btn-activity-indicator-dots {\n            padding-top: $font-size-base * 1.75;\n\n            & .activity-indicator {\n                top: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-dots {\n            padding-bottom: $font-size-base * 1.75;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-dots {\n            padding-left: $font-size-base * 3;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-dots {\n            padding-right: $font-size-base * 3;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-dots .activity-indicator > div,\n        & .activity-indicator-dots > div {\n            width: $font-size-base / 2;\n            height: $font-size-base / 2;\n        }\n\n        &.btn-activity-top.btn-activity-indicator-spinner {\n            padding-top: $font-size-base * 2;\n\n            & .activity-indicator {\n                top: $font-size-base * .33;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-spinner {\n            padding-bottom: $font-size-base * 2;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .33;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-spinner {\n            padding-left: $font-size-base * 2.5;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-spinner {\n            padding-right: $font-size-base * 2.5;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-spinner .activity-indicator,\n        & .activity-indicator-spinner {\n            width: $font-size-base * 1.5;\n            height: $font-size-base * 1.5;\n\n            & > div:before {\n                width: $activity-indicator-spinner-width * .56;\n                height: $activity-indicator-spinner-height;\n            }\n        }\n    }\n\n    &:not(.btn-xs):not(.btn-sm):not(.btn-md):not(.btn-lg):not(.btn-xl),\n    &.btn-md {\n        &.btn-activity-top.btn-activity-indicator-dots {\n            padding-top: $font-size-base * 2;\n\n            & .activity-indicator {\n                top: $font-size-base * .66;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-dots {\n            padding-bottom: $font-size-base * 2;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .66;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-dots {\n            padding-left: $font-size-base * 4;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-dots {\n            padding-right: $font-size-base * 4;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-dots .activity-indicator > div,\n        & .activity-indicator-dots > div {\n            width: $font-size-base / 1.25;\n            height: $font-size-base / 1.25;\n        }\n\n        &.btn-activity-top.btn-activity-indicator-spinner {\n            padding-top: $font-size-base * 2.75;\n\n            & .activity-indicator {\n                top: $font-size-base * .33;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-spinner {\n            padding-bottom: $font-size-base * 2.75;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .33;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-spinner {\n            padding-left: $font-size-base * 2.75;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-spinner {\n            padding-right: $font-size-base * 2.75;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-spinner .activity-indicator,\n        & .activity-indicator-spinner {\n            width: $font-size-base * 1.75;\n            height: $font-size-base * 1.75;\n\n            & > div:before {\n                width: $activity-indicator-spinner-width * .66;\n                height: $activity-indicator-spinner-height;\n            }\n        }\n    }\n\n    &.btn-lg {\n        &.btn-activity-top.btn-activity-indicator-dots {\n            padding-top: $font-size-base * 2.75;\n\n            & .activity-indicator {\n                top: $font-size-base * .66;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-dots {\n            padding-bottom: $font-size-base * 2.75;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .66;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-dots {\n            padding-left: $font-size-base * 5;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-dots {\n            padding-right: $font-size-base * 5;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-dots .activity-indicator > div,\n        & .activity-indicator-dots > div {\n            width: $font-size-base * 1.1;\n            height: $font-size-base * 1.1;\n        }\n\n        &.btn-activity-top.btn-activity-indicator-spinner {\n            padding-top: $font-size-base * 3.5;\n\n            & .activity-indicator {\n                top: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-spinner {\n            padding-bottom: $font-size-base * 3.5;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-spinner {\n            padding-left: $font-size-base * 3.25;\n\n            & .activity-indicator {\n                left: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-spinner {\n            padding-right: $font-size-base * 3.25;\n\n            & .activity-indicator {\n                right: $font-size-base * .5;\n            }\n        }\n\n        &.btn-activity-indicator-spinner .activity-indicator,\n        & .activity-indicator-spinner {\n            width: $font-size-base * 2.15;\n            height: $font-size-base * 2.15;\n\n            & > div:before {\n                width: $activity-indicator-spinner-width * .75;\n            }\n        }\n    }\n\n    &.btn-xl {\n        &.btn-activity-top.btn-activity-indicator-dots {\n            padding-top: $font-size-base * 3.75;\n\n            & .activity-indicator {\n                top: $font-size-base * 1;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-dots {\n            padding-bottom: $font-size-base * 3.75;\n\n            & .activity-indicator {\n                bottom: $font-size-base * 1;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-dots {\n            padding-left: $font-size-base * 6;\n\n            & .activity-indicator {\n                left: $font-size-base * .75;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-dots {\n            padding-right: $font-size-base * 6;\n\n            & .activity-indicator {\n                right: $font-size-base * .75;\n            }\n        }\n\n        &.btn-activity-indicator-dots .activity-indicator > div,\n        & .activity-indicator-dots > div {\n            width: $font-size-base * 1.25;\n            height: $font-size-base * 1.25;\n        }\n\n        &.btn-activity-top.btn-activity-indicator-spinner {\n            padding-top: $font-size-base * 4.25;\n\n            & .activity-indicator {\n                top: $font-size-base * .66;\n            }\n        }\n\n        &.btn-activity-bottom.btn-activity-indicator-spinner {\n            padding-bottom: $font-size-base * 4.25;\n\n            & .activity-indicator {\n                bottom: $font-size-base * .66;\n            }\n        }\n\n        &.btn-activity-left.btn-activity-indicator-spinner {\n            padding-left: $font-size-base * 4;\n\n            & .activity-indicator {\n                left: $font-size-base * .75;\n            }\n        }\n\n        &.btn-activity-right.btn-activity-indicator-spinner {\n            padding-right: $font-size-base * 4;\n\n            & .activity-indicator {\n                right: $font-size-base * .75;\n            }\n        }\n\n        &.btn-activity-indicator-spinner .activity-indicator,\n        & .activity-indicator-spinner {\n            width: $font-size-base * 2.5;\n            height: $font-size-base * 2.5;\n\n            & > div:before {\n                width: $activity-indicator-spinner-width * .75;\n            }\n        }\n    }\n\n}\n</style>\n","export default {\n\n    props: {\n\n        /**\n         * Should show only for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnly: Boolean,\n\n        /**\n         * Should be focusable for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnlyFocusable: Boolean\n\n    },\n\n    computed: {\n        screenreaderClasses() {\n            return {\n                'sr-only': this.srOnly,\n                'sr-only-focusable': this.srOnlyFocusable\n            };\n        }\n    }\n\n};\n","<template>\n\n    <small class=\"form-text\" :class=\"classes\"><slot /></small>\n\n</template>\n\n<script>\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'help-text',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"form-group\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'form-group'\n\n};\n</script>\n\n<style lang=\"scss\">\n.form-group {\n    &, .form-group-inner {\n        position: relative;\n    }\n\n    .activity-indicator {\n        position: absolute;\n        right: 0;\n        top: 50%;\n        transform: translate(-1rem, -50%);\n        transition: all .25s ease-in;\n    }\n}\n</style>\n","<template>\n\n    <label :class=\"classes\"><slot/></label>\n\n</template>\n\n<script>\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'form-label',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"{'invalid-feedback': invalid, 'valid-feedback': valid && !invalid}\">\n        <slot>{{label}}</slot>\n    </div>\n\n</template>\n\n<script>\nimport Colorable from '../../Mixins/Colorable/Colorable';\n\nexport default {\n\n    name: 'form-feedback',\n\n    mixins: [\n        Colorable\n    ],\n\n    props: {\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        invalid: Boolean,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        valid: Boolean\n\n    }\n\n};\n</script>\n","import prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport { each, isArray, isObject } from '../../Helpers/Functions';\n\nexport default {\n\n    inheritAttrs: false,\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The autocomplete attribute value.\n         *\n         * @property String\n         */\n        // autocomplete: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        // id: [Number, String],\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The field name attribute value.\n         *\n         * @property String\n         */\n        // name: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        value: {\n            default: null\n        },\n\n        /**\n         * The placeholder attribute value.\n         *\n         * @property String\n         */\n        // placeholder: String,\n\n        /**\n         * Is the field required.\n         *\n         * @property String\n         */\n        // required: Boolean,\n\n        /**\n         * Add form-group wrapper to input\n         *\n         * @property String\n         */\n        group: {\n            type: Boolean,\n            value: true\n        },\n\n        /**\n         * The regex pattern for validation.\n         *\n         * @property String\n         */\n        // pattern: String,\n\n        /**\n         * An inline field validation error.\n         *\n         * @property String|Boolean\n         */\n        error: String,\n\n        /**\n         * An inline field validation errors passed as object with key/value\n         * pairs. If errors passed as an object, the form name will be used for\n         * the key.\n         *\n         * @property Object|Boolean\n         */\n        errors: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n\n        /**\n         * Some feedback to add to the field once the field is successfully\n         * valid.\n         *\n         * @property String\n         */\n        feedback: [String, Array],\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'change', 'click', 'keyup', 'keydown', 'progress', 'paste'];\n            }\n        },\n\n        /**\n         * The default class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control'\n        },\n\n        /**\n         * Hide the label for browsers, but leave it for screen readers.\n         *\n         * @property String\n         */\n        hideLabel: Boolean,\n\n        /**\n         * Additional margin/padding classes for fine control of spacing\n         *\n         * @property String\n         */\n        spacing: String,\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        },\n\n        /**\n         * Display the form field inline\n         *\n         * @property String\n         */\n        inline: Boolean,\n\n        /**\n         * If the form control is readonly, display only as text?\n         *\n         * @property String\n         */\n        // plaintext: Boolean,\n\n        /**\n         * Is the form control readonly?\n         *\n         * @property String\n         */\n        // readonly: Boolean,\n\n        /**\n         * Is the form control disabled?\n         *\n         * @property String\n         */\n        // disabled: Boolean,\n\n        /**\n         * Some instructions to appear under the field label\n         *\n         * @property String\n         */\n        helpText: [Number, String],\n\n        /**\n         * The maxlength attribute\n         *\n         * @property String\n         */\n        maxlength: [Number, String]\n\n    },\n\n    directives: {\n        bindEvents: {\n            bind(el, binding, vnode) {\n                // Add/remove the has-focus class from the form control\n                el.addEventListener('focus', event => event.target.classList.add('has-focus'));\n                el.addEventListener('blur', event => event.target.classList.remove('has-focus'));\n                el.addEventListener('input', e => {\n                    el.classList[!el.value ? 'add' : 'remove']('is-empty');\n                });\n\n                // Bubble the native events up to the vue component.\n                each((binding.value || vnode.context.bindEvents), name => {\n                    el.addEventListener(name, event => {\n                        vnode.context.$emit(name, event);\n                    });\n                });\n            }\n        }\n    },\n\n    methods: {\n\n        blur() {\n            if(this.getInputField()) {\n                this.getInputField().blur();\n            }\n        },\n\n        focus() {\n            if(this.getInputField()) {\n                this.getInputField().focus();\n            }\n        },\n\n        getInputField() {\n            return this.$el.querySelector(\n                '.form-control, input, select, textarea'\n            );\n        },\n\n        getFieldErrors() {\n            let errors = this.error || this.errors;\n\n            if(isObject(this.errors)) {\n                errors = this.errors[this.name || this.id];\n            }\n\n            return !errors || isArray(errors) || isObject(errors) ? errors : [errors];\n        }\n\n    },\n\n    computed: {\n\n        id() {\n            return this.$attrs.id;\n        },\n\n        name() {\n            return this.$attrs.name;\n        },\n\n        controlAttributes() {\n            const classes = this.mergeClasses(\n                this.controlClasses, this.colorableClasses\n            );\n\n            return Object.keys(Object.keys(this.$attrs))\n                .concat([['class', classes]])\n                .reduce((carry, key) => {\n                    if(isArray(key)) {\n                        carry[key[0]] = key[1];\n                    }\n                    else {\n                        carry[key] = this[key] || this.$attrs[key];\n                    }\n\n                    return carry;\n                }, {});\n        },\n\n        controlClass() {\n            return this.defaultControlClass + (this.plaintext ? '-plaintext' : '');\n        },\n\n        controlSizeClass() {\n            return prefix(this.size, this.controlClass);\n        },\n\n        controlClasses() {\n            return [\n                (this.spacing || ''),\n                this.controlClass,\n                this.controlSizeClass,\n                (this.invalidFeedback ? 'is-invalid' : '')\n            ].join(' ');\n        },\n\n        hasDefaultSlot() {\n            return !!this.$slots.default;\n        },\n\n        invalidFeedback() {\n            const errors = this.getFieldErrors();\n\n            return this.error || (\n                isArray(errors) ? errors.join('<br>') : errors\n            );\n        },\n\n        validFeedback() {\n            return isArray(this.feedback) ? this.feedback.join('<br>') : this.feedback;\n        }\n\n    }\n\n};\n","<template>\n    <component\n        v-bind=\"$attrs\"\n        v-model=\"testValue\"\n        :is=\"element\"\n        :aria-label=\"label || name || id\"\n        :aria-describedby=\"id || name\"\n        @input=\"$emit('input', $event.target.value)\">\n        <slot/>\n    </component>\n</div>\n\n</template>\n\n<script>\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\n// import { extend, omitBy, isNull, isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'form-control',\n\n    mixins: [\n        Colorable,\n        FormControl\n    ],\n\n    props: {\n\n        element: {\n            type: String,\n            required: true\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <form-group :class=\"{'has-activity': activity}\">\n\n        <slot name=\"label\">\n            <form-label ref=\"label\" v-if=\"label || hasDefaultSlot\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <div class=\"form-group-inner\">\n            <slot name=\"control\" data-test=\"test\">\n                <input\n                    v-bind-events\n                    v-bind=\"controlAttributes\"\n                    :value=\"value\"\n                    @input=\"$emit('input', $event.target.value)\"\n                />\n            </slot>\n\n            <slot name=\"activity\">\n                <transition name=\"slide-fade\">\n                    <activity-indicator key=\"test\" v-if=\"activity\" ref=\"activity\" type=\"dots\" :size=\"size\"/>\n                </transition>\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" ref=\"feedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-else-if=\"invalidFeedback\" ref=\"feedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n        </div>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" ref=\"help\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormControl from '../FormControl';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport ActivityIndicator from '../ActivityIndicator';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nexport default {\n\n    name: 'input-field',\n\n    mixins: [\n        Colorable,\n        FormControlMixin\n    ],\n\n    components: {\n        HelpText,\n        FormControl,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.input-field {\n    .slide-fade-enter,\n    .slide-fade-leave-to {\n        opacity: 1;\n        transform: translate(25%, -50%);\n    }\n}\n</style>\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label || hasDefaultSlot\" :for=\"id\">\n                <slot>{{label}}</slot>\n            </form-label>\n        </slot>\n\n        <div class=\"custom-file\">\n\n            <slot name=\"placeholder\">\n                <form-label :class=\"mergeClasses(colorableClasses, 'custom-file-label')\" :for=\"id\" v-html=\"placeholder || 'Choose file'\" />\n            </slot>\n\n            <input\n                v-bind-events\n                type=\"file\"\n                :class=\"controlClasses\"\n                :id=\"id\"\n                :width=\"width\"\n                :height=\"height\"\n                :required=\"required\"\n                :multiple=\"multiple\"\n                :readonly=\"readonly\"\n                @change=\"$emit('change', $event.target.files)\">\n\n            <slot name=\"help\">\n                <help-text v-if=\"helpText\" v-html=\"helpText\" />\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n\n        </div>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport InputField from '../InputField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'file-field',\n\n    extends: InputField,\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        MergeClasses\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'custom-file-input'\n        },\n\n        /**\n         * An array of valid extensions\n         *\n         * @property String\n         */\n        extensions: Array,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        multiple: Boolean,\n\n        /**\n         * The height attribute for the control element\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * The width attribute for the control element\n         *\n         * @property String\n         */\n        width: [Number, String]\n\n    }\n\n};\n</script>\n","<template>\n\n    <btn class=\"btn-file\" :type=\"type\" :variant=\"variant\" :block=\"block\" :size=\"size\" :disabled=\"disabled\" :active=\"active\">\n        <slot/>\n\n        <input\n            v-bind-events\n            type=\"file\"\n            :class=\"controlClasses\"\n            :id=\"id\"\n            :width=\"width\"\n            :height=\"height\"\n            :required=\"required\"\n            :multiple=\"multiple\"\n            :readonly=\"readonly\"\n            v-on:change=\"$emit('change', multiple ? $event.target.files : $event.target.files[0])\">\n    </btn>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport FileField from '../FileField';\n\nexport default {\n\n    name: 'btn-file',\n\n    mixins: [\n        FileField\n    ],\n\n    components: {\n        Btn,\n        FileField\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * The type attribute for the button. Not applied if an anchor\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'button'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.btn-file {\n    cursor: pointer;\n    position: relative;\n\n    input {\n        z-index: 1;\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n}\n</style>\n","<template>\n    <div :class=\"classes\" :data-toggle=\"toggle ? 'buttons' : false\" role=\"group\">\n        <btn v-if=\"buttons\" v-for=\"(button, i) in buttons\" :key=\"i\" v-bind=\"button\" />\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'btn-group',\n\n    components: {\n        Btn\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * An array of buttons\n         *\n         * @type {Array}\n         */\n        buttons: Array,\n\n        /**\n         * Denote the button group as toggle buttons\n         *\n         * @type {Boolean}\n         */\n        toggle: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @type {Boolean}\n         */\n        vertical: Boolean\n\n    },\n\n    computed: {\n\n        classes() {\n            return this.mergeClasses(\n                this.colorableClasses, {\n                    'btn-group': !this.vertical,\n                    'btn-group-toggle': this.toggle,\n                    'btn-group-vertical': this.vertical\n                }\n            );\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"btn-group-toggle\" data-toggle=\"buttons\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'btn-group-toggle'\n\n};\n</script>\n","<template>\n    <div class=\"btn-toolbar\" role=\"toolbar\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'btn-toolbar'\n\n};\n</script>\n","export default function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = Math.random() * 16 | 0;\n        const v = c === 'x' ? r : (r & (0x3) | (0x8));\n        return v.toString(16);\n    });\n}\n","import { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    methods: {\n        proxy(callback, event) {\n            if(isFunction(callback)) {\n                callback.apply(this, [].slice.call(arguments).splice(1));\n                event.preventDefault();\n            }\n        }\n    }\n\n};\n","<template>\n    <component\n        :is=\"component\"\n        :href=\"href || (component === 'a' ? '#' : false)\"\n        class=\"dropdown-item\"\n        :class=\"{'active': active}\"\n        :type=\"component === 'button' ? 'button' : false\"\n        @click=\"onClick\">\n        <i v-if=\"icon\" :class=\"icon\"/>\n        <slot>{{label}}</slot>\n    </component>\n</template>\n\n<script>\nimport Proxy from '../../Mixins/Proxy/Proxy';\n\nexport default {\n\n    mixins: [\n        Proxy\n    ],\n\n    props: {\n\n        /**\n         * Is the menu item active.\n         *\n         * @property Object\n         */\n        active: Boolean,\n\n        /**\n         * Is the menu item a button\n         *\n         * @property Object\n         */\n        button: Boolean,\n\n        /**\n         * The `element` attribute.\n         *\n         * @property Object\n         */\n        element: String,\n\n        /**\n         * The `href` attribute.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * The icon of the dropdown menu item.\n         *\n         * @property Object\n         */\n        icon: String,\n\n        /**\n         * The label of the dropdown menu item.\n         *\n         * @property Object\n         */\n        label: String\n\n    },\n\n    computed: {\n\n        component() {\n            return this.element || (this.button ? 'button' : 'a');\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @property Object\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <h5 class=\"dropdown-header\">\n        <slot>{{header}}</slot>\n    </h5>\n</template>\n\n<script>\nexport default {\n\n    name: 'dropdown-menu-header',\n\n    props: {\n\n        /**\n         * The value of the header\n         *\n         * @property Object\n         */\n        header: String\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"dropdown-divider\"></div>\n</template>\n\n<script>\nexport default {\n\n    name: 'dropdown-menu-divider'\n\n};\n</script>\n","<template>\n    <div class=\"dropdown-menu\" :class=\"{'dropdown-menu-right': align === 'right', 'show': show}\" :aria-labelledby=\"id\" tabindex=\"-1\" @click=\"onClick\">\n        <template v-for=\"item in items\">\n            <component :is=\"prefix(item.type || 'item', 'dropdown-menu')\" v-bind=\"item\"/>\n        </template>\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport uuid from '../../Helpers/Uuid';\nimport prefix from '../../Helpers/Prefix';\nimport { each } from '../../Helpers/Functions';\nimport DropdownMenuItem from './DropdownMenuItem';\nimport DropdownMenuHeader from './DropdownMenuHeader';\nimport DropdownMenuDivider from './DropdownMenuDivider';\n\nexport default {\n\n    components: {\n        DropdownMenuItem,\n        DropdownMenuHeader,\n        DropdownMenuDivider\n    },\n\n    props: {\n\n        /**\n         * The `id` attribute on the toggle button and aria label. If no `id` is\n         * defined, then a UUID will be generated instead.\n         *\n         * @property Object\n         */\n        id: {\n            type: String,\n            default: uuid\n        },\n\n        /**\n         * Display the dropdown menu aligned left or right\n         *\n         * @property String\n         */\n        align: {\n            type: String,\n            default: 'left',\n            validate(value) {\n                return ['left', 'right'].indexOf(value.toLowerCase()) !== -1;\n            }\n        },\n\n        /**\n         * The default visibility of the dropdown menu.\n         *\n         * @property Object\n         */\n        show: Boolean,\n\n        /**\n         * An array of dropdown items. If an key/value pair isn't defined, the\n         * default value will be used. If no items are defined, then the slot\n         * named \"items\" can be used to define the options with HTML.\n         *\n         * [{\n         *      type: 'item', // String [item|header|divider]\n         *      href: '#', // String\n         *      label: 'Some label', // String\n         *      onClick: (event) => {} // Function\n         * }]\n         *\n         * @property Array\n         */\n        items: Array\n\n    },\n\n    methods: {\n\n        prefix: prefix,\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @param Object event\n         * @param Object item\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * A callback function for the `click` event.\n         *\n         * @param Object event\n         * @param Object item\n         * @return void\n         */\n        onItemClick(event, item) {\n            this.$emit('item:click', event, item);\n        }\n\n    },\n\n    mounted() {\n        each(this.$children, child => {\n            child.$on('click', event => {\n                this.onItemClick(event, child);\n            });\n        });\n    }\n\n};\n</script>\n","<template>\n\n    <btn-group v-if=\"split\">\n        <template v-if=\"!dropleft\">\n            <a v-if=\"href\" :href=\"href\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"/> {{label}}</slot>\n            </a>\n            <button v-else :type=\"type\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label-wrapper\"><i v-if=\"icon\" :class=\"icon\"/> <slot name=\"label\">{{label}}</slot></slot>\n            </button>\n        </template>\n        <btn-group :class=\"{'dropup': dropup, 'dropright': dropright, 'dropleft': dropleft}\">\n            <button type=\"button\" aria-haspopup=\"true\" :aria-expanded=\"isDropdownShowing\" :id=\"id\" :class=\"toggleClasses\" @click.prevent=\"!isDropdownShowing ? show() : hide()\" @blur=\"onBlur\"></button>\n            <dropdown-menu\n                :id=\"id\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @click=\"onMenuClick\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </btn-group>\n        <template v-if=\"dropleft\">\n            <a v-if=\"href\" :href=\"href\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"/> {{label}}</slot>\n            </a>\n            <button v-else :type=\"type\" :class=\"actionClasses\" @click=\"onClick\">\n                <slot name=\"label-wrapper\"><i v-if=\"icon\" :class=\"icon\"/> <slot name=\"label\">{{label}}</slot></slot>\n            </button>\n        </template>\n    </btn-group>\n\n    <btn-group v-else :class=\"{'dropup': dropup, 'dropright': dropright, 'dropleft': dropleft}\" @click=\"onClick\">\n        <button aria-haspopup=\"true\" :aria-expanded=\"isDropdownShowing\" :type=\"type\" :id=\"id\" :class=\"toggleClasses\" @click.prevent=\"!isDropdownShowing ? show() : hide()\" @blur=\"onBlur\">\n            <slot name=\"label\"><i v-if=\"icon\" :class=\"icon\"/> {{label}}</slot>\n        </button>\n\n        <dropdown-menu\n            :id=\"id\"\n            :align=\"align\"\n            :show.sync=\"isDropdownShowing\"\n            @click=\"onMenuClick\"\n            @item:click=\"onItemClick\">\n            <slot/>\n        </dropdown-menu>\n    </btn-group>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport Popper from 'popper.js';\nimport BtnGroup from '../BtnGroup';\nimport uuid from '../../Helpers/Uuid';\nimport prefix from '../../Helpers/Prefix';\nimport DropdownMenu from '../DropdownMenu';\nimport { each } from '../../Helpers/Functions';\n\nconst TAB_KEYCODE = 9;\nconst LEFT_ARROW_KEYCODE = 37;\nconst RIGHT_ARROW_KEYCODE = 39;\nconst UP_ARROW_KEYCODE = 38;\nconst DOWN_ARROW_KEYCODE = 40;\n\nlet ignoreBlurEvent = false;\n\nexport default {\n\n    name: 'btn-dropdown',\n\n    extends: Btn,\n\n    components: {\n        BtnGroup,\n        DropdownMenu\n    },\n\n    props: {\n\n        /**\n         * The button icon that appears before the label.\n         *\n         * @property String\n         */\n        autoclose: Boolean,\n\n        /**\n         * The button icon that appears before the label.\n         *\n         * @property String\n         */\n        icon: String,\n\n        /**\n         * The toggle button's label. If not defined as an attribute,\n         * you can override with the component's slot (inner html).\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * The `id` attribute on the toggle button and aria label. If no `id` is\n         * defined, then a UUID will be generated instead.\n         *\n         * @property String\n         */\n        id: {\n            type: String,\n            default: uuid\n        },\n\n        /**\n         * The button type attribute.\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'button'\n        },\n\n        /**\n         * Display the dropdown menu aligned left or right\n         *\n         * @property String\n         */\n        align: {\n            type: String,\n            default: 'left',\n            validate(value) {\n                return ['left', 'right'].indexOf(value.toLowerCase()) !== -1;\n            }\n        },\n\n        /**\n         * Display the dropdown button with a split toggle button.\n         *\n         * @property Boolean\n         */\n        split: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropup instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropright instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropright: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Display as a dropleft instead of a dropdown.\n         *\n         * @property Boolean\n         */\n        dropleft: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Focus on the the dropdown toggle button\n         *\n         * @return void\n         */\n        focus() {\n            this.$el.querySelector('.dropdown-toggle').focus();\n        },\n\n        /**\n         * Focus on the the dropdown toggle button\n         *\n         * @return void\n         */\n        queryFocusable() {\n            return this.$el.querySelector('.dropdown-menu').querySelectorAll('label, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        },\n\n        /**\n         * Method to check if the given element is focusable.\n         *\n         * @return void\n         */\n        isFocusable(element) {\n            const nodes = this.queryFocusable();\n\n            for(let i in nodes) {\n                if(element === nodes[i]) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Toggle the dropdown menu\n         *\n         * @return void\n         */\n        toggle() {\n            !this.isDropdownShowing ? this.show() : this.hide();\n        },\n\n        /**\n         * Show the dropdown menu\n         *\n         * @return void\n         */\n        show() {\n            this.isDropdownShowing = true;\n\n            this.$nextTick(() => {\n                let side = 'bottom';\n\n                if(this.dropup) {\n                    side = 'top';\n                }\n                else if(this.dropleft) {\n                    side = 'left';\n                }\n                else if(this.dropright) {\n                    side = 'right';\n                }\n\n                const menu = this.$el.querySelector('.dropdown-menu');\n                const toggle = this.$el.querySelector('.dropdown-toggle');\n                const position = [side, this.align === 'left' ? 'start' : 'end'];\n\n                this.$popper = new Popper(toggle, menu, {\n                    placement: position.join('-')\n                });\n\n                if(this.queryFocusable().item(0)) {\n                    this.$el.querySelector('input, select, textarea').focus();\n                }\n\n                this.$emit('show');\n            });\n        },\n\n        /**\n         * Hide the dropdown menu\n         *\n         * @return void\n         */\n        hide() {\n            this.$emit('toggle', this.isDropdownShowing = false);\n            this.$emit('hide');\n        },\n\n        /**\n         * A callback function for the `click` event for the action button\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.hide();\n            this.$emit('click', event);\n        },\n\n        /**\n         * A callback function for the `blur` event for the action button\n         *\n         * @return void\n         */\n        onBlur(event) {\n            if(!this.$el.contains(event.relatedTarget)) {\n                this.hide();\n            }\n        },\n\n        /**\n         * A callback function for the `item:click` event for the action button\n         *\n         * @return void\n         */\n        onMenuClick(event, item) {\n            if(event.target === this.$el.querySelector('.dropdown-menu')) {\n                this.focus();\n            }\n        },\n\n        /**\n         * A callback function for the `item:click` event for the action button\n         *\n         * @return void\n         */\n        onItemClick(event, item) {\n            if(!this.isFocusable(event.target)) {\n                this.hide();\n            }\n\n            this.$emit('item:click', event, item);\n        }\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return 'btn' + (this.outline ? '-outline' : '');\n        },\n\n        sizeableClassPrefix() {\n            return 'btn';\n        },\n\n        actionClasses() {\n            return [\n                'btn',\n                prefix(this.size, 'btn'),\n                prefix(this.variant, 'btn')\n            ].join(' ');\n        },\n\n        toggleClasses() {\n            return [\n                'btn',\n                'dropdown-toggle',\n                this.variantClass,\n                this.sizeableClass,\n                this.active ? 'active' : '',\n                this.block ? 'btn-block' : '',\n                (this.split ? 'dropdown-toggle-split' : '')\n            ].join(' ');\n        }\n    },\n\n    data() {\n        return {\n            isDropdownShowing: false\n        };\n    },\n\n    mounted() {\n        each(this.$el.querySelectorAll('[type=submit], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]'), el => {\n            const keydown = event => {\n                const ignore = [\n                    LEFT_ARROW_KEYCODE,\n                    RIGHT_ARROW_KEYCODE,\n                    UP_ARROW_KEYCODE,\n                    DOWN_ARROW_KEYCODE,\n                    TAB_KEYCODE\n                ];\n\n                if(ignore.indexOf(event.keyCode) !== -1) {\n                    ignoreBlurEvent = true;\n                }\n            };\n\n            const blur = event => {\n                if(!ignoreBlurEvent) {\n                    this.focus();\n                }\n\n                ignoreBlurEvent = false;\n            };\n\n            const focus = event => {\n                ignoreBlurEvent = false;\n            };\n\n            const mousedown = event => {\n                ignoreBlurEvent = true;\n            };\n\n            el.addEventListener('blur', blur);\n            el.addEventListener('focus', focus);\n            el.addEventListener('keydown', keydown);\n            el.addEventListener('mousedown', mousedown);\n        });\n    }\n\n};\n</script>\n","export default {\n\n    methods: {\n\n        getSlot(slot) {\n            return this.$slots[slot];\n        },\n\n        hasSlot(slot) {\n            return !!this.$slots[slot];\n        },\n\n        hasSlots(slots) {\n            for(let i in slots) {\n                if(!this.hasSlot(slots[i])) {\n                    return false;\n                }\n            }\n        }\n\n    },\n\n    computed: {\n\n        hasDefaultSlot() {\n            return this.hasSlot('default');\n        }\n\n    }\n\n};\n","<template>\n\n    <div :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card',\n\n    mixins: [\n        HasSlots,\n        Colorable,\n        MergeClasses\n    ],\n\n    computed: {\n\n        className() {\n            return this.$options.name;\n        }\n\n    }\n\n};\n</script>\n","<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-body',\n\n    extends: Card\n\n};\n</script>\n","<template>\n\n    <btn-group class=\"card-btn-group\">\n        <slot/>\n    </btn-group>\n\n</template>\n\n<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-btn-group',\n\n    extends: Card\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.card {\n    .card-btn-group,\n    .btn-group.card-btn-group {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > .btn {\n            flex: 1;\n            width: 100%;\n            text-align: center;\n            border-radius: 0;\n\n            &:not(:last-child)::after {\n                content: '';\n                position: absolute;\n                top: 50%;\n                right: 0;\n                padding: $font-size-base;\n                transform: translateY(-50%);\n                border-right: 1px solid $card-border-color;\n            }\n        }\n    }\n}\n</style>\n","<template>\n\n    <div class=\"card-deck\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'card-deck'\n\n};\n</script>\n","<template>\n\n    <component :is=\"tag\" :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </component>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-header',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The component's HTML tag name\n         *\n         * @property String\n         */\n        tag: {\n            type: String,\n            default: 'h5'\n        }\n\n    }\n\n};\n</script>\n","<script>\nimport CardHeader from './CardHeader';\n\nexport default {\n\n    name: 'card-footer',\n\n    extends: CardHeader,\n\n    props: {\n\n        /**\n         * The component's HTML tag name\n         *\n         * @property String\n         */\n        tag: {\n            type: String,\n            default: 'div'\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(className)\" class=\"d-flex justify-content-center align-items-center\" :style=\"{height: unit(height)}\">\n        <div v-if=\"background\" class=\"card-img-bg\" :style=\"{background: background ? `url(${this.src})` : null, overflow: blur ? 'hidden' : 'inherit', filter: blur ? `blur(${unit(blur)})` : null}\"/>\n        <img v-if=\"!background && src\" :src=\"src\" :alt=\"alt\" class=\"img-fluid\"/>\n        <div class=\"card-img-content\" :class=\"{'text-truncate': textTruncate}\">\n            <slot/>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport unit from '../../Helpers/Unit';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-img',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The alt attribute\n         *\n         * @property String\n         */\n        alt: String,\n\n        /**\n         * Display the image as a background image fit with CSS cover.\n         *\n         * @property String\n         */\n        background: Boolean,\n\n        /**\n         * The amount to blur the background image.\n         *\n         * @property String\n         */\n        blur: [Number, String],\n\n        /**\n         * The height attribute\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * Truncate the text in the content\n         *\n         * @property String\n         */\n        textTruncate: Boolean,\n\n        /**\n         * The src attribute\n         *\n         * @property String\n         */\n        src: String\n\n    },\n\n    methods: {\n\n        unit(value) {\n            return unit(value);\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.card-img,\n.card-img-top,\n.card-img-bottom {\n    color: white;\n    position: relative;\n    text-shadow: 0 0 20px rgba(0, 0, 0, .5);\n\n    .card-img-bg {\n        z-index: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-size: cover !important;\n        background-position: center !important;\n        background-repeat: no-repeat !important;\n\n        & > img:first-child {\n            position: absolute;\n        }\n    }\n\n    .card-img-content {\n        flex: 1;\n        z-index: 1;\n        position: relative;\n    }\n\n    /*\n    & > :not(img) {\n        position: absolute;\n    }\n    */\n}\n</style>\n","<script>\nimport CardImg from './CardImg';\n\nexport default {\n\n    name: 'card-img-top',\n\n    extends: CardImg\n};\n</script>\n","<script>\nimport CardImg from './CardImg';\n\nexport default {\n\n    name: 'card-img-bottom',\n\n    extends: CardImg\n\n};\n</script>\n","<script>\nimport Card from './Card';\n\nexport default {\n\n    name: 'card-img-overlay',\n\n    extends: Card\n\n};\n</script>\n","<template>\n\n    <router-link :to=\"href\" :class=\"mergeClasses(className, colorableClasses)\" @click=\"onClick\">\n        <slot/>\n    </router-link>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-link',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The alt attribute\n         *\n         * @property String\n         */\n        alt: String,\n\n        /**\n         * The href attribute\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The to attribute\n         *\n         * @property String\n         */\n        to: [Object, String]\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <h6 :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </h6>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-subtitle',\n\n    extends: Card,\n\n    mixins: [\n        MergeClasses\n    ]\n\n};\n</script>\n","<template>\n\n    <h5 :class=\"mergeClasses(className, colorableClasses)\">\n        <slot/>\n    </h5>\n\n</template>\n\n<script>\nimport Card from './Card';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'card-title',\n\n    mixins: [\n        Card,\n        MergeClasses\n    ]\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"radio\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValue === value || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"$emit('change', $event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"radio\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValue === value || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"$emit('change', $event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormFeedback from '../FormFeedback';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'radio-field',\n\n    components: {\n        HelpText,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValue'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * Is this a custom element\n         *\n         * @property String\n         */\n        custom: Boolean,\n\n        /**\n         * Display the form field and label inline\n         *\n         * @property Function\n         */\n        inline: Boolean,\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checked: Boolean,\n\n        /**\n         * The checked value\n         *\n         * @property String\n         */\n        checkedValue: [Boolean, Number, String, Object],\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-check'\n        }\n\n    },\n\n    computed: {\n\n        labelClass() {\n            return prefix('label', this.controlClass);\n        },\n\n        inputClass() {\n            return prefix('input', this.controlClass);\n        },\n\n        inlineClass() {\n            return prefix('inline', this.controlClass);\n        },\n\n        controlClass() {\n            return this.custom ? 'custom-control' : this.defaultControlClass;\n        },\n\n        customControlClass() {\n            return this.custom ? prefix(this.$options.name.replace('-field', ''), 'custom') : '';\n        },\n\n        sizeableClass() {\n            return prefix(this.size, 'form-control');\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"checkbox\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"update($event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"checkbox\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"update($event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport RadioField from '../RadioField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'checkbox-field',\n\n    extends: RadioField,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValues'\n    },\n\n    props: {\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checkedValues: {\n            type: Array,\n            default() {\n                return [];\n            }\n        }\n\n    },\n\n    methods: {\n\n        update(value) {\n            const checked = this.checkedValues.slice(0);\n            const index = this.checkedValues.indexOf(value);\n\n            if(index === -1) {\n                checked.push(value);\n            }\n            else {\n                checked.splice(index, 1);\n            }\n\n            this.$emit('change', checked);\n        }\n\n    }\n};\n</script>\n","<template>\n\n    <div class=\"container\"><slot/></div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'container'\n\n};\n</script>\n","<template>\n\n    <div class=\"dropzone\" :class=\"{'is-dragging': isDragging}\" @drop.prevent=\"onDrop\" @dragover.prevent=\"onDragover\" @dragenter.prevent=\"onDragenter\" @dragleave.prevent=\"onDragleave\">\n        <slot name=\"placeholder\">\n            <div class=\"dropzone-placeholder text-center\">\n                <card>\n                    <card-body>\n                        <h1 class=\"mt-4\">Drag & Drop</h1>\n                        <p>Drag and drop your files here to upload them!</p>\n                        <div class=\"mt-3\"><i class=\"fa fa-image\"/></div>\n                    </card-body>\n                </card>\n            </div>\n        </slot>\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport Card from '../Card';\nimport CardBody from '../Card/CardBody';\n\nexport default {\n\n    name: 'dropzone',\n\n    components: {\n        Card,\n        CardBody\n    },\n\n    methods: {\n\n        onDrop(event) {\n            this.isDragging = false;\n            this.$emit('drop', event);\n        },\n\n        onDragover(event) {\n            this.isDragging = true;\n            this.$emit('dragover', event);\n        },\n\n        onDragenter(event) {\n            this.isDragging = true;\n            this.$emit('dragenter', event);\n            this.onDragover(event);\n        },\n\n        onDragleave(event) {\n            this.isDragging = false;\n            this.$emit('dragleave', event);\n        }\n\n    },\n\n    data() {\n        return {\n            files: null,\n            isDragging: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.dropzone {\n    position: relative;\n\n    p {\n        font-size: 18px;\n    }\n\n    .fa-image {\n        font-size: 100px;\n    }\n\n    .dropzone-placeholder {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        width: 100%;\n        height: 100%;\n        background: white;\n    }\n\n    &.is-dragging .dropzone-placeholder {\n        display: block;\n    }\n}\n</style>\n","import { isFunction } from '../Functions';\n\nexport default function readFile(file, progress) {\n    if(!(file instanceof File)) {\n        throw new Error('The first argument be an instance of File object.');\n    }\n\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        if(isFunction(progress)) {\n            reader.onprogress = e => progress(e, reader);\n        }\n\n        reader.onload = e => resolve(e);\n        reader.onerror = e => reject(e);\n        reader.onabort = e => reject(e);\n        reader.readAsDataURL(file);\n    });\n}\n","<template>\n\n    <div class=\"file-preview\" :class=\"{'has-image': !!image}\">\n\n        <div class=\"file-preview-inner\">\n\n            <a v-if=\"!hideClose\" href=\"#\" class=\"file-preview-close\" @click.prevent=\"$emit('close', file)\">\n                <i class=\"fa fa-times-circle\"/>\n            </a>\n\n            <div v-if=\"!!poster || isImage\" class=\"file-preview-image\">\n                <img v-if=\"!!poster || !!image\" :src=\"poster || image\" class=\"file-preview-thumbnail\" @load=\"onLoad\"/>\n            </div>\n\n            <div v-else v-ready=\"() => this.$emit('loaded')\" class=\"file-preview-icon\">\n                <i class=\"fa\" :class=\"{'fa-file-video-o': isVideo, 'fa-file-o': !isVideo}\"/>\n            </div>\n\n            <progress-bar\n                v-if=\"progress || isImage && loaded !== false\"\n                v-ready=\"readFile\"\n                :value=\"progress || loaded || 0\"\n                :height=\"10\"\n                class=\"mt-3\"/>\n\n            <div class=\"file-preview-filename\" v-html=\"name\"/>\n            <div class=\"file-preview-filesize\">({{size}})</div>\n        </div>\n\n    </div>\n\n</template>\n\n<script>\nimport moment from 'moment';\nimport ProgressBar from '../ProgressBar';\nimport { isFunction } from '../../Helpers/Functions';\nimport readFile from '../../Helpers/ReadFile/ReadFile';\n\nexport default {\n\n    name: 'file-preview',\n\n    components: {\n        ProgressBar\n    },\n\n    directives: {\n        ready: {\n            inserted(el, binding, vnode) {\n                if(isFunction(binding.value)) {\n                    vnode.context.$nextTick(binding.value);\n                }\n            }\n        }\n    },\n\n    props: {\n\n        /**\n         * Hide the close button for the preview\n         *\n         * @property Object\n         */\n        hideClose: Boolean,\n\n        /**\n         * The uploaded File object\n         *\n         * @property Object\n         */\n        file: {\n            type: [Object, File],\n            required: true\n        },\n\n        /**\n         * An image URL to instead of using the file reader.\n         * @property {String}\n         */\n        poster: String,\n\n        /**\n         * Progress that can be passed from a parent comparent, for instance\n         * use to show an ajax request with a single progress bar. If a progress\n         * value is passed, even a 0, the progress bar will not be used to show\n         * the progress of the file reader.\n         * @property {Number}\n         */\n        progress: {\n            type: Number,\n            default: undefined\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * Get the file name\n         *\n         * @property String\n         */\n        name() {\n            return this.file instanceof File ? this.file.name : this.file.orig_filename;\n        },\n\n        /**\n         * Get the file extension\n         *\n         * @property String\n         */\n        extension() {\n            return this.file instanceof File ? this.file.name.split('.').pop().toLowerCase() : this.file.extension;\n        },\n\n        /**\n         * Get the file formatted size\n         *\n         * @property String\n         */\n        size() {\n            return this.bytesToSize(this.file.size);\n        },\n\n        /**\n         * Get the file type\n         *\n         * @property String\n         */\n        type() {\n            return this.file instanceof File ? this.file.type : this.file.mime;\n        },\n\n        /**\n         * Check to see if the file is an image.\n         *\n         * @property String\n         */\n        isImage() {\n            return !!this.type.match(/^image/);\n        },\n\n        /**\n         * Check to see if the file is a video.\n         *\n         * @property String\n         */\n        isVideo() {\n            return !!this.type.match(/^video/);\n        },\n\n        /**\n         * Get the last time the file was modified (as timestamp)\n         *\n         * @property String\n         */\n        lastModified() {\n            return this.file instanceof File ? this.file.lastModified : null;\n        },\n\n        /**\n         * Get the last time the file was modified (as Date)\n         *\n         * @property String\n         */\n        lastModifiedDate() {\n            return this.file instanceof File ? this.file.lastModifiedDate : null;\n        }\n\n    },\n\n    methods: {\n\n        readFile() {\n            if(this.file instanceof File) {\n                const start = moment();\n\n                this.loaded = 0;\n\n                this.$nextTick(() => {\n                    readFile(this.file, e => {\n                        if(e.lengthComputable) {\n                            this.$emit('progress', this.loaded = parseInt((e.loaded / e.total) * 100, 10));\n                        }\n                    }).then(event => {\n                        this.$emit('read', event);\n\n                        setTimeout(() => {\n                            this.image = event.target.result;\n                            this.$nextTick(() => {\n                                this.loaded = false;\n                            });\n                        }, 500 - moment().diff(start));\n                    }, error => {\n                        this.$emit('error', error);\n                    });\n                });\n            }\n        },\n\n        bytesToSize(bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n            if(bytes === 0) return '0 Byte';\n            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        },\n\n        onLoad(event) {\n            this.$emit('loaded');\n        }\n\n    },\n\n    data() {\n        return {\n            image: this.file.url,\n            loaded: this.file instanceof File ? 0 : false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n$file-preview-close-width: 1rem * 2;\n$file-preview-close-height: 1rem * 2;\n\n.file-preview {\n    width: 100%;\n\n    .file-preview-inner {\n        position: relative;\n    }\n\n    .file-preview-close {\n        top: 0;\n        right: 0;\n        padding: 0;\n        width: 24px;\n        height: 24px;\n        background: white;\n        position: absolute;\n        border-radius: 100%;\n        transform: translate(33%, -33%);\n\n        i {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            font-size: 24px;\n            text-align: center;\n        }\n    }\n\n    .file-preview-icon {\n        text-align: center;\n        font-size: 60px;\n        padding: 1rem;\n    }\n\n    .file-preview-thumbnail {\n        width: 100%;\n        max-width: 100%;\n    }\n\n    .file-preview-filename {\n        overflow: hidden;\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .file-preview-filename,\n    .file-preview-filesize {\n        text-align: center;\n    }\n\n}\n\n</style>\n","<template>\n    <div class=\"infinite-scrolling\" :style=\"{height: heightUnit, background: background}\">\n        <activity-indicator v-if=\"activity\" :size=\"size\" :type=\"type\" center/>\n    </div>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\nimport ActivityIndicator from '../ActivityIndicator';\n\nexport default {\n\n    name: 'infinite-scrolling',\n\n    components: {\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Is the activity indicator showing\n         *\n         * @property String\n         */\n        activity: Boolean,\n\n        /**\n         * The activity indicator background style\n         *\n         * @property String\n         */\n        background: String,\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        height: {\n            type: Number,\n            default: 100\n        },\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        size: String,\n\n        /**\n         * The activity indicator type\n         *\n         * @property String\n         */\n        type: String,\n\n        /**\n         * The scroll observer threshold for when an element is considered\n         * into view. Must be a validate between 0 and 1, and is a percentage.\n         *\n         * @property Number\n         */\n        threshold: {\n            type: Number,\n            default: 0.75,\n            validate(value) {\n                return value >= 0 && value <= 1;\n            }\n        }\n\n    },\n\n    methods: {\n\n        scrollIntoViewport(entry) {\n            this.$emit('scroll:in', entry);\n\n            if(!this.activity) {\n                this.$emit('load', entry);\n            }\n        },\n\n        scrollOutViewport(entry) {\n            this.$emit('scroll:out', entry);\n        }\n\n    },\n\n    computed: {\n\n        heightUnit() {\n            return unit(this.height);\n        }\n\n    },\n\n    mounted() {\n        this.$nextTick(() => {\n            new IntersectionObserver((entries, observer) => {\n                entries.forEach(entry => {\n                    if(entry.isIntersecting && !this.hasScrolledIntoViewport) {\n                        this.scrollIntoViewport(entry, observer);\n                        this.hasScrolledIntoViewport = true;\n                    }\n                    else if(this.hasScrolledIntoViewport) {\n                        this.scrollOutViewport(entry, observer);\n                        this.hasScrolledIntoViewport = false;\n                    }\n                });\n            }, {\n                threshold: this.threshold\n            }).observe(this.$el);\n        });\n    },\n\n    data() {\n        return {\n            hasScrolledIntoViewport: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.infinite-scrolling {\n    position: relative;\n\n}\n</style>\n","<template>\n\n    <span class=\"input-group-text\" :id=\"id\">\n        <slot>{{ text }}</slot>\n    </span>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'input-group-text',\n\n    props: {\n\n        /**\n         * The id attribute\n         *\n         * @property String\n         */\n        id: String,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: [Array, Number, String]\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group-append\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'input-group-append',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group-prepend\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'input-group-prepend',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group\" :class=\"mergeClasses(colorableClasses, sizeableClass)\">\n\n        <slot name=\"prepend\">\n            <template v-if=\"prepend instanceof Array\">\n                <input-group-prepend>\n                    <input-group-text v-for=\"value in prepend\" :key=\"value\" :text=\"value\"/>\n                </input-group-prepend>\n            </template>\n            <template v-else-if=\"prepend\">\n                <input-group-prepend text>{{prepend}}</input-group-prepend>\n            </template>\n        </slot>\n\n        <slot/>\n\n        <slot name=\"append\">\n            <template v-if=\"append instanceof Array\">\n                <input-group-append>\n                    <input-group-text v-for=\"value in append\" :key=\"value\" :text=\"value\"/>\n                </input-group-append>\n            </template>\n            <template v-else-if=\"append\">\n                <input-group-append text>{{append}}</input-group-append>\n            </template>\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Sizeable from '../../Mixins/Sizeable';\nimport InputGroupText from './InputGroupText';\nimport Colorable from '../../Mixins/Colorable';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'input-group',\n\n    components: {\n        InputGroupText,\n        InputGroupAppend,\n        InputGroupPrepend\n    },\n\n    mixins: [\n        HasSlots,\n        Sizeable,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        append: [Array, Number, String],\n\n        prepend: [Array, Number, String]\n\n    }\n\n};\n</script>\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\" />\n        </slot>\n\n        <div :class=\"controlClasses\" tabindex=\"0\" @click=\"toggle()\" @keyup.32=\"toggle()\" @keyup.37=\"toggle(offValue)\" @keyup.39=\"toggle(onValue)\">\n            <div class=\"light-switch-handle\"></div>\n        \t<div class=\"light-switch-container\">\n        \t\t<div class=\"light-switch-label on-value\"></div>\n        \t\t<div class=\"light-switch-label off-value\"></div>\n        \t</div>\n        </div>\n\n        <form-control :name=\"name\" :value=\"value\" :id=\"id\" class=\"d-none\"/>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport { isUndefined } from '../../Helpers/Functions';\nimport FormControl from '../FormControl';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nexport default {\n\n    name: 'light-switch-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormControl,\n        FormFeedback\n    },\n\n    mixins: [\n        FormControlMixin\n    ],\n\n    props: {\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control light-switch'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        activeClass: {\n            type: String,\n            default: 'on'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        onValue: {\n            default: 1\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        offValue: {\n            default: 0\n        }\n\n    },\n\n    computed: {\n\n        isActive: function() {\n            return this.value === this.onValue;\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : ''),\n                (this.dragging ? 'is-dragging' : ''),\n                (this.isActive ? 'is-active' : '')\n            ].join(' ');\n        }\n\n    },\n\n    methods: {\n\n        getTransitionInMilliseconds() {\n            const duration = getComputedStyle(this.$el.querySelector('.light-switch-handle')).transitionDuration;\n            const numeric = parseFloat(duration, 10);\n            const unit = duration.match(/m?s/);\n\n            switch (unit[0]) {\n            case 's':\n                return numeric * 1000;\n            case 'ms':\n                return numeric;\n            }\n\n            throw new Error(`\"${unit[0]}\" is not a valid unit of measure. Unit must be \"s\" (seconds) or \"ms\" (milliseconds).`);\n        },\n\n        toggle(value) {\n            this.$emit('input', !isUndefined(value) ? value : (this.isActive ? this.offValue : this.onValue));\n        }\n\n    },\n\n    watch: {\n        value() {\n            this.dragging = true;\n\n            setTimeout(() => {\n                this.dragging = false;\n            }, this.getTransitionInMilliseconds());\n        }\n    },\n\n    data() {\n        return {\n            dragging: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n@import './node_modules/bootstrap/scss/mixins.scss';\n\n$light-switch-animation-easing: ease;\n$light-switch-animation-length: 1s / 3;\n$light-switch-handle-width: $font-size-base * 2;\n$light-switch-handle-height: $light-switch-handle-width;\n$light-switch-size-width: $light-switch-handle-width * 1.5;\n$light-switch-size-height: $light-switch-handle-height;\n$light-switch-label-width: $light-switch-handle-width;\n$light-switch-label-height: $light-switch-handle-height;\n\n@mixin light-switch-size($size, $modifier) {\n    $handle-width: $light-switch-handle-width * $modifier;\n    $handle-height: $handle-width;\n    $size-width: $handle-width * 1.5;\n    $size-height: $handle-height;\n    $label-width: $handle-width;\n    $label-height: $handle-height;\n\n    &.light-switch-#{$size} {\n        padding: 0;\n    \twidth: $size-width;\n    \theight: $handle-height;\n    \tborder-radius: $handle-width;\n\n        .light-switch-handle {\n            width: $handle-width;\n            height: $handle-height;\n        }\n\n        .light-switch-container {\n            left: -$handle-width / 2;\n            width: $label-width * 2;\n            height: $label-height;\n        }\n\n        &.is-active {\n            .light-switch-handle {\n                left: $handle-width / 2;\n            }\n        }\n\n        .light-switch-label {\n            width: $label-width;\n            height: $label-height;\n\n            &.on-value {\n                //border-radius: $handle-width 0 0 $handle-width;\n            }\n\n            &.off-value {\n                //border-radius: 0 $handle-width $handle-width 0;\n            }\n        }\n    }\n}\n\n.light-switch {\n    padding: 0;\n\tposition: relative;\n\tborder: none;\n\twidth: $light-switch-size-width;\n\theight: $light-switch-handle-height;\n\tborder-radius: $light-switch-handle-width;\n\toverflow: hidden;\n\tcursor: pointer;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\toverflow: hidden;\n\n    @include light-switch-size('xs', .5);\n    @include light-switch-size('sm', .75);\n    @include light-switch-size('md', 1);\n    @include light-switch-size('lg', 1.5);\n    @include light-switch-size('xl', 2);\n\n    @include form-validation-state(\"valid\", $form-feedback-valid-color);\n    @include form-validation-state(\"invalid\", $form-feedback-invalid-color);\n\n    &.is-invalid {\n        border: 1px solid $form-feedback-invalid-color;\n\n        & .light-switch-handle {\n\n\n        }\n\n        &:not(.is-active) .light-switch-handle {\n            background: $form-feedback-invalid-color;\n        }\n\n        .light-switch-label {\n            &.on-value {\n                left: 0;\n            }\n            &.off-value {\n                right: 0;\n            }\n        }\n    }\n\n    .light-switch-handle {\n        top: 0;\n        left: 0;\n        z-index: 1;\n        position: absolute;\n        border-radius: 100%;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n        width: $light-switch-handle-width;\n        height: $light-switch-handle-height;\n        background: white;\n        background-image: radial-gradient(white, rgb(250, 250, 250) 50%, white 75%);\n        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.1);\n    }\n\n    .light-switch-container {\n        position: relative;\n        left: -$light-switch-handle-width / 2;\n        top: ($light-switch-handle-height -  $light-switch-label-height) / 2;\n        width: $light-switch-label-width * 2;\n        height: $light-switch-label-height;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n    }\n\n    &:not(.is-active) {\n        &:not(.is-dragging) .on-value {\n            visibility: hidden;\n        }\n    }\n\n    &.is-active {\n        &:not(.is-dragging) .off-value {\n            visibility: hidden;\n        }\n\n        .light-switch-handle {\n            left: $light-switch-handle-width / 2;\n        }\n\n        .light-switch-container {\n            left: 0;\n        }\n    }\n\n    .light-switch-label {\n        position: absolute;\n        width: $light-switch-label-width;\n        height: $light-switch-label-height;\n        //box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n\n        &.on-value {\n            left: 0;\n            background: #00b007;\n            //border-radius: $light-switch-handle-width 0 0 $light-switch-handle-width;\n        }\n\n        &.off-value {\n            right: 0;\n            background: #ebedef;\n            //border-radius: 0 $light-switch-handle-width $light-switch-handle-width 0;\n        }\n    }\n\n\n}\n\n</style>\n","<template>\n    <router-link v-if=\"to\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </router-link>\n    <a v-else-if=\"href\" :href=\"href\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </a>\n    <button v-else-if=\"action\" type=\"button\" :class=\"classes\" @click.prevent=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </button>\n    <div v-else :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </div>\n</template>\n\n<script>\nimport Badge from '../Badge';\nimport prefix from '../../Helpers/Prefix/Prefix';\nimport { isObject } from '../../Helpers/Functions';\n\nexport default {\n\n    components: {\n        Badge\n    },\n\n    props: {\n\n        /**\n         * The badge label (if number or string) or object of options to pass to\n         * the component.\n         *\n         * @property String|Object\n         */\n        badge: [Number, String, Object],\n\n        /**\n         * The list group item href attribute.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The list group item variant.\n         *\n         * @property String\n         */\n        variant: String,\n\n        /**\n         * Optionally pass the item as a object to use programmatically later.\n         *\n         * @property String\n         */\n        item: Object,\n\n        /**\n         * The list group item an action, or clickable item.\n         *\n         * @property Boolean\n         */\n        action: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item active.\n         *\n         * @property Boolean\n         */\n        active: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item disabled.\n         *\n         * @property Boolean\n         */\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list item label.\n         *\n         * @property Object\n         */\n        label: {\n            type: [Number, String],\n            value: null\n        },\n\n        /**\n         * The to attribute to be passed to a <router-link> component.\n         *\n         * @property String\n         */\n        to: [String, Object]\n\n    },\n\n    computed: {\n\n        classes() {\n            const classes = prefix({\n                'action': this.action\n            }, 'list-group-item');\n\n            classes['list-group-item'] = true;\n            classes['active'] = this.active;\n            classes['disabled'] = this.disabled;\n\n            if(this.variant) {\n                classes[prefix(this.variant, 'list-group-item')] = true;\n            }\n\n            return classes;\n        },\n\n        badgeOptions() {\n            return isObject(this.badge) ? this.badge : {\n                label: this.badge\n            };\n        }\n\n    },\n\n    watch: {\n\n        active(value, prevValue) {\n            this.$emit('toggle', value);\n            this.$emit(value ? 'activate' : 'deactivate');\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"list-group\" :class=\"classes\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport { each } from '../../Helpers/Functions';\nimport ListGroupItem from './ListGroupItem';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        ListGroupItem\n    },\n\n    props: {\n\n        /**\n         * The list group appear flush (without some borders).\n         *\n         * @property Boolean\n         */\n        flush: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Can activate multiple list items\n         *\n         * @property Boolean\n         */\n        multiple: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    computed: {\n        classes() {\n            return prefix({\n                'flush': this.flush\n            }, 'list-group');\n        }\n    },\n\n    methods: {\n\n        bindEventsToChildren() {\n            each(this.$children, child => {\n                child.$off('click', event => this.onClickItem(event, child));\n                child.$on('click', event => this.onClickItem(event, child));\n            });\n        },\n\n        /**\n         * The callback function for the `click` event.\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * The callback function for the child `click` events.\n         *\n         * @return void\n         */\n        onClickItem(event, child) {\n            this.$emit('item:click', event, child);\n        }\n\n    },\n\n    mounted() {\n        this.bindEventsToChildren();\n    },\n\n    updated() {\n        this.bindEventsToChildren();\n    }\n\n};\n</script>\n","<template>\n    <div class=\"modal-body\"><slot/></div>\n</template>\n\n<script>\nexport default {\n\n    name: 'modal-body'\n\n};\n</script>\n","<template>\n    <div class=\"modal-dialog\" role=\"document\"><slot/></div>\n</template>\n\n<script>\nexport default {\n\n    name: 'modal-dialog'\n\n};\n</script>\n","<template>\n    <h5 class=\"modal-title\"><slot/></h5>\n</template>\n\n<script>\nexport default {\n\n    name: 'modal-title'\n\n};\n</script>\n","<template>\n    <div class=\"modal-header\">\n        <slot name=\"title\">\n            <modal-title><slot/></modal-title>\n        </slot>\n\n        <slot name=\"close-button\">\n            <button v-if=\"closeable\" type=\"button\" class=\"close\" aria-label=\"ariaLabel\" @click=\"$emit('close')\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </slot>\n    </div>\n</template>\n\n<script>\nimport ModalTitle from './ModalTitle';\n\nexport default {\n\n    name: 'modal-header',\n\n    components: {\n        ModalTitle\n    },\n\n    props: {\n\n        ariaLabel: {\n            type: String,\n            default: 'Close'\n        },\n\n        closeable: {\n            type: Boolean,\n            default: true\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"modal-footer\"><slot/></div>\n</template>\n\n<script>\nexport default {\n\n    name: 'modal-footer'\n\n};\n</script>\n","<template>\n    <div class=\"modal-content\"><slot/></div>\n</template>\n\n<script>\nexport default {\n\n    name: 'modal-content'\n\n};\n</script>\n","<template>\n    <div class=\"modal-backdrop\" :class=\"{'fade': fade, 'show': show}\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'modal-backdrop',\n\n    props: {\n\n        /**\n         * Show the modal with a fade effect.\n         *\n         * @property Boolean\n         */\n        fade: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Is the modal showing.\n         *\n         * @property Boolean\n         */\n        show: {\n            type: Boolean,\n            default: true\n        }\n\n    }\n\n};\n</script>\n","import { each, isString } from '../../Helpers/Functions';\nimport transition from '../../Helpers/Transition';\n\nexport default {\n\n    props: {\n\n        /**\n         * Show the triggerable element with a animated fade effect.\n         *\n         * @type {Boolean}\n         */\n        animation: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Is the triggerable element showing.\n         *\n         * @property Boolean\n         */\n        show: {\n            type: Boolean,\n            defaut: false\n        },\n\n        /**\n         * The target element used to position the popover.\n         *\n         * @type {String|Element|Boolean}\n         */\n        target: {\n            type: [String, Element, Boolean],\n            default: false\n        },\n\n        /**\n         * How the modal is triggered - click | hover | focus | manual. You may\n         * pass multiple triggers; separate them with a space. `manual` cannot\n         * be combined with any other trigger.\n         *\n         * @type {String}\n         */\n        trigger: {\n            type: [String, Array],\n            default: 'click'\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Initialize the trigger event for the specified elements\n         *\n         * @param  {Element} el\n         * @return {void}\n         */\n        initializeTrigger(el) {\n            each(isString(this.trigger) ? this.trigger.split(' ') : this.trigger, trigger => {\n                el.addEventListener(trigger, event => {\n                    this.toggle();\n                });\n            });\n        },\n\n        /**\n         * Initialize the event triggers\n         *\n         * @return void\n         */\n        initializeTriggers() {\n            if(this.target && this.trigger !== 'manual') {\n                if(this.target instanceof Element) {\n                    this.initializeTrigger(this.target);\n                }\n                else {\n                    document.querySelectorAll(this.target).forEach(el => {\n                        this.initializeTrigger(el);\n                    });\n                }\n            }\n\n            if(this.show || !this.target) {\n                this.$nextTick(() => {\n                    this.isShowing = true;\n                });\n            }\n        },\n\n        /**\n         * Focus on the first field in the modal (if exists).\n         *\n         * @return this\n         */\n        focus() {\n            this.$nextTick(() => {\n                const el = this.$el.querySelector('.form-control, input, select, textarea');\n\n                if(el) {\n                    el.focus();\n                }\n                else {\n                    this.$el.focus();\n                }\n            });\n\n            return this;\n        },\n\n        /**\n         * Open the triggereable element\n         *\n         * @return this\n         */\n        open() {\n            this.isDisplaying = true;\n\n            this.$nextTick(() => {\n                transition(this.$el).then(delay => {\n                    this.isShowing = true;\n                    this.$emit('open');\n                });\n            });\n\n            return this;\n        },\n\n        /**\n         * Close the triggereable element\n         *\n         * @return this\n         */\n        close(event) {\n            transition(this.$el).then(delay => {\n                this.isDisplaying = false;\n                this.$emit('close', event);\n            });\n\n            this.isShowing = false;\n\n            return this;\n        },\n\n        /**\n         * Toggle the triggereable element's open/close method.\n         *\n         * @return this\n         */\n        toggle() {\n            if(!this.isShowing) {\n                this.open();\n            }\n            else {\n                this.close();\n            }\n\n            return this;\n        }\n\n    },\n\n    computed: {\n\n        triggerableClasses() {\n            return {\n                'fade': this.animation,\n                'show': this.isShowing\n            };\n        }\n\n    },\n\n    watch: {\n\n        isShowing(value) {\n            if(value) {\n                this.focus();\n            }\n        },\n\n        show(value) {\n            this.isShowing = value;\n        }\n\n    },\n\n    mounted() {\n        this.initializeTriggers();\n    },\n\n    data() {\n        return {\n            isDisplaying: this.show || !this.target,\n            isShowing: false\n        };\n    }\n\n};\n","<template>\n\n    <div class=\"modal\" :class=\"triggerableClasses\" :style=\"{display: isDisplaying ? 'block' : 'none'}\" tabindex=\"-1\" role=\"dialog\" @keydown.esc=\"cancel\">\n\n        <modal-backdrop v-if=\"backdrop\" ref=\"backdrop\"/>\n\n        <modal-dialog :class=\"{'modal-dialog-centered': center}\">\n\n            <modal-content>\n\n                <slot name=\"header\">\n                    <modal-header v-if=\"title\" @close=\"cancel\">{{title}}</modal-header>\n                </slot>\n\n                <slot name=\"body\">\n                    <component :is=\"!flush ? 'modal-body' : 'div'\" class=\"child-component\">\n                        <slot/>\n                    </component>\n                </slot>\n\n                <slot name=\"footer\">\n                    <modal-footer v-if=\"type\">\n                        <template v-if=\"type === 'alert'\">\n                            <btn-activity :activity=\"activity\" variant=\"primary\" @click=\"confirm\">{{okLabel}}</btn-activity>\n                        </template>\n                        <template v-else>\n                            <btn type=\"button\" variant=\"secondary\" @click=\"cancel\" v-html=\"cancelLabel\"/>\n                            <btn-activity :activity=\"activity\" variant=\"primary\" @click=\"confirm\">{{okLabel}}</btn-activity>\n                        </template>\n                    </modal-footer>\n                </slot>\n\n            </modal-content>\n\n        </modal-dialog>\n\n    </div>\n\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport ModalBody from './ModalBody';\nimport ModalDialog from './ModalDialog';\nimport ModalHeader from './ModalHeader';\nimport ModalFooter from './ModalFooter';\nimport BtnActivity from '../BtnActivity';\nimport ModalContent from './ModalContent';\nimport ModalBackdrop from './ModalBackdrop';\nimport Triggerable from '../../Mixins/Triggerable';\n\nexport default {\n\n    name: 'modal',\n\n    components: {\n        Btn,\n        BtnActivity,\n        ModalBody,\n        ModalBackdrop,\n        ModalContent,\n        ModalDialog,\n        ModalHeader,\n        ModalFooter\n    },\n\n    mixins: [\n        Triggerable\n    ],\n\n    props: {\n\n        /**\n         * Show the modal activity indicator.\n         *\n         * @type {Boolean}\n         */\n        activity: Boolean,\n\n        /**\n         * Show the modal with a backdrop.\n         *\n         * @type {Boolean}\n         */\n        backdrop: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Is the modal centered in the screen.\n         *\n         * @type {Boolean}\n         */\n        center: Boolean,\n\n        /**\n         * Is the modal content fixed position\n         *\n         * @type {Boolean}\n         */\n        closeable: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Is the modal content flush with the modal edges? If true, no modal-body\n         * will be used to wrap the content.\n         *\n         * @type {Boolean}\n         */\n        flush: Boolean,\n\n        /**\n         * The ok label text.\n         *\n         * @type {String}\n         */\n        okLabel: {\n            type: String,\n            default: 'Ok'\n        },\n\n        /**\n         * The cancel label text.\n         *\n         * @type {String}\n         */\n        cancelLabel: {\n            type: String,\n            default: 'Cancel'\n        },\n\n        /**\n         * The modal title.\n         *\n         * @type {String}\n         */\n        title: String,\n\n        /**\n         * Is the modal type.\n         *\n         * @type {Boolean}\n         */\n        type: {\n            type: [Boolean, String],\n            default: false,\n            validate(value) {\n                return ['alert', 'confirm', 'prompt'].indexOf(value) !== -1;\n            }\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Mount the backdrop to the document body.\n         *\n         * @return {void}\n        mountBackdrop() {\n            if(!this.backdropComponent) {\n                this.backdropComponent = this.$refs.backdrop.$mount(\n                    document.body.appendChild(document.createElement('div'))\n                );\n            }\n        },\n        */\n\n        /**\n         * Unmount the backdrop from the document body.\n         *\n         * @return {void}\n        unmountBackdrop() {\n            if(this.backdropComponent) {\n                this.backdropComponent.$destroy();\n                this.backdropComponent.$el.remove();\n                this.backdropComponent = null;\n            }\n        },\n        */\n\n        /**\n         * Cancel the modal\n         *\n         * @return {void}\n         */\n        cancel(event) {\n            this.$emit('cancel', event);\n            this.close(event);\n        },\n\n        /**\n         * Confirm the modal\n         *\n         * @return {void}\n         */\n        confirm(event) {\n            this.$emit('confirm', event);\n        },\n\n        /**\n         * A callback for the escape function.\n         *\n         * @return {void}\n         */\n        onEsc(event) {\n            (this.type === 'confirm' || this.type === 'prompt') ? this.cancel(event) : this.close(event);\n        }\n\n    },\n\n    watch: {\n\n        isShowing(value) {\n            if(value) {\n                document.querySelector('body').classList.add('modal-open');\n                // this.mountBackdrop();\n            }\n            else {\n                document.querySelector('body').classList.remove('modal-open');\n                // this.unmountBackdrop();\n            }\n\n            this.$emit('update:show', value);\n        }\n\n    },\n\n    data() {\n        return {\n            backdropComponent: null,\n            isDisplaying: this.show || !this.target,\n            isShowing: false\n        };\n    },\n\n    mounted() {\n        this.initializeTriggers();\n    },\n\n    beforeRouteLeave(to, from, next) {\n        this.close();\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.modal {\n    .modal-backdrop + .modal-dialog {\n        z-index: 1050;\n    }\n}\n</style>\n","<template>\n    <component class=\"navbar-brand\" :class=\"{'h1': h1}\" :is=\"component\" :to=\"to\" :href=\"href || to ? '#' : null\">\n        <img v-if=\"src\" class=\"d-inline-block align-center\" :src=\"src\" :width=\"unit(width)\" :height=\"unit(height)\" :alt=\"alt\"/>\n        <slot/>\n    </component>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\n\nexport default {\n\n    props: {\n\n        /**\n         * The img `alt` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        alt: String,\n\n        /**\n         * The HTML wrapping tag.\n         *\n         * @property Object\n         */\n        tag: String,\n\n        /**\n         * The img `width` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        width: [Number, String],\n\n        /**\n         * The img `height` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        height: [Number, String],\n\n        /**\n         * The `to` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        to: [Object, String],\n\n        /**\n         * The `href` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * Append the `h1` class to increase the display size\n         *\n         * @property Object\n         */\n        h1: Boolean,\n\n        /**\n         * If a `src` attribute is passed, then use it to add an img tag\n         *\n         * @property Object\n         */\n        src: String\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : (this.href ? 'a' : 'span'));\n        }\n\n    },\n\n    methods: {\n        unit(value) {\n            return unit(value);\n        }\n    }\n\n};\n</script>\n","<template>\n    <div class=\"navbar-collapse\" id=\"navbarCollapse\" :class=\"{'collapse': collapse}\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-collapse',\n\n    props: {\n\n        collapse: {\n            type: Boolean,\n            default: true\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-text'\n\n};\n</script>\n","<template>\n    <span class=\"navbar-toggler-icon\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-toggler-icon'\n\n};\n</script>\n","<template>\n    <button\n        type=\"button\"\n        class=\"navbar-toggler\"\n        data-toggle=\"collapse\"\n        :data-target=\"target\"\n        :aria-controls=\"target\"\n        :aria-expanded=\"expanded\"\n        :aria-label=\"label\"\n        @click=\"onClick\">\n        <slot><navbar-toggler-icon/></slot>\n    </button>\n</template>\n\n<script>\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\n\nexport default {\n\n    name: 'navbar-toggler',\n\n    components: {\n        NavbarTogglerIcon\n    },\n\n    props: {\n\n        expanded: Boolean,\n\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n\n        target: {\n            type: String,\n            default: '.navbar-collapse'\n        }\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <nav :class=\"classes\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport Colorable from '../../Mixins/Colorable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport { isBoolean } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'navbar',\n\n    components: {\n        NavbarBrand,\n        NavbarCollapse,\n        NavbarText,\n        NavbarToggler,\n        NavbarTogglerIcon\n    },\n\n    mixins: [\n        Variant,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Expand the navbar. If true, applies to all size, otherwise pass a string.\n         *\n         * @property Object\n         */\n        expand: {\n            type: [Boolean, String],\n            default: 'lg',\n            validate(value) {\n                ['xs', 'sm', 'md', 'lg', 'xl'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be fixed at the top.\n         *\n         * @property String\n         */\n        fixed: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be stickied at the top.\n         *\n         * @property String\n         */\n        sticky: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The variant attribute\n         *\n         * @property String\n         */\n        variant: {\n            type: String,\n            default: 'light',\n            validate(value) {\n                return ['light', 'dark'].indexOf(value) !== -1;\n            }\n        }\n\n    },\n\n    computed: {\n\n        expandedClass() {\n            if(isBoolean(this.expand)) {\n                return this.expand;\n            }\n\n            return prefix(prefix(this.expand, 'expand'), 'navbar');\n        },\n\n        classes() {\n            return this.mergeClasses(\n                'navbar',\n                prefix(this.sticky === true ? 'top' : this.sticky, 'sticky'),\n                prefix(this.fixed === true ? 'top' : this.fixed, 'fixed'),\n                this.expandedClass,\n                this.variantClass,\n                this.colorableClasses\n            );\n        }\n    },\n\n    data() {\n        return {};\n    }\n\n};\n</script>\n","<template>\n    <span class=\"navigation-error fa-stack fa-md\" :title=\"error\">\n        <i class=\"fa fa-stack-2x fa-certificate\"/>\n        <i class=\"fa fa-stack-1x fa-exclamation fa-inverse\"/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navigation-error',\n\n    props: {\n\n        error: {\n            type: String,\n            required: true\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/_functions.scss';\n@import './node_modules/bootstrap/scss/_variables.scss';\n\n.navigation-error {\n    color: $danger;\n}\n</style>\n","<template>\n    <component :is=\"component\" :href=\"href || (to ? '#' : null)\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n        <navigation-error v-if=\"error\" :error=\"error\"/>\n    </component>\n</template>\n\n<script>\nimport NavigationError from './NavigationError';\n\nexport default {\n\n    name: 'navigation-link',\n\n    components: {\n        NavigationError\n    },\n\n    props: {\n\n        /**\n         * Is the navigation item active\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * Is the navigation item disabled\n         *\n         * @prop {Boolean}\n         */\n        disabled: Boolean,\n\n        /**\n         * The error string.\n         *\n         * @prop {String}\n         */\n        error: String,\n\n        /**\n         * The href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * The component HTML tag\n         *\n         * @prop {String}\n         */\n        tag: String,\n\n        /**\n         * The to attribute, will be passed to router-link.\n         *\n         * @prop {String}\n         */\n        to: [Object, String],\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : 'a');\n        },\n\n        classes() {\n            this.$nextTick(() => {\n                if(!this.isItem) {\n                    this.isItem = !this.$parent.$el.classList.contains('nav-item');\n                }\n            });\n\n            return {\n                'nav-link': !!this.href || !!this.to,\n                'nav-item': !!this.item,\n                'active': this.active,\n                'disabled': this.disabled\n            };\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <component :is=\"component\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n    </component>\n</template>\n\n<script>\nimport NavigationLink from './NavigationLink';\n\nexport default {\n\n    name: 'navigation-item',\n\n    extends: NavigationLink,\n\n    props: {\n\n        /**\n         * The HTML element\n         *\n         * @prop {String}\n         */\n        element: String,\n\n        /**\n         * Is the component a list element\n         *\n         * @prop {Boolean}\n         */\n        list: Boolean,\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    computed: {\n\n        component() {\n            if(this.element) {\n                return this.element;\n            }\n            else if(this.href) {\n                return 'a';\n            }\n            else if(this.list) {\n                return 'li';\n            }\n\n            return 'div';\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <nav class=\"nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'navigation',\n\n    components: {\n        NavigationItem\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Helper to add the justify-content-X class.\n         *\n         * @prop {Array}\n         */\n        align: String,\n\n        /**\n         * An array of buttons\n         *\n         * @prop {Array}\n         */\n        buttons: Array,\n\n        /**\n         * The navigation inside a card\n         *\n         * @prop {Boolean}\n         */\n        card: Boolean,\n\n        /**\n         * Justify nav items to fill the width equally (using flex).\n         *\n         * @prop {Array}\n         */\n        fill: Boolean,\n\n        /**\n         * Add `nav-justified` class to the component.\n         *\n         * @prop {Array}\n         */\n        justified: Boolean,\n\n        /**\n         * Display items as pill shapes\n         *\n         * @prop {Array}\n         */\n        pills: Boolean,\n\n        /**\n         * Display items as tab shapes\n         *\n         * @prop {Array}\n         */\n        tabs: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @prop {Boolean}\n         */\n        vertical: Boolean,\n\n        /**\n         * The role attribute\n         *\n         * @prop {String}\n         */\n        role: String\n\n    },\n\n    computed: {\n\n        classes() {\n            this.$nextTick(() => {\n                if(!this.isCard) {\n                    this.isCard = this.$parent.$el.classList.contains('card-header');\n                }\n            });\n\n            return this.mergeClasses(\n                prefix(this.align, 'justify-content'),\n                this.colorableClasses, {\n                    'card-header-tabs': this.isCard && this.tabs,\n                    'card-header-pills': this.isCard && this.pills,\n                    'nav-justified': this.justified,\n                    'nav-fill': this.fill,\n                    'nav-pills': this.pills,\n                    'nav-tabs': this.tabs,\n                    'flex-column': this.vertical\n                }\n            );\n        }\n\n    },\n\n    data() {\n        return {\n            isCard: this.card\n        };\n    }\n\n};\n</script>\n","<template>\n\n    <navigation-item class=\"dropdown\">\n\n        <slot name=\"toggle-button\">\n            <navigation-link\n                href=\"#\"\n                class=\"dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                :aria-expanded=\"isDropdownShowing\"\n                @click.native.prevent=\"toggle()\"\n                @blur=\"onBlur\">\n                {{label}}\n            </navigation-link>\n        </slot>\n\n        <slot name=\"dropdown-menu\">\n            <dropdown-menu\n                :id=\"id\"\n                :items=\"items\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </slot>\n\n    </navigation-item>\n\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport DropdownMenu from '../DropdownMenu';\nimport BtnDropdown from '../BtnDropdown';\n\nexport default {\n\n    name: 'navigation-dropdown',\n\n    extends: BtnDropdown,\n\n    components: {\n        BtnDropdown,\n        DropdownMenu,\n        NavigationItem,\n        NavigationLink\n    }\n\n};\n</script>\n","<template>\n    <ul class=\"navbar-nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </ul>\n</template>\n\n<script>\nimport Navigation from '../Navigation';\n\nexport default {\n\n    name: 'navbar-nav',\n\n    components: {\n        Navigation\n    }\n\n};\n</script>\n","<template>\n    <div class=\"overlay-body\"><slot/></div>\n</template>\n\n<script>\nexport default {\n\n    name: 'overlay-body'\n\n};\n</script>\n","<template>\n    <container class=\"overlay-content\">\n        <slot/>\n    </container>\n</template>\n\n<script>\nimport Container from '../Container';\n\nexport default {\n\n    name: 'overlay-content',\n\n    components: {\n        Container\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.overlay-content {\n    margin: 0 auto;\n    overflow-y: auto;\n    position: relative;\n\n    /*\n    &.overlay-content-center {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        .overlay-body {\n            flex: 1;\n        }\n    }\n    */\n\n    &.overlay-content-fixed {\n        top: 0;\n        left: 0;\n        padding: 0;\n        height: 100%;\n        position: fixed;\n        max-width: none;\n    }\n\n    .overlay-controls {\n        float: right;\n        position: relative;\n        top: 4px;\n        padding-right: 0;\n        padding-bottom: $font-size-base;\n\n        &.left {\n            left: 0;\n        }\n        &.right {\n            right: 0;\n        }\n\n        & + * {\n            clear: both;\n        }\n    }\n}\n</style>\n","<template>\n    <div class=\"overlay\" :class=\"triggerableClasses\" :style=\"{'background': background, 'display': isDisplaying ? 'flex' : 'none'}\" role=\"dialog\" tabindex=\"-1\" @keydown.esc=\"onEsc\">\n        <button v-if=\"closeable && !hideCloseButton\" type=\"button\" class=\"btn btn-link overlay-close\" @click=\"onClickClose\">\n            <i class=\"fa fa-times-circle\"/>\n        </button>\n\n        <overlay-content :class=\"{'overlay-content-fixed': fixedContent, 'overlay-content-center': center}\" :style=\"{minHeight: minHeight}\">\n            <slot name=\"body\">\n                <overlay-body class=\"my-4\">\n                    <slot/>\n                </overlay-body>\n            </slot>\n        </overlay-content>\n    </div>\n</template>\n\n<script>\nimport OverlayBody from './OverlayBody';\nimport OverlayContent from './OverlayContent';\nimport Triggerable from '../../Mixins/Triggerable';\n\nexport default {\n\n    name: 'overlay',\n\n    components: {\n        OverlayBody,\n        OverlayContent\n    },\n\n    mixins: [\n        Triggerable\n    ],\n\n    props: {\n\n        /**\n         * The overlay background color.\n         *\n         * @property String\n         */\n        background: {\n            type: String,\n            default: 'rgba(255, 255, 255, .925)'\n        },\n\n        /**\n         * Is the overlay content fixed position\n         *\n         * @property Boolean\n         */\n        closeable: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Center the overlay content on the screen using flex box.\n         *\n         * @type {Boolean}\n         */\n        center: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Is the overlay content fixed position\n         *\n         * @property Boolean\n         */\n        fixedContent: Boolean,\n\n        /**\n         * Is the overlay close button hidden but still closeable.\n         *\n         * @property Boolean\n         */\n        hideCloseButton: Boolean,\n\n        /**\n         * Is the overlay content minimum height.\n         *\n         * @property Boolean\n         */\n        minHeight: [String, Number]\n\n    },\n\n    methods: {\n\n        /**\n         * The callback for the `click` event on the close button.\n         *\n         * @return void\n         */\n        onClickClose(event) {\n            this.$emit('click:close', event);\n            this.close();\n        },\n\n        onEsc(event) {\n            this.closeable && this.close();\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.overlay {\n    position: fixed;\n    display: flex;\n    min-height: 0;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    flex-direction: column;\n\n    &.fade {\n        transition: opacity 333ms ease-out;\n    }\n\n    &.show {\n        z-index: 1030;\n        opacity: 1;\n    }\n\n    .overlay-content {\n        flex: 1;\n    }\n\n    .overlay-header {\n        margin-top: $font-size-base * 1.5;\n    }\n\n    .overlay-close {\n        font-size: $font-size-base * 1.25;\n        color: $gray-700;\n        position: absolute;\n        top: $font-size-base;\n        right: $font-size-base;\n        z-index: 1;\n    }\n}\n</style>\n","<template>\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\" :class=\"classes\">\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage === 1}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Previous\" @click.prevent=\"prev($event)\">\n        \t\t\t<span aria-hidden=\"true\">&laquo;</span>\n        \t\t</a>\n        \t</li>\n            <li v-for=\"item in pages\" :data-page=\"item.page\" class=\"page-item\" :class=\"{'active': item.page === currentPage, 'disabled': !!item.divider}\">\n                <slot :item=\"item\">\n                    <a v-if=\"item.divider\" class=\"page-link\">&hellip;</a>\n                \t<a v-else href=\"#\" class=\"page-link\" :class=\"item.class\" :data-label=\"item.label\" @click.prevent=\"paginate(item.page, $event)\">\n                \t\t<span v-if=\"item.label\" aria-hidden=\"true\" v-html=\"item.label\"></span>\n                \t\t<span v-if=\"item.page\" aria-hidden=\"true\" v-html=\"item.page\"></span>\n                \t</a>\n                </slot>\n            </li>\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage >= totalPages}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Next\" @click.prevent=\"next($event)\">\n        \t\t\t<span aria-hidden=\"true\">&raquo;</span>\n        \t\t</a>\n            </li>\n        </ul>\n    </nav>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'pagination',\n\n    props: {\n        /**\n         * The alignment of the pagination component.\n         *\n         * @prop String\n         */\n        align: {\n            type: String,\n            validate: value => {\n                return ['start', 'end', 'center'].indexOf(value) !== -1;\n            }\n        },\n\n        /**\n         * The page on which the paginator should start.\n         *\n         * @prop String\n         */\n        page: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The total number of pages in the paginator.\n         *\n         * @prop String\n         */\n        totalPages: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The number of pages to show when the total number of pages is\n         * greater than the number of pages that should be shown.\n         *\n         * @prop String\n         */\n        showPages: {\n            type: Number,\n            default: 6\n        }\n\n    },\n\n    methods: {\n\n        next(event) {\n            this.paginate(this.currentPage >= this.totalPages ? this.currentPage : this.currentPage + 1, event);\n        },\n\n        prev(event) {\n            this.paginate(this.currentPage <= 1 ? this.currentPage : this.currentPage - 1, event);\n        },\n\n        paginate(page, event) {\n            if(event.currentTarget.parentNode.classList.contains('disabled')) {\n                return;\n            }\n\n            this.setActivePage(page);\n\n            this.$emit('paginate', page, event);\n        },\n\n        setActivePage(page) {\n            if(this.currentPage !== page) {\n                this.currentPage = page;\n            }\n        },\n\n        generate() {\n            const pages = [];\n            const showPages = this.showPages % 2 ? this.showPages + 1 : this.showPages;\n\n            let startPage = (this.currentPage >= showPages) ? this.currentPage - (showPages / 2) : 1;\n            const startOffset = showPages + startPage;\n            const endPage = (this.totalPages < startOffset) ? this.totalPages : startOffset;\n            const diff = startPage - endPage + showPages;\n\n            startPage -= (startPage - diff > 0) ? diff : 0;\n\n            if(startPage > 1) {\n                pages.push({ page: 1 });\n            }\n\n            if(startPage > 2) {\n                pages.push({ divider: true });\n            }\n\n            for(let i = startPage; i < endPage; i++) {\n                pages.push({ page: i });\n            }\n\n            if(endPage <= this.totalPages) {\n                if(this.totalPages - 1 > endPage) {\n                    pages.push({ divider: true });\n                }\n\n                pages.push({ page: this.totalPages });\n            }\n\n            return pages;\n        }\n\n    },\n\n    computed: {\n\n        pages() {\n            return this.generate();\n        },\n\n        classes() {\n            const classes = {};\n\n            classes['justify-content-' + this.align] = true;\n\n            return classes;\n        }\n\n    },\n\n    data() {\n        return {\n            currentPage: this.page\n        };\n    }\n\n};\n</script>\n","<template>\n    <div v-show=\"isDisplaying\" class=\"popover\" :class=\"mergeClasses(triggerableClasses, classes)\" role=\"tooltip\">\n        <div class=\"arrow\"></div>\n        <popover-header v-if=\"title\" v-html=\"title\"/>\n        <popover-body>\n            <slot/>\n        </popover-body>\n    </div>\n</template>\n\n<script>\nimport Popper from 'popper.js';\nimport prefix from '../../Helpers/Prefix';\nimport Triggerable from '../../Mixins/Triggerable';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport { each, isString } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'popover',\n\n    mixins: [\n        Triggerable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Apply a CSS fade transition to the popover\n         *\n         * @type {Boolean}\n         */\n        animation: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Overflow constraint boundary of the popover. Accepts the values of\n         * 'viewport', 'window', 'scrollParent', or an HTMLElement reference\n         * (JavaScript only). For more information refer to Popper.js's\n         * preventOverflow docs.\n         *\n         * @type {Object}\n         */\n        boundary: {\n            type: [String, Array],\n            default: 'scrollParent',\n            validate(value) {\n                return ['viewport', 'window', 'viewport'].indexOf(value) !== -1;\n            }\n        },\n\n        /**\n         * Appends the popover to a specific element.\n         *\n         * Example: container: 'body'.\n         *\n         * This option is particularly useful in that it allows you to position\n         * the popover in the flow of the document near the triggering element -\n         * which will prevent the popover from floating away from thetriggering\n         * element during a window resize.\n         *\n         * @type {String|Element|Boolean}\n         */\n        container: {\n            type: [String, Element, Boolean],\n            default: false\n        },\n\n        /**\n         * Delay closeing and hiding the popover (ms) - does not apply to manual trigger type\n         *\n         * If a number is supplied, delay is applied to both open/close\n         *\n         * Object structure is: delay: { \"close\": 500, \"open\": 100 }\n         *\n         * @type {Number|Object}\n         */\n        delay: {\n            type: [Number, Object],\n            default: 0\n        },\n\n        /**\n         * Allow to specify which position Popper will use on fallback. For more\n         * information refer to Popper.js's behavior docs\n         *\n         * @type {String|Array}\n         */\n        fallbackPlacement: {\n            type: [String, Array],\n            default: 'flip'\n        },\n\n        /**\n         * Offset of the popover relative to its target. For more information\n         * refer to Popper.js's offset docs.\n         *\n         * @type {Number|String}\n         */\n        offset: {\n            type: [Number, String],\n            default: 0\n        },\n\n        /**\n         * How to position the popover - auto | top | bottom | left | right.\n         *\n         * When auto is specified, it will dynamically reorient the popover.\n         *\n         * When a function is used to determine the placement, it is called with\n         * the popover DOM node as its first argument and the triggering element\n         * DOM node as its second. The this context is set to the popover\n         * instance.\n         *\n         * @type {String|Function}\n         */\n        placement: {\n            type: [String, Function],\n            default: 'top',\n            validate(value) {\n                return ['auto', 'top', 'bottom', 'left', 'right'].indexOf(value) !== -1;\n            }\n        },\n\n        /**\n         * If this property is passed, it will force the popover to be visible\n         * by default.\n         *\n         * @type {Boolean}\n         */\n        show: Boolean,\n\n        /**\n         * If a selector is provided, popover objects will be delegated to the\n         * specified targets. In practice, this is used to enable dynamic HTML\n         * content to have popovers added. See this and an informative example.\n         *\n         * @type {Boolean|String}\n         */\n        selector: {\n            type: [Boolean, String],\n            default: false\n        },\n\n        /**\n         * The target element used to position the popover.\n         *\n         * @type {String|Element|Boolean}\n         */\n        target: {\n            type: [String, Element, Boolean],\n            default: false\n        },\n\n        /**\n         * The popover title\n         *\n         * @type {String}\n         */\n        title: String,\n\n        /**\n         * How popover is triggered - click | hover | focus | manual. You may\n         * pass multiple triggers; separate them with a space. `manual` cannot\n         * be combined with any other trigger.\n         *\n         * @type {String}\n         */\n        trigger: {\n            type: [String, Array],\n            default: 'click'\n        }\n\n    },\n\n    methods: {\n\n        align() {\n            each(this.$poppers, el => {\n                el.popper.update();\n            });\n        },\n\n        createPopper(el) {\n            return new Popper(el, this.$el, {\n                offset: this.offset,\n                placement: this.placement,\n                modifiers: {\n                    flip: {\n                        boundariesElement: this.container,\n                        behavior: this.fallbackPlacement\n                    },\n                    offset: {\n                        enabled: !!this.offset,\n                        offset: this.offset\n                    },\n                    arrow: {\n                        enable: true,\n                        element: this.$el.querySelector('.arrow')\n                    }\n                }\n            });\n        },\n\n        getArrowElement() {\n            return this.$el.querySelector('.arrow');\n        },\n\n        /**\n         * Initialize the trigger event for the specified elements\n         *\n         * @param  {Element} el\n         * @return {void}\n         */\n        initializeTrigger(el) {\n            this.$poppers[el] = {\n                trigger: isString(this.trigger) ? this.trigger.split(' ') : this.trigger,\n                popper: this.createPopper(el),\n                event: (event) => {\n                    this.toggle();\n                    this.$poppers[el].popper.update();\n                }\n            };\n\n            each(this.$poppers[el].trigger, trigger => {\n                el.addEventListener(trigger, this.$poppers[el].event);\n            });\n        }\n    },\n\n    watch: {\n\n        isShowing(value) {\n            this.$nextTick(() => {\n                this.align();\n\n                if(value) {\n                    this.focus();\n                }\n            });\n        }\n\n    },\n\n    computed: {\n\n        classes() {\n            return prefix({\n                'top': this.placement === 'top',\n                'bottom': this.placement === 'bottom',\n                'left': this.placement === 'left',\n                'right': this.placement === 'right'\n            }, 'bs-popover');\n        }\n\n    },\n\n    beforeCreate() {\n        if(!this.$poppers) {\n            this.$poppers = {};\n        }\n    }\n\n};\n</script>\n","<template>\n    <div class=\"popover-body\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'popover-body'\n\n};\n</script>\n","<template>\n    <component :is=\"tag\" class=\"popover-header\">\n        <slot/>\n    </component>\n</template>\n\n<script>\nexport default {\n\n    name: 'popover-header',\n\n    props: {\n\n        /**\n         * The component HTML element\n         *\n         * @type {String}\n         */\n        tag: {\n            type: String,\n            default: 'h3'\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <form-group :class=\"{'has-activity': activity}\">\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <div class=\"form-group-inner\">\n            <slot name=\"control\">\n                <select\n                    v-bind-events\n                    v-bind=\"controlAttributes\"\n                    :value=\"value\"\n                    @input=\"$emit('input', $event.target.value)\">\n                    <slot/>\n                </select>\n            </slot>\n\n            <slot name=\"activity\">\n                <transition name=\"slide-fade\">\n                    <activity-indicator key=\"test\" v-if=\"activity\" ref=\"activity\" type=\"dots\" :size=\"size\"/>\n                </transition>\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n        </div>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormControl from '../FormControl';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport ActivityIndicator from '../ActivityIndicator';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nconst CUSTOM_SELECT_PREFIX = 'custom-select-';\n\nexport default {\n\n    name: 'select-field',\n\n    components: {\n        ActivityIndicator,\n        HelpText,\n        FormControl,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses,\n        FormControlMixin\n    ],\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Add `custom-select` to the form control if true.\n         *\n         * @property String\n         */\n        custom: Boolean\n\n    },\n\n    computed: {\n\n        controlClass() {\n            const controlClass = this.custom ? 'custom-select' : this.defaultControlClass;\n            return this.plaintext ? `${controlClass}-plaintext` : controlClass;\n        },\n\n        customSelectClasses() {\n            return [\n                CUSTOM_SELECT_PREFIX.replace(/-$/, '') + (this.plaintext ? '-plaintext' : ''),\n                this.customSelectSizeClass,\n                (this.spacing || '')\n            ].join(' ');\n        }\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.has-activity {\n    select {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n    }\n\n    /* For IE10 */\n    select::-ms-expand {\n        display: none;\n    }\n}\n</style>\n","<script>\nimport { extend, first, findIndex, isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'slides',\n\n    props: {\n\n        /**\n         * The active slide index or key.\n         *\n         * @type {String|Number}\n         */\n\n        active: {\n            type: [String, Number],\n            default: 0\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Get the HTML nodes from the default slots (exluding children without tags).\n         *\n         * @return {Array}\n         */\n        slides() {\n            return this.$slots.default\n                .filter((vnode, i) => {\n                    return !!vnode.tag;\n                })\n                .map((vnode, i) => {\n                    if(!vnode.key || (!vnode.data && !vnode.data.key)) {\n                        vnode.data = extend(vnode.data, {\n                            key: vnode.key = i\n                        });\n                    }\n\n                    return vnode;\n                });\n        },\n\n        /**\n         * Get a slide by index.\n         *\n         * @return {Array}\n         */\n        slide(index) {\n            return this.findSlideByKey(index) || this.findSlideByIndex(index) || this.findSlideByIndex(0);\n        },\n\n        /**\n         * Find a slide by a given key or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByKey(key) {\n            return first(this.slides().filter((vnode, i) => {\n                if(vnode.key === key) {\n                    return vnode;\n                }\n                else if(vnode.data && vnode.data.key === key) {\n                    return vnode;\n                }\n\n                return null;\n            }));\n        },\n\n        /**\n         * Find a slide by a given index or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByIndex(index) {\n            return this.slides()[index] || null;\n        },\n\n        /**\n         * Get the slide index for a give slide object or key\n         *\n         * @param  {Number|String} slide\n         * @return {VNode|null}\n         */\n        getSlideIndex(slide) {\n            const key = !isUndefined(slide.data) ? slide.data.key : slide.key || slide;\n\n            return findIndex(this.slides(), (vnode, i) => {\n                if(slide === vnode) {\n                    return true;\n                }\n                else if(vnode.data && vnode.data.key === key) {\n                    return true;\n                }\n                else if(vnode.key && vnode.key === key) {\n                    return true;\n                }\n                else if(i === slide) {\n                    return true;\n                }\n\n                return false;\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            lastSlide: null,\n            currentSlide: this.active\n        };\n    },\n\n    render(h) {\n        return this.slide(this.currentSlide);\n    }\n\n};\n</script>\n","<template>\n    <!-- TODO: Add tooltip with slide name/key to the control once the tooltip directive has been written. -->\n    <div class=\"slide-deck-controls\">\n        <a v-for=\"slide in slides\" href=\"#\" @click.prevent=\"onClick($event, slide)\" class=\"slide-deck-control-icon\" :class=\"{'is-active': (slide.data ? slide.data.key : slide.key) === active}\">\n            <i class=\"fa fa-circle\"/>\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'slide-deck-controls',\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * An array of slide vnodes\n         *\n         * @type {Number}\n         */\n        slides: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    methods: {\n\n        onClick(event, slide) {\n            this.$emit('click', event, slide);\n        }\n\n    },\n\n    computed: {\n\n    },\n\n    data() {\n        return {};\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.slide-deck-controls {\n    .slide-deck-control-icon {\n        color: $white;\n        font-size: $font-size-base;\n\n        &:not(:last-child) {\n            margin-right: $font-size-base / 2;\n        }\n    }\n\n    .slide-deck-control-icon.is-active {\n        color: $primary;\n    }\n}\n</style>\n","<template>\n    <div class=\"slide-deck\" :class=\"{'slide-deck-flex': center}\">\n        <div ref=\"content\" class=\"slide-deck-content\" :style=\"{width: width, height: height}\">\n            <keep-alive>\n                <transition\n                    :name=\"`slide-${direction}`\"\n                    @after-enter=\"onSlideAfterEnter\"\n                    @before-enter=\"onSlideBeforeEnter\"\n                    @enter=\"onSlideEnter\"\n                    @after-leave=\"onSlideAfterLeave\"\n                    @before-leave=\"onSlideBeforeLeave\"\n                    @leave=\"onSlideLeave\">\n                    <slides ref=\"slides\" :key=\"currentSlide\" :active=\"currentSlide\">\n                        <slot/>\n                    </slides>\n                </transition>\n            </keep-alive>\n        </div>\n        <slot name=\"controls\">\n            <slide-deck-controls v-if=\"controls\" ref=\"controls\" :slides=\"slides()\" :active=\"currentSlide\" @click=\"onClickControl\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport Slides from './Slides';\nimport transition from '../../Helpers/Transition';\nimport SlideDeckControls from './SlideDeckControls';\nimport { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'slide-deck',\n\n    components: {\n        Slides,\n        SlideDeckControls\n    },\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * Center the slide-deck.\n         *\n         * @type Boolean\n         */\n        center: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Show the slide-deck controls to change the slide.\n         *\n         * @type Boolean\n         */\n        controls: Boolean,\n\n        /**\n         * Flex the content within the popover.\n         *\n         * @type Boolean\n         */\n        flex: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Give a selector or Element to use apply a hidden overflow. If false,\n         * no overflow will be applied. Defaults to the slide deck's container.\n         *\n         * @type {String|Element|Boolean}\n         */\n        overflow: {\n            type: [Object, String, Element, Boolean],\n            default: true\n        },\n\n        /**\n         * The mode determines how the popover content will flex based on the\n         * varying heights of the slides.\n         *\n         * @type Boolean\n         */\n        resizeMode: {\n            type: [Function, Boolean, String],\n            default: 'auto',\n            validate(value) {\n                return ['auto', 'initial', 'inherit'].indexOf(value) !== 1;\n            }\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        },\n\n        currentSlide(value, oldValue) {\n            this.direction = this.$refs.slides.getSlideIndex(oldValue) > this.$refs.slides.getSlideIndex(value) ? 'backward' : 'forward';\n        }\n\n    },\n\n    methods: {\n\n        resize(el) {\n            if(isFunction(this.resizeMode)) {\n                this.resizeMode(el || this.$el);\n            }\n            else {\n                const style = getComputedStyle(el);\n\n                if(!el.style.width) {\n                    el.width = el.style.width = `calc(${style.width} + ${style.marginLeft} + ${style.marginRight})`;\n                }\n\n                if(!el.style.height) {\n                    el.height = el.style.height = `calc(${style.height} + ${style.marginTop} + ${style.marginBottom})`;\n                }\n            }\n        },\n\n        slide(index) {\n            return this.$refs.slides ? this.$refs.slides.slide(index || this.active) : null;\n        },\n\n        slides() {\n            return this.$refs.slides ? this.$refs.slides.slides() : [];\n        },\n\n        onClickControl(event, vnode) {\n            this.currentSlide = vnode.data ? vnode.data.key : vnode.key;\n        },\n\n        onSlideAfterEnter(el) {\n            if(el.width) {\n                el.width = el.style.width = null;\n            }\n\n            if(el.height) {\n                el.height = el.style.height = null;\n            }\n\n            this.width = null;\n            this.height = null;\n            this.$emit(\n                'after-enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideBeforeEnter(el) {\n            this.$emit(\n                'before-enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideEnter(el, done) {\n            this.resize(el);\n            this.width = el.style.width;\n            this.height = el.style.height;\n\n            transition(el).then(delay => {\n                this.$nextTick(done);\n            });\n\n            this.$emit(\n                'enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideAfterLeave(el) {\n            if(el.width) {\n                el.width = el.style.width = null;\n            }\n\n            if(el.height) {\n                el.height = el.style.height = null;\n            }\n\n            this.$nextTick(() => {\n                this.$emit(\n                    'after-leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n                );\n            });\n        },\n\n        onSlideBeforeLeave(el) {\n            this.resize(el);\n            this.$emit(\n                'before-leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n            );\n        },\n\n        onSlideLeave(el, done) {\n            transition(el).then(delay => {\n                this.$nextTick(done);\n            });\n\n            this.$emit(\n                'leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n            );\n        }\n\n    },\n\n    computed: {\n\n        overflowElement() {\n            if(this.overflow === true) {\n                return this.$el;\n            }\n            else if(this.overflow instanceof Element) {\n                return this.overflow;\n            }\n            else if(this.overflow && this.overflow.elm) {\n                return this.overflow.elm;\n            }\n            else if(this.overflow) {\n                return document.querySelector(this.overflow);\n            }\n\n            return null;\n        },\n\n        nodes() {\n            return this.$slots.default;\n        }\n\n    },\n\n    mounted() {\n        if(this.overflowElement) {\n            this.overflowElement.style.overflow = 'hidden';\n        }\n    },\n\n    data() {\n        return {\n            height: null,\n            width: null,\n            lastSlide: null,\n            currentSlide: this.active,\n            direction: 'forward'\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.slide-deck {\n    height: auto;\n    position: relative;\n\n    &.slide-deck-flex {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .slide-deck-content {\n            flex: 1;\n        }\n    }\n\n    .slide-deck-content {\n        position: relative;\n        transition: all .333s ease;\n    }\n\n    /*\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    */\n\n    .slide-deck-controls {\n        position: absolute;\n        left: 50%;\n        bottom: 1rem;\n        transform: translateX(-50%);\n    }\n\n    .slide-forward-enter-active,\n    .slide-forward-leave-active,\n    .slide-backward-enter-active,\n    .slide-backward-leave-active {\n        opacity: 0;\n        transition: all .333s ease-out;\n        position: absolute;\n        top: 0;\n    }\n\n    .slide-forward-enter-active,\n    .slide-backward-enter-active {\n        transition: all .333s ease-out;\n        width: 100%;\n    }\n\n    .slide-forward-enter-active {\n        left: 0;\n    }\n\n    .slide-backward-enter-active {\n        right: 0;\n    }\n\n    .slide-forward-enter-active,\n    .slide-backward-leave-to {\n        transform: translateX(115%);\n    }\n\n    .slide-forward-leave-to,\n    .slide-backward-enter-active {\n        transform: translateX(-115%);\n    }\n\n    .slide-forward-enter-to,\n    .slide-backward-enter-to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n\n}\n</style>\n","<template>\n\n\t<th scope=\"col\">\n\t    <template v-if=\"id && request\">\n\t\t\t<a href=\"#\"\n                class=\"sort\"\n                :data-id=\"id\"\n                @click.prevent=\"$emit('order', id)\">\n                <template v-if=\"!$slots.default\">\n                    {{ label || name || id }}\n                </template>\n                <slot/>\n            </a>\n\t\t\t<i v-if=\"request.params.order === id && request.params.sort === 'asc'\" class=\"sort-icon fa fa-sort-asc\"/>\n\t\t\t<i v-if=\"request.params.order === id && request.params.sort === 'desc'\" class=\"sort-icon fa fa-sort-desc\"/>\n\t\t</template>\n        <template v-else>\n            <template v-if=\"!$slots.default\">\n                {{ label || name || id }}\n            </template>\n            <slot/>\n        </template>\n\t</th>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'table-view-header',\n\n    props: {\n\n        id: [Number, String],\n\n        label: [Number, String],\n\n        name: [Number, String],\n\n        request: Object\n\n    }\n\n};\n</script>\n","<template>\n\n    <table class=\"table\" :class=\"{'table-hover': hover && !loading && data.length}\">\n\n        <thead slot=\"thead\">\n            <tr v-if=\"columns.length || $slots.columns\" slot=\"columns\">\n                <table-view-header\n                    v-for=\"(column, key) in tableColumns\"\n                    v-bind=\"column.props || column\"\n                    v-on=\"column.events\"\n                    :request=\"request\"\n                    :key=\"key\"\n                    @order=\"id => $emit('order', id)\"\n                />\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr v-if=\"loading\">\n                <td :colspan=\"tableColumns.length\" class=\"position-relative\" :style=\"{'height': height(minHeight)}\">\n                    <activity-indicator :center=\"true\"></activity-indicator>\n                </td>\n            </tr>\n\n            <tr v-else-if=\"!data.length\">\n                <td :colspan=\"tableColumns.length\" class=\"position-relative\">\n                    <alert variant=\"warning\" class=\"my-3\">\n                        <i class=\"fa fa-warning\"/> There are no results found.\n                    </alert>\n                </td>\n            </tr>\n\n            <slot v-else :data=\"data\" :columns=\"tableColumns\">\n                <tr v-for=\"(row, i) in data\">\n                    <td v-for=\"column in tableColumns\" v-html=\"row[column.id] || row[column.name]\"></td>\n                </tr>\n            </slot>\n        </tbody>\n\n        <slot name=\"tfoot\">\n            <tfoot v-if=\"paginate && response\">\n                <td :colspan=\"tableColumns.length || 1\" class=\"table-view-footer\">\n                    <slot name=\"pagination\">\n                        <pagination\n                            align=\"center\"\n                            :page=\"response.current_page\"\n                            :total-pages=\"response.last_page\"\n                            @paginate=\"$emit('paginate')\"\n                        />\n                    </slot>\n                </td>\n            </tfoot>\n        </slot>\n\n    </table>\n\n</template>\n\n<script>\nimport Alert from '../Alert';\nimport unit from '../../Helpers/Unit';\nimport Pagination from '../Pagination';\nimport TableViewHeader from './TableViewHeader';\nimport ActivityIndicator from '../ActivityIndicator';\nimport { each, isObject } from '../../Helpers/Functions';\n\nexport default {\n\n    components: {\n        Alert,\n        Pagination,\n        TableViewHeader,\n        ActivityIndicator\n    },\n\n    props: {\n\n        // (array) An array of table column\n        // [{id: 'database_id', name: 'Database id', width: '20%'}]\n        columns: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        data: {\n            type: Array,\n            required: true\n        },\n\n        // (string) Add table-hover to the table element\n        hover: {\n            type: Boolean,\n            default: true\n        },\n\n        loading: Boolean,\n\n        // (integer) The minimum height of the row when loading data\n        minHeight: {\n            type: Number,\n            default: 400\n        },\n\n        // (bool) Should show the pagination for this table\n        paginate: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    methods: {\n\n        height(min) {\n            const elements = [\n                // this.$el.querySelector('thead'),\n                this.$el.querySelector('tbody')\n            ];\n\n            let height = 0;\n\n            each(elements, el => {\n                height += el.getBoundingClientRect().height;\n            });\n\n            return unit(Math.max(min, height));\n        }\n\n    },\n\n    computed: {\n        tableColumns() {\n            let columns = this.columns;\n\n            if(!columns || !columns.length) {\n                columns = Object.keys(this.data[0]);\n            }\n\n            return columns.map(column => {\n                return isObject(column) ? column : {\n                    name: column\n                };\n            });\n        }\n    }\n\n};\n</script>\n","import { each, isArray, isObject } from '../../Helpers/Functions';\n\nexport default class Transformer {\n    /**\n     * Initialize the transformer instance using an HTTP response object.\n     *\n     * @param data object\n     * @return void\n     */\n    constructor(response) {\n        if(!isObject(this.$originalResponse = response)) {\n            throw new Error('The transformer must be instantiated with a response object.');\n        }\n\n        if(!isArray(this.$required = this.required()) || !this.$required.length) {\n            throw new Error('A transformer must have at least one required property.');\n        }\n\n        this.$transformedResponse = this.transform(response);\n        this.validate();\n        this.initialize();\n    }\n\n    /**\n     * A method to override to perform logic to finished initializing.\n     *\n     * @return void\n     */\n    initialize() {\n        //\n    }\n\n    /**\n     * Define an array of required properties with at least one value.\n     *\n     * @return void\n     */\n    required() {\n        //\n    }\n\n    /**\n     * Tranform the Response object\n     *\n     * @property String\n     */\n    transform(response) {\n        return response.data;\n    }\n\n    /**\n     * Get the tranformed response\n     *\n     * @property String\n     */\n    response() {\n        return this.$transformedResponse;\n    }\n\n    /**\n     * Validate the tranformed response.\n     *\n     * @return void\n     */\n    validate() {\n        if(!isObject(this.$transformedResponse)) {\n            throw new Error('The transformed response must be an object.');\n        }\n\n        each(this.$required, key => {\n            if(!(key in this.$transformedResponse)) {\n                throw new Error(`\"${key}\" is a required property and does not exist in the tranformed response.`);\n            }\n        });\n    }\n}\n","import { isArray } from '../../Helpers/Functions';\nimport Transformer from '../Transformer';\n\nexport default class TableViewTransformer extends Transformer {\n    required() {\n        return [\n            // The end of the count of the paginated list.\n            'to',\n\n            // The start of the count of the paginated list.\n            'from',\n\n            // The total number of items (not just included in the pagination)\n            'total',\n\n            // The number of items per page\n            'per_page',\n\n            // The last page number (or total pages)\n            'last_page',\n\n            // The current page number\n            'current_page',\n\n            // The actual response data to appear in the table\n            'data'\n        ];\n    }\n\n    data() {\n        return this.$transformedResponse.data;\n    }\n\n    initialize() {\n        if(!isArray(this.data())) {\n            throw new Error('The data property must be an array.');\n        }\n    }\n}\n","<template>\n\n    <div class=\"table-view\">\n\n        <div v-if=\"heading || description || $slots.buttons\" class=\"d-flex justify-content-between align-items-center\">\n            <slot name=\"heading\"><h2 v-if=\"heading\" v-html=\"heading\"/></slot>\n            <slot name=\"description\"><p v-if=\"description\" v-html=\"description\"/></slot>\n\n            <div v-if=\"$slots.buttons\" class=\"ml-auto my-3\">\n                <slot name=\"buttons\"/>\n            </div>\n        </div>\n\n        <card v-if=\"card\">\n            <data-table\n                :columns=\"columns\"\n                :data=\"data\"\n                :hover=\"hover\"\n                :loading=\"loading\"\n                :min-height=\"minHeight\"\n                :paginate=\"paginate\"\n                @paginate=\"onPaginate\"\n                @order=\"id => orderBy(id)\">\n                <slot :data=\"data\" :columns=\"columns\"/>\n            </data-table/>\n        </card>\n        <data-table\n            v-else\n            :columns=\"columns\"\n            :data=\"data\"\n            :hover=\"hover\"\n            :loading=\"loading\"\n            :min-height=\"minHeight\"\n            :paginate=\"paginate\"\n            @paginate=\"onPaginate\"\n            @order=\"id => orderBy(id)\">\n            <slot :data=\"data\" :columns=\"columns\"/>\n        </data-table/>\n\n    </div>\n\n</template>\n\n<script>\nimport Card from '../Card';\nimport BaseTable from './Table';\nimport Proxy from '../../Mixins/Proxy';\nimport Request from '../../Http/Request';\nimport TableViewHeader from './TableViewHeader';\nimport { extend } from '../../Helpers/Functions';\nimport TableViewTransformer from '../../Http/TableViewTransformer';\n\nexport default {\n    name: 'table-view',\n\n    mixins: [Proxy],\n\n    components: {\n        Card,\n        BaseTable,\n        TableViewHeader\n    },\n\n    props: {\n\n        // (boolean) Show the table in a card.\n        card: Boolean,\n\n        // (string) A relative or absolute endpoint URL used to fetch data\n        url: {\n            type: String,\n            required: true\n        },\n\n        // (integer) The starting page of the table\n        page: {\n            type: Number,\n            default: 1\n        },\n\n        // (integer) The total number of results per page\n        limit: {\n            type: Number,\n            default: 20\n        },\n\n        // (string) The column used to order the data\n        order: String,\n\n        // (string) The sort direction (asc|desc)\n        sort: {\n            type: String,\n            validate: (value) => {\n                return ['asc', 'desc'].indexOf(value) !== -1;\n            }\n        },\n\n        // (integer) The minimum height of the row when loading data\n        minHeight: {\n            type: Number,\n            default: 400\n        },\n\n        // (array) An array of button objects\n        // [{href: 'test-123', label: 'Test 123'}]\n        buttons: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        // (array) An array of table column\n        // [{id: 'database_id', name: 'Database id', width: '20%'}]\n        columns: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        // (string) The table heading\n        heading: String,\n\n        // (string) Add table-hover to the table element\n        hover: {\n            type: Boolean,\n            default: true\n        },\n\n        // (string) The table description\n        description: String,\n\n        // (bool) Should show the pagination for this table\n        paginate: {\n            type: Boolean,\n            default: true\n        },\n\n        // (object) The HTTP response transformer instance\n        transformer: {\n            type: Object,\n            validate: (value) => {\n                return value instanceof TableViewTransformer;\n            }\n        }\n    },\n\n    methods: {\n\n        orderBy(order) {\n            const defaultSort = 'desc';\n            const currentSort = this.getRequestParam('sort');\n            const currentOrder = this.getRequestParam('order');\n\n            this.addRequestParam('order', order);\n            this.addRequestParam('sort',\n                currentOrder !== order || !currentSort ? defaultSort : (\n                    currentSort === defaultSort ? 'asc' : null\n                )\n            );\n\n            this.fetch();\n        },\n\n        getRequestHeader(key, value) {\n            return this.request.headers[key] || value;\n        },\n\n        addRequestHeader(key, value) {\n            if(!this.request.headers) {\n                this.request.headers = {};\n            }\n\n            this.request.headers[key] = value;\n        },\n\n        getRequestParam(key, value) {\n            return this.request.params[key] || value;\n        },\n\n        addRequestParam(key, value) {\n            if(!this.request.params) {\n                this.request.params = {};\n            }\n\n            this.request.params[key] = value;\n        },\n\n        fetch() {\n            this.loading = true;\n\n            return Request.get(this.url, this.request).then(response => {\n                const transformer = this.transformer || new TableViewTransformer(response);\n                this.response = transformer.response();\n                this.data = transformer.data();\n                this.loading = false;\n            }, errors => {\n                this.loading = false;\n            });\n        },\n\n        onPaginate(page, event) {\n            if(!this.request.params) {\n                this.request.params = {};\n            }\n\n            this.request.params.page = page;\n            this.fetch();\n        }\n    },\n\n    data() {\n        return {\n            // (array) The dataset for the table\n            data: this.$attrs.data || [],\n\n            // (bool) Is the table currently loading data\n            loading: false,\n\n            // (null|object) The response object\n            response: null,\n\n            // (object) The HTTP request object\n            request: extend({\n                headers: {},\n                params: {\n                    page: this.page,\n                    limit: this.limit,\n                    order: this.order,\n                    sort: this.sort\n                }\n            }, this.$attrs.request)\n        };\n    },\n\n    mounted() {\n        this.fetch();\n    },\n\n    beforeDestroy() {\n        this.$off();\n    }\n};\n</script>\n\n<style lang=\"scss\">\n.card > .table {\n    margin-bottom: 0;\n\n    thead th {\n        border-top: 0;\n        border-bottom: 0;\n    }\n\n    tfoot .pagination {\n        margin-bottom: 0;\n    }\n}\n</style>\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label || hasDefaultSlot\" :for=\"id\">\n                <slot>{{label}}</slot>\n            </form-label>\n        </slot>\n\n        <slot name=\"control\">\n            <div class=\"position-relative\">\n                <textarea\n                    :id=\"id\"\n                    :rows=\"rows\"\n                    :value=\"value\"\n                    :errors=\"errors\"\n                    :pattern=\"pattern\"\n                    :readonly=\"readonly\"\n                    :required=\"required\"\n                    :maxlength=\"maxlength\"\n                    :placeholder=\"placeholder\"\n                    :disabled=\"disabled || readonly\"\n                    :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                    v-bind-events=\"bindEvents\"\n                    @input=\"$emit('input', $event.target.value)\">\n                </textarea>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </div>\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'textarea-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        },\n\n        /**\n         * The rows attribute\n         *\n         * @property String\n         */\n        rows: [Number, String]\n    }\n\n};\n</script>\n","<template>\n    <div class=\"thumbnail-list-item\" :style=\"{height: unit(height), width: unit(width), minHeight: unit(minHeight), maxHeight: unit(maxHeight), minWidth: unit(minWidth), maxWidth: unit(maxWidth)}\">\n        <img v-if=\"src\" :src=\"src\" :alt=\"alt\" :class=\"{'img-fluid': fluid}\" />\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\n\nexport default {\n\n    props: {\n\n        alt: String,\n\n        src: String,\n\n        width: [String, Number],\n\n        height: [String, Number],\n\n        minHeight: [String, Number],\n\n        maxHeight: [String, Number],\n\n        minWidth: [String, Number],\n\n        maxWidth: [String, Number],\n\n        fluid: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    methods: {\n\n        unit: unit\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.thumbnail-list-item {\n    max-width: 100%;\n    max-height: 100%;\n\n    & > img {\n        max-width: 100%;\n\n        &.img-fluid {\n            width: 100%;\n        }\n    }\n\n    /*\n    &:not(:only-child) {\n        margin-right: 10px;\n        margin-bottom: 10px;\n    }\n\n    &:nth-child(2n) {\n        opacity: .25;\n    }\n    */\n}\n</style>\n","<template>\n    <div class=\"thumbnail-list\" :class=\"classes\">\n        <thumbnail-list-item v-if=\"!!images\" v-for=\"image in images\" :key=\"image\" :src=\"image\" :width=\"width\" />\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport ThumbnailListItem from './ThumbnailListItem';\n\nexport default {\n\n    components: {\n        ThumbnailListItem\n    },\n\n    props: {\n\n        fill: Boolean,\n\n        flex: Boolean,\n\n        noFlex: Boolean,\n\n        grid: Boolean,\n\n        wrap: Boolean,\n\n        images: Array,\n\n        width: {\n            type: [String, Number],\n            default: 75\n        }\n\n    },\n\n    computed: {\n\n        classes() {\n            return {\n                'thumbnail-list-fill': this.fill,\n                'thumbnail-list-flex': this.flex,\n                'thumbnail-list-noflex': this.noFlex,\n                'thumbnail-list-grid': this.grid,\n                'thumbnail-list-wrap': this.wrap\n            };\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.thumbnail-list {\n    width: 100%;\n    display: flex;\n\n    &:not(.thumbnail-list-grid) > *:not {\n        padding-right: 10px;\n        padding-bottom: 10px;\n    }\n\n    &:not(.thumbnail-list-grid) > *:first-child:last-child {\n        padding: 0;\n    }\n\n    &.thumbnail-list-fill,\n    &.thumbnail-list-wrap {\n        flex-flow: row wrap;\n    }\n\n    &.thumbnail-list-noflex > * {\n        flex: 0;\n    }\n\n    &.thumbnail-list-fill > * {\n        flex: 1 0 auto;\n    }\n\n    &.thumbnail-list-wrap > * {\n        flex: 0 0 auto;\n    }\n\n    &.thumbnail-list-flex > * {\n        flex: 1;\n    }\n\n}\n</style>\n","<template>\n\n    <form-group class=\"upload-field\" :class=\"{'enable-dropzone': dropzone, 'enable-multiple': multiple}\">\n\n        <dropzone @drop=\"onDrop\">\n\n            <file-field\n                v-if=\"multiple && (!maxUploads || maxUploads > value.length) || !multiple && !value\"\n                :name=\"name\"\n                :label=\"label\"\n                :placeholder=\"placeholder\"\n                :help-text=\"helpText\"\n                :multiple=\"multiple\"\n                :errors=\"errors\"\n                @change=\"onChange\"\n            />\n\n            <thumbnail-list v-if=\"files && files.length\" class=\"mt-4\" wrap>\n                <thumbnail-list-item\n                    v-for=\"(file, key) in files\"\n                    :key=\"file.lastModified + '-' + file.lastModifiedDate + '-' + file.size + '-' + file.type + '-' + file.name\"\n                    :width=\"width\"\n                    :min-width=\"minWidth\"\n                    :max-width=\"maxWidth\"\n                    :height=\"height\"\n                    :min-height=\"minHeight\"\n                    :max-height=\"maxHeight\"\n                    :class=\"{'uploading': !!progressBars[key]}\">\n                    <file-preview :file=\"file\" :progress=\"progressBars[key] || 0\" @loaded=\"onLoadedPreview\" @close=\"removeFile(file)\"/>\n                    <slot :file=\"file\"/>\n                </thumbnail-list-item>\n            </thumbnail-list>\n\n            <div v-if=\"showDropElement\" class=\"upload-field-dropzone\" :style=\"{'min-height': dropzoneMinHeight}\" @drop.prevent=\"onDrop\">\n                <i class=\"fa fa-cloud-upload\"/>\n                <div>Drag and drop files to upload</div>\n            </div>\n\n        </dropzone>\n\n    </form-group>\n\n</template>\n\n<script>\nimport FormGroup from '../FormGroup';\nimport Model from '../../Http/Model';\nimport Dropzone from '../Dropzone/Dropzone';\nimport FormControl from '../../Mixins/FormControl/FormControl';\nimport FileField from '../FileField/FileField';\nimport FilePreview from '../FilePreview/FilePreview';\nimport ThumbnailList from '../ThumbnailList/ThumbnailList';\nimport ThumbnailListItem from '../ThumbnailList/ThumbnailListItem';\nimport { each, extend, remove, isArray, isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'upload-field',\n\n    mixins: [FormControl],\n\n    components: {\n        Dropzone,\n        FormGroup,\n        FileField,\n        FilePreview,\n        ThumbnailList,\n        ThumbnailListItem\n    },\n\n    model: {\n        prop: 'value',\n        event: 'change'\n    },\n\n    props: {\n\n        /**\n         * Can user upload multiple files\n         *\n         * @property String\n         */\n        multiple: Boolean,\n\n        /**\n         * The maximum number of files that a user can upload\n         *\n         * @property String\n         */\n        maxUploads: Number,\n\n        /**\n         * The height attribute for the control element\n         *\n         * @property String\n         */\n        height: [Number, String],\n\n        /**\n         * The minimum height attribute for the control element\n         *\n         * @property String\n         */\n        minHeight: [Number, String],\n\n        /**\n         * The maximum height attribute for the control element\n         *\n         * @property String\n         */\n        maxHeight: [Number, String],\n\n        /**\n         * The width attribute for the control element\n         *\n         * @property String\n         */\n        width: [Number, String],\n\n        /**\n         * The minimum width attribute for the control element\n         *\n         * @property String\n         */\n        minWidth: [Number, String],\n\n        /**\n         * The maximum width attribute for the control element\n         *\n         * @property String\n         */\n        maxWidth: [Number, String],\n\n        /**\n         * Can user drag/drop files into browser to upload them.\n         *\n         * @property String\n         */\n        dropzoneMinHeight: [Number, String],\n\n        /**\n         * Is the user dragging a file over the dropzone\n         *\n         * @property String\n         */\n        dragging: {\n            type: [String, Boolean],\n            default() {\n                return undefined;\n            }\n        },\n\n        /**\n         * Can user drag/drop files into browser to upload them.\n         *\n         * @property String\n         */\n        dropzone: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * The data attribute\n         *\n         * @property File|FileList|Array\n         */\n        value: {\n            type: [Object, File, FileList, Array],\n            default() {\n                return !this.multiple ? null : [];\n            }\n        },\n\n        /**\n         * An HTTP Model used to send the request\n         *\n         * @type Model\n         */\n        model: [Model, Function],\n\n        request: Object\n\n    },\n\n    methods: {\n\n        removeFile(data) {\n            if(this.multiple) {\n                const files = isArray(this.value) ? this.value.slice(0) : [];\n\n                if(data instanceof File) {\n                    if(data.request && data.request.cancel) {\n                        data.request.cancel();\n                    }\n\n                    remove(files, {\n                        name: data.name,\n                        size: data.size,\n                        lastModified: data.lastModified\n                    });\n                }\n                else {\n                    remove(files, data);\n                }\n\n                this.$emit('change', files);\n            }\n            else {\n                if(data.request && data.request.cancel) {\n                    data.request.cancel();\n                }\n\n                this.$emit('change', null);\n            }\n        },\n\n        addFile(file, subject) {\n            const data = {\n                name: file.name,\n                lastModified: file.lastModified,\n                lastModifiedDate: file.lastModifiedDate,\n                size: file.size,\n                type: file.type\n            };\n\n            if(this.multiple) {\n                const files = subject || (isArray(this.value) ? this.value.slice(0) : []);\n\n                if((!this.maxUploads || this.maxUploads > files.length) && files.indexOf(data) === -1) {\n                    files.push(file);\n\n                    this.$emit('change', files);\n                    this.upload(file);\n                }\n            }\n            else {\n                this.$emit('change', file);\n                this.upload(file);\n            }\n        },\n\n        addFiles(files) {\n            const subject = isArray(this.value) ? this.value.slice(0) : [];\n\n            each(files, file => {\n                this.addFile(file, subject);\n            });\n\n            event.target.value = null;\n        },\n\n        /**\n         * Upload function that handles auto-uploading fields asynchronously.\n         * This is designed to work with REST API's and replace the file Object\n         * with the RESTful returned by the server.\n         *\n         * @type Object\n         */\n        upload(file) {\n            // Stop upload silently if no model is defined.\n            if(!this.model) {\n                return Promise.resolve();\n            }\n\n            let model = this.model;\n\n            if(!(this.model instanceof Model)) {\n                const Model = this.model;\n\n                model = new Model();\n            }\n\n            model.set(this.name, file);\n\n            this.$emit('uploading', model);\n            this.$set(this.progressBars, this.multiple ? (this.value ? this.value.length : 0) : 0, 0);\n\n            return model.save(null, extend({\n                onUploadProgress: e => {\n                    if(!file.index) {\n                        file.index = this.files.indexOf(file);\n                    }\n\n                    if(!file.request) {\n                        file.request = model.getRequest();\n                    }\n\n                    this.$set(this.progressBars, file.index, parseInt((e.loaded / e.total) * 100, 10));\n                    this.$emit('progress', model, this.progressBars[file.index]);\n                }\n            }, this.request))\n                .then(response => {\n                    this.$nextTick(() => {\n                        this.$emit('upload', model);\n                        this.progressBars[file.index] = false;\n                    });\n\n                    return response;\n                });\n        },\n\n        /**\n         * The `change` event callback.\n         *\n         * @type Object\n         */\n        onChange(files) {\n            if(files instanceof FileList) {\n                this.addFiles(files);\n            }\n            else {\n                this.addFile(files);\n            }\n        },\n\n        /**\n         * The `dragover` event callback.\n         *\n         * @type Object\n         */\n        onDragOver(event) {\n            this.isDraggingInside = true;\n            this.$emit('update:dragging', true);\n            this.$emit('drag:over', event);\n        },\n\n        /**\n         * The `dragover` event callback.\n         *\n         * @type Object\n         */\n        onDragEnter(event) {\n            this.isDraggingInside = true;\n            this.$emit('update:dragging', true);\n            this.$emit('drag:enter', event);\n        },\n\n        /**\n         * The `dragleave` event callback.\n         *\n         * @type Object\n         */\n        onDragLeave(event) {\n            this.isDraggingInside = false;\n            this.$emit('update:dragging', false);\n            this.$emit('drag:leave', event);\n        },\n\n        /**\n         * The `drop` event callback.\n         *\n         * @property String\n         */\n        onDrop(event) {\n            this.isDraggingInside = false;\n            this.addFiles(event.dataTransfer.files);\n            this.$emit('update:dragging', false);\n            this.$emit('drop', event);\n        },\n\n        /**\n         * The `loaded` event callback.\n         *\n         * @type Object\n         */\n        onLoadedPreview(event) {\n            this.$emit('loaded', event);\n        }\n    },\n\n    computed: {\n\n        files() {\n            return this.multiple ? this.value : (this.value ? [this.value] : []);\n        },\n\n        showDropElement() {\n            return !isUndefined(this.dragging) ? this.dragging : this.isDraggingInside;\n        }\n\n    },\n\n    data() {\n        return {\n            progressBars: {},\n            isDraggingInside: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n\n.upload-field {\n     .file-preview {\n        min-width: 100px;\n        min-height: 100px;\n\n        .uploading .file-preview {\n            opacity: .5;\n        }\n    }\n}\n</style>\n","<template>\n    <div class=\"wizard-buttons\">\n        <btn-group ref=\"left\" class=\"wizard-buttons-left\">\n            <slot name=\"buttons-left\"/>\n            <btn type=\"button\" variant=\"secondary\" ref=\"back\" :disabled=\"backButton === false || (active === 0 && backButton !== true)\" :size=\"sizeableClass\" @click=\"onClickBack\">\n                <i class=\"fa fa-long-arrow-left\"/> Back\n            </btn>\n        </btn-group>\n        <btn-group ref=\"right\" class=\"wizard-buttons-right\">\n            <slot name=\"buttons-right\"/>\n            <btn-activity v-if=\"active === steps.length - 1\" ref=\"finish\" :activity=\"activity\" :size=\"sizeableClass\" :disabled=\"finishButton === false\" type=\"button\" variant=\"success\" @click=\"onClickFinish\">\n                Finish\n            </btn-activity>\n            <btn-activity v-if=\"active < steps.length - 1\" ref=\"next\" :activity=\"activity\" :size=\"sizeableClass\" :disabled=\"nextButton === false\" type=\"button\" variant=\"primary\" @click=\"onClickNext\">\n                Next <i class=\"fa fa-long-arrow-right\"/>\n            </btn-activity>\n        </btn-group>\n    </div>\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport BtnGroup from '../BtnGroup';\nimport BtnActivity from '../BtnActivity';\nimport Sizeable from '../../Mixins/Sizeable';\n\nexport default {\n\n    name: 'wizard-buttons',\n\n    mixins: [\n        Sizeable\n    ],\n\n    components: {\n        Btn,\n        BtnGroup,\n        BtnActivity\n    },\n\n    props: {\n\n        /**\n         * The index or key of the active step.\n         *\n         * @type {String|Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * Show the activity indicator in the next or finish button.\n         *\n         * @type {Boolean}\n         */\n        activity: Boolean,\n\n        /**\n         * Show should the \"Back\" button.\n         *\n         * @type {Boolean}\n         */\n        backButton: Boolean,\n\n        /**\n         * Show should the \"Finish\" button.\n         *\n         * @type {Boolean}\n         */\n        finishButton: Boolean,\n\n        /**\n         * Show should the \"Next\" button.\n         *\n         * @type {Boolean}\n         */\n        nextButton: Boolean,\n\n        /**\n         * An array of steps passed from the parent.\n         *\n         * @type {Array}\n         */\n        steps: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * Override the class prefix with an empty string...\n         * @return {String}\n         */\n        sizeableClassPrefix() {\n            return '';\n        }\n\n    },\n\n    methods: {\n\n        onClickBack(event) {\n            if(this.backButton !== false) {\n                this.$emit('click:back', event);\n            }\n        },\n\n        onClickFinish(event) {\n            if(this.finishButton !== false) {\n                this.$emit('click:finish', event);\n            }\n        },\n\n        onClickNext(event) {\n            if(this.nextButton !== false) {\n                this.$emit('click:next', event);\n            }\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.wizard-buttons {\n    display: flex;\n    justify-content: space-between;\n}\n</style>\n","<script>\nimport { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'wizard-step',\n\n    props: {\n\n        /**\n         * The parent wizard component instance.\n         *\n         * @type {String}\n        wizard: {\n            //required: true,\n            type: Object\n        },\n        */\n\n        /**\n         * The step's label in the progress bar.\n         *\n         * @type {String}\n         */\n        label: String,\n\n        /**\n         * A predicate function to determine if the back button should show.\n         * Can also be a boolean value.\n         *\n         * @type {Function|Boolean}\n         */\n        backButton: {\n            type: [Function, Boolean],\n            default() {\n                return null;\n            }\n        },\n\n        /**\n         * Validate if the data input for the step is valid. Required Boolean\n         * or a predicate function.\n         *\n         * @type {Function|Boolean}\n         */\n        validate: {\n            type: [Function, Boolean],\n            default() {\n                return true;\n            }\n        }\n\n    },\n\n    methods: {\n\n        checkValidity(prop) {\n            // Validate the property for the step first.\n            if(isFunction(this[prop]) ? this[prop](this) === false : this[prop] === false) {\n                return false;\n            }\n\n            // Then validate the property of the wizard, this is the global validator\n            if(this.$refs.wizard) {\n                if(isFunction(this.$refs.wizard[prop])\n                    ? this.$refs.wizard[prop](this) === false\n                    : this.$refs.wizard[prop] === false) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        performValidityChecks() {\n            if(this.$refs.wizard) {\n                this.checkValidity('validate') ? this.enable() : this.disable();\n                this.checkValidity('backButton') ? this.$refs.wizard.enableBackButton() : this.$refs.wizard.disableBackButton();\n            }\n        },\n\n        disable() {\n            if(this.$refs.wizard) {\n                this.$refs.wizard.disableNextButton();\n                this.$refs.wizard.disableFinishButton();\n            }\n        },\n\n        enable() {\n            if(this.$refs.wizard) {\n                this.$refs.wizard.enableNextButton();\n                this.$refs.wizard.enableFinishButton();\n            }\n        }\n\n    },\n\n    updated() {\n        this.performValidityChecks();\n    },\n\n    mounted() {\n        this.$nextTick(this.performValidityChecks);\n    },\n\n    render(h) {\n        if(this.$slots.default.length !== 1) {\n            throw new Error('The <wizard-slot> must contain a single parent DOM node.');\n        }\n\n        return this.$slots.default[0];\n    }\n\n};\n</script>\n","<template>\n    <div class=\"wizard-error\">\n        <div v-if=\"icon\" class=\"wizard-error-icon\">\n            <i :class=\"icon\"/>\n        </div>\n\n        <h3 v-if=\"title\" class=\"wizard-error-title\" v-html=\"title\"/>\n\n        <slot/>\n\n        <div class=\"row justify-content-center\">\n            <div class=\"col-sm-6\">\n                <div v-if=\"errors\" class=\"my-5\">\n                    <ul class=\"mb-0 text-left\">\n                        <li v-for=\"(error, i) in errors\" :key=\"i\">\n                            {{ error[0] }}\n                        </li>\n                    </ul>\n                </div>\n\n                <btn size=\"lg\" variant=\"danger\" block @click=\"$emit('back')\">\n                    <i class=\"fa fa-long-arrow-left\"/> Go Back\n                </btn>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Btn from '../Btn';\nimport WizardStep from './WizardStep';\n\nexport default {\n\n    name: 'wizard-error',\n\n    extends: WizardStep,\n\n    components: {\n        Btn\n    },\n\n    props: {\n\n        icon: {\n            type: String,\n            default: 'fa fa-3x fa-check'\n        },\n\n        title: {\n            type: String,\n            default: 'Error!'\n        },\n\n        errors: [Array, Object]\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n$wizard-error-color: #b10805;\n\n.wizard-error {\n    text-align: center;\n    font-size: $font-size-lg;\n    padding: $font-size-lg * 4 $font-size-lg;\n\n    .wizard-error-title {\n        font-size: $font-size-lg * 1.5;\n        color: $wizard-error-color;\n    }\n\n    .wizard-error-icon {\n        color: $wizard-error-color;\n        font-size: $font-size-lg;\n        border: 5px solid $wizard-error-color;\n        border-radius: 100%;\n        text-align: center;\n        width: $font-size-lg * 6;\n        height: $font-size-lg * 6;\n        margin: $font-size-lg auto;\n        position: relative;\n\n        i {\n            position: absolute;\n            width: 100%;\n            top: 50%;\n            left: 0;\n            line-height: 0;\n        }\n    }\n}\n</style>\n","<template>\n    <component :is=\"tag\" class=\"wizard-header\" :class=\"{'text-center': center}\">\n        <slot/>\n    </component>\n</template>\n\n<script>\nexport default {\n\n    name: 'wizard-header',\n\n    props: {\n\n        center: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * The HTML tag\n         *\n         * @type {String}\n         */\n        tag: {\n            type: String,\n            default: 'h2'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.card > .wizard {\n    .wizard-header {\n        margin-top: 1rem;\n    }\n}\n</style>\n","<template>\n    <div class=\"wizard-progress\">\n        <a\n            href=\"#\"\n            v-for=\"(step, i) in steps\"\n            class=\"wizard-step\"\n            :class=\"{'active': i === active, 'disabled': i > highestStep, 'complete': i + 1 <= highestStep}\"\n            :data-step=\"i\"\n            :title=\"step.label || step.title\"\n            :style=\"{width: `${100 / steps.length}%`}\"\n            @click.prevent=\"onClick($event, step)\">\n            <span v-if=\"step.componentOptions && step.componentOptions.propsData.label\" class=\"wizard-step-label\" v-html=\"step.componentOptions.propsData.label\"/>\n            <span v-else-if=\"step.componentOptions && step.componentOptions.propsData.title\" class=\"wizard-step-label\" v-html=\"step.componentOptions.propsData.title\"/>\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'wizard-progress',\n\n    props: {\n\n        /**\n         * The index or key of the active step.\n         *\n         * @type {String|Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * The wizard highest available to the user.\n         *\n         * @type {Array}\n         */\n        highestStep: {\n            type: Number,\n            required: true\n        },\n\n        /**\n         * The wizard steps\n         *\n         * @type {Array}\n         */\n        steps: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    methods: {\n\n        onClick(event, step) {\n            if(!event.target.classList.contains('disabled')) {\n                this.$emit('click', event, step);\n            }\n        }\n\n    },\n\n    data() {\n        return {\n            isActive: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.wizard-progress {\n    justify-content: space-between;\n    align-items: center;\n    padding: 30px 0;\n    counter-reset: step;\n}\n\n/*\n.wizard-progress-wrapper {\n    width: 100%;\n    padding: 30px 0;\n\n    &:after {\n        visibility: hidden;\n        display: block;\n        font-size: 0;\n        content: \" \";\n        clear: both;\n        height: 0;\n    }\n}\n*/\n\n.wizard-step {\n    cursor: default;\n    display: inline-block;\n    list-style-type: none;\n    font-size: $font-size-base;\n    position: relative;\n    text-align: center;\n    text-transform: uppercase;\n\n    &:before {\n        width: 40px;\n        height: 40px;\n        content: counter(step);\n        counter-increment: step;\n        line-height: 36px;\n        font-size: 15px;\n        display: block;\n        text-align: center;\n        margin: 0 auto 10px auto;\n        border-radius: 50%;\n        background-color: white;\n        position: relative;\n        z-index: 1;\n        border: 2px solid #008cc0;\n        color: #008cc0;\n    }\n\n    &:after {\n        width: 100%;\n        height: 2px;\n        content: '';\n        position: absolute;\n        background-color: #7d7d7d;\n        top: 20px;\n        left: -50%;\n    }\n\n    &:first-child:after {\n        content: none;\n    }\n\n    &, &:hover {\n        color: #7d7d7d;\n        text-decoration: none;\n\n        &:not(.disabled) {\n            cursor: pointer;\n        }\n    }\n\n    .wizard-step-label {\n       color: #008cc0;\n    }\n\n    &.disabled {\n        cursor: default;\n\n        &:before {\n            color: #7d7d7d;\n            border-color: #7d7d7d;\n        }\n\n        .wizard-step-label {\n            color: #7d7d7d;\n        }\n    }\n\n    &.complete {\n        &:before {\n            border-color: #55b776;\n            color: #55b776;\n        }\n\n        &:before {\n            font-family: FontAwesome;\n            content: \"\\f00c\";\n            line-height: 40px;\n        }\n\n        & + .wizard-step:after {\n            background-color: #55b776;\n        }\n\n        .wizard-step-label {\n            color: #55b776;\n        }\n    }\n\n    &.active {\n        &:before {\n            border-color: #b10805;\n            color: #b10805;\n        }\n\n        .wizard-step-label {\n            color: #b10805;\n        }\n    }\n\n    .wizard:not(.wizard-finished) &.active:hover:before,\n    .wizard:not(.wizard-finished) &.complete:hover:before {\n        border-color: #b10805;\n        color: #b10805;\n    }\n\n    .wizard:not(.wizard-finished) &.complete:hover + .wizard-step:after {\n        background-color: #b10805;\n    }\n}\n\n</style>\n","<template>\n    <div class=\"wizard-success\">\n        <div v-if=\"icon\" class=\"wizard-success-icon\">\n            <i :class=\"icon\"/>\n        </div>\n\n        <h3 v-if=\"title\" class=\"wizard-success-title\" v-html=\"title\"/>\n\n        <slot/>\n    </div>\n</template>\n\n<script>\nimport WizardStep from './WizardStep';\n\nexport default {\n\n    name: 'wizard-success',\n\n    extends: WizardStep,\n\n    props: {\n\n        icon: {\n            type: String,\n            default: 'fa fa-check'\n        },\n\n        title: {\n            type: String,\n            default: 'Success!'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n$wizard-success-color: #55b776;\n\n.wizard-success {\n    text-align: center;\n    font-size: $font-size-lg;\n    padding: $font-size-lg * 4 $font-size-lg;\n\n    .wizard-success-title {\n        font-size: $font-size-lg * 1.5;\n        color: $wizard-success-color;\n    }\n\n    .wizard-success-icon {\n        color: $wizard-success-color;\n        font-size: $font-size-lg * 2.5;\n        border: 5px solid $wizard-success-color;\n        border-radius: 100%;\n        text-align: center;\n        width: $font-size-lg * 6;\n        height: $font-size-lg * 6;\n        margin: $font-size-lg auto;\n        position: relative;\n\n        i {\n            position: absolute;\n            width: 100%;\n            top: 50%;\n            left: 0;\n            line-height: 0;\n        }\n    }\n}\n</style>\n","<template>\n    <div class=\"wizard\">\n\n        <wizard-header v-if=\"header && !isFinished\" ref=\"header\" v-html=\"header\"/>\n\n        <wizard-progress\n            v-if=\"!isFinished\"\n            ref=\"progress\"\n            :active=\"currentStep\"\n            :highest-step=\"highestStep\"\n            :steps=\"steps\"\n            @click=\"onProgressClick\"\n        />\n\n        <div class=\"wizard-content\" ref=\"content\">\n            <slot v-if=\"!isFinished\" name=\"content\"/>\n\n            <slide-deck\n                v-if=\"!isFinished\"\n                ref=\"slideDeck\"\n                :active=\"currentStep\"\n                :resize-model=\"resizeMode\"\n                @before-enter=\"onBeforeEnter\"\n                @enter=\"onEnter\"\n                @leave=\"onLeave\">\n                <slot />\n            </slide-deck>\n\n            <slot v-else-if=\"isFinished && !hasFailed\" name=\"success\">\n                <wizard-success ref=\"success\"/>\n            </slot>\n\n            <slot v-else-if=\"isFinished && hasFailed\" name=\"error\">\n                <wizard-error ref=\"error\" :errors=\"errors\" @back=\"onClickTest\"/>\n            </slot>\n        </div>\n\n        <slot v-if=\"!isFinished\" name=\"buttons\">\n            <hr>\n\n            <wizard-buttons\n                ref=\"buttons\"\n                size=\"lg\"\n                :steps=\"steps\"\n                :active=\"currentStep\"\n                :activity=\"activity\"\n                :back-button=\"!isBackButtonDisabled\"\n                :next-button=\"!isNextButtonDisabled\"\n                :finish-button=\"!isFinishButtonDisabled\"\n                @click:back=\"onClickBack\"\n                @click:finish=\"onClickFinish\"\n                @click:next=\"onClickNext\"\n            />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport SlideDeck from '../SlideDeck';\nimport WizardButtons from './WizardButtons';\nimport WizardError from './WizardError';\nimport WizardHeader from './WizardHeader';\nimport WizardProgress from './WizardProgress';\nimport WizardSuccess from './WizardSuccess';\nimport { find } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'wizard',\n\n    components: {\n        SlideDeck,\n        WizardButtons,\n        WizardError,\n        WizardHeader,\n        WizardProgress,\n        WizardSuccess\n    },\n\n    props: {\n\n        /**\n         * The index or key of the active step.\n         *\n         * @type {String|Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * The the index or key of the max completed step.\n         *\n         * @type {String|Number}\n         */\n        completed: [String, Number],\n\n        /**\n         * Show the activity indicator in the next or finish button.\n         *\n         * @type {Boolean}\n         */\n        activity: Boolean,\n\n        /**\n         * Show should the \"Back\" button.\n         *\n         * @type {Boolean}\n         */\n        backButton: {\n            type: [Function, Boolean],\n            default() {\n                return this.currentStep > 0;\n            }\n        },\n\n        /**\n         * Show should the \"Finish\" button.\n         *\n         * @type {Boolean}\n         */\n        finishButton: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Pass a header as a string.\n         *\n         * @type {String}\n         */\n        header: String,\n\n        /**\n         * Show should the \"Next\" button.\n         *\n         * @type {Boolean}\n         */\n        nextButton: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * The mode determines how the popover content will flex based on the\n         * varying heights of the slides.\n         *\n         * @type Boolean\n         */\n        resizeMode: {\n            type: [Function, Boolean, String],\n            default: 'auto',\n            validate(value) {\n                return ['auto', 'initial', 'inherit'].indexOf(value) !== 1;\n            }\n        },\n\n        /**\n         * Validate if the data input for the step is valid. Required Boolean\n         * or a predicate function.\n         *\n         * @type {Function|Boolean}\n         */\n        validate: {\n            type: [Function, Boolean],\n            default() {\n                return true;\n            }\n        }\n\n    },\n\n    watch: {\n\n        active() {\n            this.currentStep = this.index();\n        }\n\n    },\n\n    methods: {\n\n        back() {\n            this.$emit('update:step', this.currentStep = Math.max(this.currentStep - 1, 0));\n        },\n\n        disableButtons() {\n            this.isBackButtonDisabled = true;\n            this.isFinishButtonDisabled = true;\n            this.isNextButtonDisabled = true;\n        },\n\n        disableBackButton() {\n            this.isBackButtonDisabled = true;\n        },\n\n        disableFinishButton() {\n            this.isFinishButtonDisabled = true;\n        },\n\n        disableNextButton() {\n            this.isNextButtonDisabled = true;\n        },\n\n        emitBubbleEvent(key, ...args) {\n            this.$refs.slideDeck.slide(this.currentStep).componentInstance.$emit.apply(\n                this.$refs.slideDeck.slide(this.currentStep).componentInstance, args = [key].concat(args)\n            );\n\n            this.$emit.apply(this, args);\n        },\n\n        enableButtons() {\n            this.isBackButtonDisabled = false;\n            this.isFinishButtonDisabled = false;\n            this.isNextButtonDisabled = false;\n        },\n\n        enableBackButton() {\n            this.isBackButtonDisabled = false;\n        },\n\n        enableFinishButton() {\n            this.isFinishButtonDisabled = false;\n        },\n\n        enableNextButton() {\n            this.isNextButtonDisabled = false;\n        },\n\n        finish(status, errors = null) {\n            this.errors = errors;\n            this.hasFailed = status === false;\n            this.isFinished = true;\n        },\n\n        index(key = null) {\n            return Math.max(0, this.$slots.default.indexOf(\n                find(this.$slots.default, ['key', key || this.active]) || this.$slots.default[key || this.active]\n            ));\n        },\n\n        next() {\n            this.$emit('update:step', this.currentStep = Math.min(this.currentStep + 1, this.$refs.slideDeck.slides().length - 1));\n        },\n\n        onBeforeEnter(slide, prev) {\n            slide.context.$emit('before-enter', slide, prev);\n            this.$emit('before-enter', slide, prev);\n        },\n\n        onClickTest(event) {\n            this.isFinished = false;\n        },\n\n        onClickBack(event) {\n            this.emitBubbleEvent('back', event);\n\n            if(event.defaultPrevented !== true) {\n                this.back();\n            }\n        },\n\n        onClickFinish(event) {\n            this.emitBubbleEvent('finish', event);\n\n            if(event.defaultPrevented !== true) {\n                this.finish(true);\n            }\n        },\n\n        onClickNext(event) {\n            this.emitBubbleEvent('next', event);\n\n            if(event.defaultPrevented !== true) {\n                this.next();\n            }\n        },\n\n        onEnter(slide, prev) {\n            this.highestStep = Math.max(this.highestStep, this.$refs.slideDeck.$refs.slides.getSlideIndex(slide));\n            slide.componentInstance.$refs.wizard = this;\n            slide.context.$emit('enter', slide, prev);\n            this.$emit('enter', slide, prev);\n        },\n\n        onLeave(slide, prev) {\n            slide.context.$emit('leave', slide, prev);\n            this.$emit('leave', slide, prev);\n        },\n\n        onProgressClick(event, slide) {\n            if(this.$refs.slideDeck) {\n                this.currentStep = this.$refs.slideDeck.$refs.slides.getSlideIndex(slide);\n            }\n            else {\n                this.isFinished = false;\n                this.currentStep = this.index(slide.key);\n            }\n        }\n\n    },\n\n    mounted() {\n        const slide = this.$refs.slideDeck.slide(this.currentStep);\n\n        if(slide) {\n            (slide.componentInstance || slide.context).$refs.wizard = this;\n            (slide.componentInstance || slide.context).$emit('enter');\n            this.$emit('enter', slide);\n        }\n\n        this.steps = this.$refs.slideDeck.slides();\n    },\n\n    data() {\n        return {\n            steps: [],\n            errors: null,\n            hasFailed: false,\n            isFinished: false,\n            currentStep: this.index(),\n            highestStep: this.index(this.completed),\n            isBackButtonDisabled: this.backButton === false,\n            isNextButtonDisabled: this.nextButton === false,\n            isFinishButtonDisabled: this.finishButton === false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.wizard {\n    .slide-deck-content {\n        margin: 1rem;\n    }\n\n    .wizard-content {\n        overflow: hidden;\n        padding: .5rem;\n\n        & + hr {\n            margin-bottom: 0;\n        }\n    }\n\n    .wizard-buttons {\n        padding: 1rem;\n    }\n}\n\n</style>\n","const STYLE_ATTRIBUTES = [\n    'font',\n    'fontFamily',\n    'fontKerning',\n    'fontSize',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantLigatures',\n    'fontVariantCaps',\n    'fontVariantNumeric',\n    'fontVariantEastAsian',\n    'fontWeight',\n    'lineHeight',\n    'letterSpacing',\n    'padding',\n    'margin',\n    'textAlign',\n    'textAlignLast',\n    'textDecoration',\n    'textDecorationLine',\n    'textDecorationStyle',\n    'textDecorationColor',\n    'textDecorationSkipInk',\n    'textDecorationPosition',\n    'textIndent',\n    'textRendering',\n    'textShadow',\n    'textSizeAdjust',\n    'textOverflow',\n    'textTransform',\n    'width',\n    'wordBreak',\n    'wordSpacing',\n    'wordWrap'\n];\n\nfunction int(str) {\n    if(typeof str === 'number') {\n        return str;\n    }\n    else if(!str || !str.replace) {\n        return 0;\n    }\n\n    return parseInt(str.replace(/[^\\d.]+/g, ''));\n}\n\nfunction input(div, el) {\n    div.innerHTML = el.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n}\n\nfunction height(el) {\n    return int(el.getBoundingClientRect().height);\n}\n\nfunction style(el, attr) {\n    return window.getComputedStyle(el)[attr];\n}\n\nfunction resize(target, div, minHeight, maxHeight) {\n    const dynamicHeight = Math.max(height(div) + int(style(div, 'lineHeight')), minHeight);\n    target.style.height = ((!maxHeight || dynamicHeight < maxHeight) ? dynamicHeight : maxHeight) + 'px';\n}\n\n/*\nfunction setMinHeight(div, el) {\n    div.style.minHeight = height(el) + 'px';\n}\n*/\n\nfunction mimic(el) {\n    const div = document.createElement('div');\n    const styles = window.getComputedStyle(el);\n\n    for(let i in STYLE_ATTRIBUTES) {\n        const key = STYLE_ATTRIBUTES[i];\n\n        div.style[key] = styles[key];\n    }\n\n    div.style.position = 'absolute';\n    div.style.bottom = '100%';\n    div.style.zIndex = -1;\n    div.style.visibility = 'hidden';\n\n    return div;\n}\n\nfunction init(el, maxHeight) {\n    const div = mimic(el);\n    const minHeight = height(el);\n\n    el.addEventListener('input', event => {\n        input(div, event.target);\n        resize(el, div, minHeight, maxHeight);\n    });\n\n    document.body.appendChild(div);\n\n    input(div, el);\n    resize(el, div, minHeight, maxHeight);\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if(el.tagName.toLowerCase() !== 'textarea') {\n            el = el.querySelector('textarea');\n        }\n\n        if(!el) {\n            throw new Error('A textarea is required for the v-autogrow directive.');\n        }\n\n        init(el, binding.value);\n    }\n\n};\n","import { isUndefined } from '../../Helpers/Functions';\nimport transition from '../../Helpers/Transition';\n\nfunction show(el, target, vnode) {\n    target.classList.remove('collapse');\n    target.classList.add('show');\n    target.$collapsedHeight = getComputedStyle(target).height;\n    target.classList.add('collapsing');\n\n    vnode.context.$nextTick(() => {\n        target.style.height = target.$collapsedHeight;\n    });\n\n    transition(target).then(delay => {\n        target.style.height = null;\n        target.classList.add('collapse');\n        target.classList.remove('collapsing');\n        el.classList.remove('collapsed');\n    });\n}\n\nfunction hide(el, target, vnode) {\n    target.style.height = target.$collapsedHeight;\n    target.classList.add('collapsing');\n    target.classList.remove('collapse');\n\n    vnode.context.$nextTick(() => {\n        target.style.height = 0;\n    });\n\n    transition(target).then(delay => {\n        target.style.height = null;\n        target.classList.add('collapse');\n        target.classList.remove('show', 'collapsing');\n        el.classList.add('collapsed');\n    });\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if(isUndefined(binding.value) || binding.value === true) {\n            el.classList.add('collapsed');\n            el.setAttribute('data-toggle', 'collapse');\n\n            const target = el.getAttribute('data-target') || el.getAttribute('href');\n            const elements = document.querySelectorAll(target);\n\n            el.addEventListener('click', event => {\n                elements.forEach(element => {\n                    if(!element.classList.contains('show')) {\n                        show(el, element, vnode);\n                    }\n                    else {\n                        hide(el, element, vnode);\n                    }\n                });\n\n                event.preventDefault();\n            });\n\n            elements.forEach(element => {\n                /*\n                if(!element.$collapsedHeight) {\n                    element.$collapsedHeight = getComputedStyle(element).height;\n                }\n                */\n\n                if(!element.classList.contains('collapse')) {\n                    element.classList.add('collapse');\n                }\n            });\n        }\n    }\n\n};\n","import { get, kebabCase } from '../../Helpers/Functions';\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        const input = el.querySelector('input, textarea') || el;\n        const value = get(vnode.context, binding.expression);\n\n        let editable = !input.value;\n\n        const update = value => {\n            if(editable) {\n                input.value = kebabCase(value);\n                input.dispatchEvent(new Event('input'));\n            }\n        };\n\n        vnode.context.$watch(binding.expression, update);\n\n        input.addEventListener('keyup', event => {\n            input.value = kebabCase(event.target.value) + (\n                event.target.value.match(/\\s$/) ? ' ' : ''\n            );\n        });\n\n        input.addEventListener('input', event => {\n            if(event instanceof InputEvent) {\n                editable = !event.target.value;\n            }\n        });\n\n        input.addEventListener('blur', event => {\n            input.value = kebabCase(event.target.value || binding.expression.split('.').reduce((o, i) => o[i], vnode.context));\n            input.dispatchEvent(new Event('input'));\n        });\n\n        !input.value && update(value);\n    }\n\n};\n","import { isObject, isString } from '../Functions';\n\nexport default function instantiate(Vue, Component, options) {\n    if(Component instanceof Vue) {\n        return Component;\n    }\n\n    if(isObject(Component)) {\n        Component = Vue.extend(Component);\n    }\n    else if(isString(Component)) {\n        const text = Component;\n\n        Component = Vue.extend({\n\n            functional: true,\n\n            render(h, context) {\n                return this._v(text);\n            }\n\n        });\n    }\n\n    return new Component(options);\n}\n","import Modal from '../../Components/Modal';\nimport instantiate from '../../Helpers/Instantiate';\nimport { isObject, isFunction, deepExtend } from '../../Helpers/Functions';\n\nexport default function(Vue, options) {\n    Vue.prototype.$modal = function(Component, options) {\n        if(!isObject(options)) {\n            options = {};\n        }\n\n        const instance = instantiate(Vue, Modal, options.modal);\n\n        instance.$content = instantiate(Vue, Component, options.content);\n        instance.$slots.default = [instance.$content.$mount()._vnode];\n        instance.$mount(\n            document.body.appendChild(document.createElement('div'))\n        );\n\n        return instance;\n    };\n\n    Vue.prototype.$alert = function(title, Component, options) {\n        return new Promise((resolve, reject) => {\n            const modal = this.$modal(Component, deepExtend(options, {\n                modal: {\n                    propsData: {\n                        title: title,\n                        type: 'alert'\n                    }\n                }\n            }));\n\n            modal.$on('confirm', event => {\n                modal.close();\n            });\n\n            modal.$on('close', event => {\n                resolve(modal);\n            });\n        });\n    };\n\n    Vue.prototype.$confirm = function(title, Component, options) {\n        return new Promise((resolve, reject) => {\n            const modal = this.$modal(Component || title, deepExtend(options, {\n                modal: {\n                    propsData: {\n                        title: Component ? title : null,\n                        type: 'confirm'\n                    }\n                }\n            }));\n\n            modal.$on('cancel', event => {\n                reject(modal);\n            });\n\n            modal.$on('confirm', event => {\n                resolve(modal.close());\n            });\n        });\n    };\n\n    Vue.prototype.$prompt = function(title, Component, options, predicate) {\n        return new Promise((resolve, reject) => {\n            if(isFunction(options)) {\n                predicate = options;\n                options = {};\n            }\n            else if(isObject(options) && isFunction(options.predicate)) {\n                predicate = options.predicate;\n            }\n            else if(!isFunction(predicate)) {\n                predicate = () => true;\n            }\n\n            const modal = this.$modal(Component, deepExtend(options, {\n                modal: {\n                    propsData: {\n                        title: title,\n                        type: 'prompt'\n                    }\n                }\n            }));\n\n            modal.$on('cancel', event => {\n                reject(modal);\n            });\n\n            modal.$on('confirm', event => {\n                const succeed = () => resolve(modal.close());\n                const fail = () => reject(modal.close());\n\n                if(predicate(modal, succeed, fail) === true) {\n                    succeed();\n                }\n            });\n        });\n    };\n}\n","import { isObject, deepExtend } from '../../Helpers/Functions';\nimport instantiate from '../../Helpers/Instantiate';\nimport Overlay from '../../Components/Overlay';\n\nexport default function(Vue, options) {\n    Vue.prototype.$overlay = function(target, Component, options) {\n        if(!isObject(options)) {\n            options = {};\n        }\n\n        if(!target.$overlay) {\n            target.$overlay = instantiate(Vue, Overlay, deepExtend(options.overlay, {\n                propsData: {\n                    target: target\n                }\n            }));\n\n            target.$overlay.$mount(\n                document.body.appendChild(document.createElement('div'))\n            );\n\n            target.$overlay.$content = instantiate(Vue, Component, options.content);\n            target.$overlay.$slots.default = [target.$overlay.$content.$mount()._vnode];\n            target.$overlay.$nextTick(() => {\n                target.$overlay.open();\n            });\n        }\n\n        return target.$overlay;\n    };\n}\n","import instantiate from '../../Helpers/Instantiate';\nimport Popover from '../../Components/Popover';\nimport { isObject, deepExtend } from '../../Helpers/Functions';\n\nexport default function(Vue, options) {\n    Vue.prototype.$popover = function(target, Component, options) {\n        if(!isObject(options)) {\n            options = {};\n        }\n\n        if(!target.$popover) {\n            target.$popover = instantiate(Vue, Popover, deepExtend(options.popover, {\n                propsData: {\n                    target: target\n                }\n            }));\n\n            target.$popover.$mount(\n                document.body.appendChild(document.createElement('div'))\n            );\n\n            const content = instantiate(Vue, Component, options.content);\n\n            target.$popover.$slots.default = [content.$mount()._vnode];\n            target.$popover.$nextTick(() => {\n                target.$popover.open();\n            });\n        }\n\n        return target.$popover;\n    };\n}\n","import { each } from './Helpers/Functions';\nimport * as components from './Components';\nimport * as directives from './Directives';\nimport * as plugins from './Plugins';\n\nconst Vue = window.Vue;\n\nif(!Vue) {\n    throw Error(`\n        Vue must be installed before you can install Vue Interface. Be sure to\n        include the following before install.js script tag:\n\n        <script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\n    `);\n}\n\neach(components, (component, key) => {\n    Vue.component(key, component);\n});\n\neach(directives, (directive, key) => {\n    Vue.directive(key, directive);\n});\n\neach(plugins, plugin => {\n    Vue.use(plugin);\n});\n","import './install';\n\n/*\nexport * from './Http';\nexport * from './Mixins';\nexport * from './Helpers';\nexport * from './Plugins';\nexport * from './Components';\nexport * from './Directives';\nexport * from './Filters';\n*/\n"],"names":["extend","args","Object","assign","isNull","value","isArray","Array","isObject","deepExtend","target","sources","length","source","shift","key","isNumber","toString","isNumeric","match","parseFloat","each","subject","fn","i","first","array","undefined","matches","properties","isString","get","object","path","split","reduce","a","b","property","isFunction","Function","matchesProperty","predicate","find","filter","findIndex","isBoolean","isUndefined","kebabCase","str","replace","toLowerCase","mapKeys","mapped","pickBy","remove","indexes","push","indexOf","height","isFinite","prefix","delimeter","prefixer","string","RegExp","join","props","variant","type","String","default","computed","variantClassPrefix","$options","name","variantClass","methods","mergeClasses","classes","slice","call","arguments","arg","concat","duration","el","getComputedStyle","transitionDuration","numeric","unit","transition","Promise","resolve","reject","delay","setTimeout","e","BaseClass","constructor","attributes","setAttribute","getAttribute","hasOwnProperty","getAttributes","getOwnPropertyNames","forEach","getPublicAttributes","keys","obj","setAttributes","values","Response","data","date","Date","$data","error","$error","request","$request","$date","success","status","failed","DEFAULTS","transformRequest","transformResponse","Request","method","url","options","headers","params","send","sentAt","axios","then","response","cancel","$cancel","Error","cancelToken","CancelToken","$response","passed","transform","defaults","make","post","put","patch","delete","Model","$key","$files","files","$properties","initialize","$exists","$changed","$attributes","fill","$initialized","endpoint","uri","exists","id","set","getChangedAttributes","getOriginalValue","getRequest","getUnchangedAttributes","handleAttributeChange","revert","hasChanged","hasFiles","count","total","carry","File","FileList","toJSON","handlePrimaryKeyChange","save","config","toFormData","form","FormData","item","JSON","stringify","append","toJson","search","model","errors","size","validate","sizeableClassPrefix","sizeableClass","colorableClasses","$attrs","srOnly","Boolean","srOnlyFocusable","screenreaderClasses","inheritAttrs","mixins","Colorable","MergeClasses","label","Number","group","feedback","bindEvents","defaultControlClass","hideLabel","spacing","inline","helpText","maxlength","directives","bind","binding","vnode","addEventListener","event","classList","add","context","$emit","blur","getInputField","focus","$el","querySelector","getFieldErrors","controlAttributes","controlClasses","controlClass","plaintext","controlSizeClass","invalidFeedback","hasDefaultSlot","$slots","validFeedback","uuid","c","r","Math","random","v","proxy","callback","apply","splice","preventDefault","getSlot","slot","hasSlot","hasSlots","slots","readFile","file","progress","reader","FileReader","onprogress","onload","onerror","onabort","readAsDataURL","animation","show","defaut","Element","trigger","initializeTrigger","toggle","initializeTriggers","document","querySelectorAll","$nextTick","isShowing","open","isDisplaying","close","triggerableClasses","watch","mounted","Transformer","$originalResponse","$required","required","$transformedResponse","TableViewTransformer","STYLE_ATTRIBUTES","int","parseInt","input","div","innerHTML","getBoundingClientRect","style","attr","window","resize","minHeight","maxHeight","dynamicHeight","max","mimic","createElement","styles","position","bottom","zIndex","visibility","init","body","appendChild","inserted","tagName","$collapsedHeight","hide","elements","element","contains","expression","editable","update","dispatchEvent","Event","$watch","InputEvent","o","instantiate","Vue","Component","text","functional","render","h","_v","prototype","$modal","instance","Modal","modal","$content","content","$mount","_vnode","$alert","title","propsData","$on","$confirm","$prompt","succeed","fail","$overlay","Overlay","overlay","$popover","Popover","popover","components","component","directive","plugins","plugin","use"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAAA;;;IAjDA,YAAY;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgDA;;;;;;;;;;;;;;;;;;;;;;;;;;;KAAA;;;IAjDA,YAAY;IACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMA;;;;;;;;;;;;;;;;;;KAAA;;;IAPA,YAAY;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAAA;;;IAPA,YAAY;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAAA;;;IApDA,YAAY;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}