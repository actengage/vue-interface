{"version":3,"file":"vue-interface.min.js","sources":["../src/Components/Dropzone/Dropzone.vue","../src/Components/Dropzone/index.js","../src/Components/FilePreview/FilePreview.vue","../src/Components/FilePreview/index.js","../src/Components/FormControl/FormControl.vue","../src/Components/FormControl/index.js","../node_modules/intersection-observer/intersection-observer.js","../src/Components/InfiniteScrolling/InfiniteScrolling.vue","../src/Components/InputGroup/InputGroupText.vue","../src/Components/InputGroup/InputGroupPrepend.vue","../src/Components/InputGroup/InputGroup.vue","../src/Components/InputGroup/index.js","../src/Components/LightSwitchField/LightSwitchField.vue","../src/Components/LightSwitchField/index.js","../src/Components/ListGroup/ListGroupItem.vue","../src/Components/ListGroup/ListGroup.vue","../src/Components/ListGroup/index.js","../src/Components/Navbar/NavbarBrand.vue","../src/Components/Navbar/NavbarCollapse.vue","../src/Components/Navbar/NavbarToggler.vue","../src/Components/Navbar/Navbar.vue","../src/Components/Navigation/NavigationError.vue","../src/Components/Navigation/NavigationLink.vue","../src/Components/Navigation/NavigationItem.vue","../src/Components/Navigation/Navigation.vue","../src/Components/Navigation/NavigationDropdown.vue","../src/Components/Navigation/index.js","../src/Components/Navbar/index.js","../src/Components/Pagination/Pagination.vue","../src/Components/Pagination/index.js","../src/Components/SelectField/SelectField.vue","../src/Components/SlideDeck/Slides.vue","../src/Components/SlideDeck/SlideDeckControls.vue","../src/Components/SlideDeck/SlideDeck.vue","../src/Components/RadioField/index.js","../src/Components/CheckboxField/CheckboxField.vue","../src/Components/CheckboxField/index.js","../src/Components/InputGroup/InputGroupAppend.vue","../src/Components/Navbar/NavbarText.vue","../src/Components/Navbar/NavbarTogglerIcon.vue","../src/Components/Navbar/NavbarNav.vue","../src/Components/SelectField/index.js"],"sourcesContent":["<template>\n\n    <div class=\"dropzone\" :class=\"{'is-dragging': isDragging}\" @drop.prevent=\"onDrop\" @dragover.prevent=\"onDragover\" @dragenter.prevent=\"onDragenter\" @dragleave.prevent=\"onDragleave\">\n        <slot name=\"placeholder\">\n            <div class=\"dropzone-placeholder text-center\">\n                <card>\n                    <card-body>\n                        <h1 class=\"mt-4\">Drag & Drop</h1>\n                        <p>Drag and drop your files here to upload them!</p>\n                        <div class=\"mt-3\"><i class=\"fa fa-image\"/></div>\n                    </card-body>\n                </card>\n            </div>\n        </slot>\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport Card from '../Card';\nimport CardBody from '../Card/CardBody';\n\nexport default {\n\n    name: 'dropzone',\n\n    components: {\n        Card,\n        CardBody\n    },\n\n    methods: {\n\n        onDrop(event) {\n            this.isDragging = false;\n            this.$emit('drop', event);\n        },\n\n        onDragover(event) {\n            this.isDragging = true;\n            this.$emit('dragover', event);\n        },\n\n        onDragenter(event) {\n            this.isDragging = true;\n            this.$emit('dragenter', event);\n            this.onDragover(event);\n        },\n\n        onDragleave(event) {\n            this.isDragging = false;\n            this.$emit('dragleave', event);\n        }\n\n    },\n\n    data() {\n        return {\n            files: null,\n            isDragging: false\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.dropzone {\n    position: relative;\n\n    p {\n        font-size: 18px;\n    }\n\n    .fa-image {\n        font-size: 100px;\n    }\n\n    .dropzone-placeholder {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        width: 100%;\n        height: 100%;\n        background: white;\n    }\n\n    &.is-dragging .dropzone-placeholder {\n        display: block;\n    }\n}\n</style>\n","import Dropzone from './Dropzone';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Dropzone\n        });\n    }\n\n});\n\nexport default Dropzone;\n","<template>\n\n    <div class=\"file-preview\" :class=\"{'has-image': !!image}\">\n\n        <div class=\"file-preview-inner\">\n\n            <a v-if=\"!hideClose\" href=\"#\" class=\"file-preview-close\" @click.prevent=\"$emit('close', file)\">\n                <i class=\"fa fa-times-circle\"></i>\n            </a>\n\n            <div v-if=\"!!poster || isImage\" class=\"file-preview-image\">\n                <img v-if=\"!!poster || !!image\" :src=\"poster || image\" class=\"file-preview-thumbnail\" @load=\"onLoad\"/>\n            </div>\n\n            <div v-else v-ready=\"() => this.$emit('loaded')\" class=\"file-preview-icon\">\n                <i class=\"fa\" :class=\"{'fa-file-video-o': isVideo, 'fa-file-o': !isVideo}\"></i>\n            </div>\n\n            <progress-bar\n                v-if=\"progress || isImage && loaded !== false\"\n                v-ready=\"readFile\"\n                :value=\"progress || loaded || 0\"\n                :height=\"10\"\n                class=\"mt-3\"/>\n\n            <div class=\"file-preview-filename\" v-html=\"name\"></div>\n            <div class=\"file-preview-filesize\">({{size}})</div>\n        <div>\n\n    </div>\n\n</template>\n\n<script>\nimport moment from 'moment';\nimport ProgressBar from '../ProgressBar';\nimport { isFunction } from '../../Helpers/Functions';\nimport readFile from '../../Helpers/ReadFile/ReadFile';\n\nexport default {\n\n    name: 'file-preview',\n\n    components: {\n        ProgressBar\n    },\n\n    directives: {\n        ready: {\n            inserted(el, binding, vnode) {\n                if(isFunction(binding.value)) {\n                    vnode.context.$nextTick(binding.value);\n                }\n            }\n        }\n    },\n\n    props: {\n\n        /**\n         * Hide the close button for the preview\n         *\n         * @property Object\n         */\n        hideClose: Boolean,\n\n        /**\n         * The uploaded File object\n         *\n         * @property Object\n         */\n        file: {\n            type: [Object, File],\n            required: true\n        },\n\n        /**\n         * An image URL to instead of using the file reader.\n         * @property {String}\n         */\n        poster: String,\n\n        /**\n         * Progress that can be passed from a parent comparent, for instance\n         * use to show an ajax request with a single progress bar. If a progress\n         * value is passed, even a 0, the progress bar will not be used to show\n         * the progress of the file reader.\n         * @property {Number}\n         */\n        progress: {\n            type: Number,\n            default: undefined\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * Get the file name\n         *\n         * @property String\n         */\n        name() {\n            return this.file instanceof File ? this.file.name : this.file.orig_filename;\n        },\n\n        /**\n         * Get the file extension\n         *\n         * @property String\n         */\n        extension() {\n            return this.file instanceof File ? this.file.name.split('.').pop().toLowerCase() : this.file.extension;\n        },\n\n        /**\n         * Get the file formatted size\n         *\n         * @property String\n         */\n        size() {\n            return this.bytesToSize(this.file.size);\n        },\n\n        /**\n         * Get the file type\n         *\n         * @property String\n         */\n        type() {\n            return this.file instanceof File ? this.file.type : this.file.mime;\n        },\n\n        /**\n         * Check to see if the file is an image.\n         *\n         * @property String\n         */\n        isImage() {\n            return !!this.type.match(/^image/);\n        },\n\n        /**\n         * Check to see if the file is a video.\n         *\n         * @property String\n         */\n        isVideo() {\n            return !!this.type.match(/^video/);\n        },\n\n        /**\n         * Get the last time the file was modified (as timestamp)\n         *\n         * @property String\n         */\n        lastModified() {\n            return this.file instanceof File ? this.file.lastModified : null;\n        },\n\n        /**\n         * Get the last time the file was modified (as Date)\n         *\n         * @property String\n         */\n        lastModifiedDate() {\n            return this.file instanceof File ? this.file.lastModifiedDate : null;\n        }\n\n    },\n\n    methods: {\n\n        readFile() {\n            if(this.file instanceof File) {\n                const start = moment();\n\n                this.loaded = 0;\n\n                this.$nextTick(() => {\n                    readFile(this.file, e => {\n                        if(e.lengthComputable) {\n                            this.$emit('progress', this.loaded = parseInt((e.loaded / e.total) * 100, 10));\n                        }\n                    }).then(event => {\n                        this.$emit('read', event);\n\n                        setTimeout(() => {\n                            this.image = event.target.result;\n                            this.$nextTick(() => {\n                                this.loaded = false;\n                            });\n                        }, 500 - moment().diff(start));\n                    }, error => {\n                        this.$emit('error', error);\n                    });\n                });\n            }\n        },\n\n    \tbytesToSize: function(bytes) {\n    \t\tvar sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    \t\tif (bytes == 0) return '0 Byte';\n    \t\tvar i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    \t\treturn Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n    \t},\n\n        onLoad(event) {\n            this.$emit('loaded');\n        }\n\n    },\n\n    data() {\n        return {\n            image: this.file.url,\n            loaded: this.file instanceof File ? 0 : false,\n        };\n    }\n\n}\n\n</script>\n\n<style lang=\"scss\">\n$file-preview-close-width: 1rem * 2;\n$file-preview-close-height: 1rem * 2;\n\n.file-preview {\n    width: 100%;\n\n    .file-preview-inner {\n        position: relative;\n    }\n\n    .file-preview-close {\n        top: 0;\n        right: 0;\n        padding: 0;\n        width: 24px;\n        height: 24px;\n        background: white;\n        position: absolute;\n        border-radius: 100%;\n        transform: translate(33%, -33%);\n\n        i {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            font-size: 24px;\n            text-align: center;\n        }\n    }\n\n    .file-preview-icon {\n        text-align: center;\n        font-size: 60px;\n        padding: 1rem;\n    }\n\n    .file-preview-thumbnail {\n        width: 100%;\n        max-width: 100%;\n    }\n\n    .file-preview-filename {\n        overflow: hidden;\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .file-preview-filename,\n    .file-preview-filesize {\n        text-align: center;\n    }\n\n}\n\n</style>\n","import FilePreview from './FilePreview';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FilePreview\n        });\n    }\n\n});\n\nexport default FilePreview;\n","<template>\n\n    <component\n        :name=\"name\"\n        :id=\"id\"\n        :is=\"!select ? 'input' : 'select'\"\n        :type=\"!select ? type : false\"\n        :value=\"value\"\n        :pattern=\"pattern\"\n        :required=\"required\"\n        :readonly=\"readonly\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled || readonly\"\n        :class=\"mergeClasses(controlClasses, colorableClasses)\"\n        :aria-label=\"label\"\n        :aria-describedby=\"id\"\n        v-bind-events=\"bindEvents\"/>\n\n</template>\n\n<script>\n\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'form-control',\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Is the element a select?\n         *\n         * @property String\n         */\n        select: Boolean,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n}\n\n</script>\n","import FormControl from './FormControl';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormControl\n        });\n    }\n\n});\n\nexport default FormControl;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","<template>\n    <div class=\"infinite-scrolling\" :style=\"{height: heightUnit, background: background}\">\n        <activity-indicator v-if=\"activity\" :size=\"size\" :type=\"type\" center/>\n    </div>\n</template>\n\n<script>\nimport 'intersection-observer';\nimport unit from '../../Helpers/Unit';\nimport ActivityIndicator from '../ActivityIndicator';\n\nexport default {\n\n    name: 'infinite-scrolling',\n\n    components: {\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Is the activity indicator showing\n         *\n         * @property String\n         */\n        activity: Boolean,\n\n        /**\n         * The activity indicator background style\n         *\n         * @property String\n         */\n        background: String,\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        height: {\n            type: Number,\n            default: 100\n        },\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        size: String,\n\n        /**\n         * The activity indicator type\n         *\n         * @property String\n         */\n        type: String,\n\n        /**\n         * The scroll observer threshold for when an element is considered\n         * into view. Must be a validate between 0 and 1, and is a percentage.\n         *\n         * @property Number\n         */\n        threshold: {\n            type: Number,\n            default: .75,\n            validate(value) {\n                return value >= 0 && value <= 1;\n            }\n        }\n\n    },\n\n    methods: {\n\n        scrollIntoViewport(entry) {\n            this.$emit('scroll:in', entry);\n\n            if(!this.activity) {\n                this.$emit('load', entry);\n            }\n        },\n\n        scrollOutViewport(entry) {\n            this.$emit('scroll:out', entry);\n        }\n\n    },\n\n    computed: {\n\n        heightUnit() {\n            return unit(this.height);\n        }\n\n    },\n\n    mounted() {\n        this.$nextTick(() => {\n            new IntersectionObserver((entries, observer) => {\n                entries.forEach(entry => {\n                    if(entry.isIntersecting && !this.hasScrolledIntoViewport) {\n                        this.scrollIntoViewport(entry, observer);\n                        this.hasScrolledIntoViewport = true;\n                    }\n                    else if(this.hasScrolledIntoViewport) {\n                        this.scrollOutViewport(entry, observer);\n                        this.hasScrolledIntoViewport = false;\n                    }\n                });\n            }, {\n                threshold: this.threshold\n            }).observe(this.$el);\n        });\n    },\n\n    data() {\n        return {\n            hasScrolledIntoViewport: false\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.infinite-scrolling {\n    position: relative;\n\n}\n</style>\n","<template>\n\n    <span class=\"input-group-text\" :id=\"id\">\n        <slot>{{ text }}</slot>\n    </span>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-text',\n\n    props: {\n\n        /**\n         * The id attribute\n         *\n         * @property String\n         */\n        id: String,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: [Array, Number, String]\n\n    }\n\n}\n\n</script>\n","<template>\n\n    <div class=\"input-group-prepend\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-prepend',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n}\n\n</script>\n","<template>\n\n    <div class=\"input-group\" :class=\"mergeClasses(colorableClasses, sizeableClass)\">\n\n        <slot name=\"prepend\">\n            <template v-if=\"prepend instanceof Array\">\n                <input-group-prepend>\n                    <input-group-text v-for=\"value in prepend\" :text=\"value\"/>\n                </input-group-prepend>\n            </template>\n            <template v-else-if=\"prepend\">\n                <input-group-prepend text>{{prepend}}</input-group-prepend>\n            </template>\n        </slot>\n\n        <slot/>\n\n        <slot name=\"append\">\n            <template v-if=\"append instanceof Array\">\n                <input-group-append>\n                    <input-group-text v-for=\"value in append\" :text=\"value\"/>\n                </input-group-append>\n            </template>\n            <template v-else-if=\"append\">\n                <input-group-append text>{{append}}</input-group-append>\n            </template>\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Sizeable from '../../Mixins/Sizeable';\nimport InputGroupText from './InputGroupText';\nimport Colorable from '../../Mixins/Colorable';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'input-group',\n\n    components: {\n        InputGroupText,\n        InputGroupAppend,\n        InputGroupPrepend\n    },\n\n    mixins: [\n        HasSlots,\n        Sizeable,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        append: [Array, Number, String],\n\n        prepend: [Array, Number, String]\n\n    }\n\n}\n\n</script>\n","import InputGroup from './InputGroup';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport InputGroupText from './InputGroupText';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            InputGroup,\n            InputGroupAppend,\n            InputGroupPrepend,\n            InputGroupText\n        });\n    }\n\n});\n\nexport * from './InputGroupAppend';\nexport * from './InputGroupPrepend';\nexport * from './InputGroupText';\nexport default InputGroup;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\" />\n        </slot>\n\n        <div :class=\"controlClasses\" tabindex=\"0\" @click=\"toggle()\" @keyup.32=\"toggle()\" @keyup.37=\"toggle(offValue)\" @keyup.39=\"toggle(onValue)\">\n            <div class=\"light-switch-handle\"></div>\n        \t<div class=\"light-switch-container\">\n        \t\t<div class=\"light-switch-label on-value\"></div>\n        \t\t<div class=\"light-switch-label off-value\"></div>\n        \t</div>\n        </div>\n\n        <form-control :name=\"name\" :value=\"value\" :id=\"id\" class=\"d-none\"/>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport { isUndefined } from '../../Helpers/Functions';\nimport FormControl from '../FormControl';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nexport default {\n\n    name: 'light-switch-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormControl,\n        FormFeedback\n    },\n\n    mixins: [\n        FormControlMixin\n    ],\n\n    props: {\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control light-switch'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        activeClass: {\n            type: String,\n            default: 'on'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        onValue: {\n            default: 1\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        offValue: {\n            default: 0\n        }\n\n    },\n\n    computed: {\n\n        isActive: function() {\n            return this.value === this.onValue;\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : ''),\n                (this.dragging ? 'is-dragging' : ''),\n                (this.isActive ? 'is-active' : '')\n            ].join(' ');\n        }\n\n    },\n\n    methods: {\n\n        getTransitionInMilliseconds() {\n            const duration = getComputedStyle(this.$el.querySelector('.light-switch-handle')).transitionDuration;\n            const numeric = parseFloat(duration, 10);\n            const unit = duration.match(/m?s/);\n\n            switch (unit[0]) {\n                case 's':\n                    return numeric * 1000;\n                case 'ms':\n                    return numeric;\n\n            }\n\n            throw new Error(`\"${unit[0]}\" is not a valid unit of measure. Unit must be \"s\" (seconds) or \"ms\" (milliseconds).`);\n        },\n\n        toggle(value) {\n            this.$emit('input', !isUndefined(value) ? value : (this.isActive ? this.offValue : this.onValue));\n        }\n\n    },\n\n    watch: {\n        value() {\n            this.dragging = true;\n\n            setTimeout(() => {\n                this.dragging = false;\n            }, this.getTransitionInMilliseconds());\n        }\n    },\n\n    data() {\n        return {\n            dragging: false\n        };\n    }\n\n}\n\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n@import './node_modules/bootstrap/scss/mixins.scss';\n\n$light-switch-animation-easing: ease;\n$light-switch-animation-length: 1s / 3;\n$light-switch-handle-width: $font-size-base * 2;\n$light-switch-handle-height: $light-switch-handle-width;\n$light-switch-size-width: $light-switch-handle-width * 1.5;\n$light-switch-size-height: $light-switch-handle-height;\n$light-switch-label-width: $light-switch-handle-width;\n$light-switch-label-height: $light-switch-handle-height;\n\n@mixin light-switch-size($size, $modifier) {\n    $handle-width: $light-switch-handle-width * $modifier;\n    $handle-height: $handle-width;\n    $size-width: $handle-width * 1.5;\n    $size-height: $handle-height;\n    $label-width: $handle-width;\n    $label-height: $handle-height;\n\n    &.light-switch-#{$size} {\n        padding: 0;\n    \twidth: $size-width;\n    \theight: $handle-height;\n    \tborder-radius: $handle-width;\n\n        .light-switch-handle {\n            width: $handle-width;\n            height: $handle-height;\n        }\n\n        .light-switch-container {\n            left: -$handle-width / 2;\n            width: $label-width * 2;\n            height: $label-height;\n        }\n\n        &.is-active {\n            .light-switch-handle {\n                left: $handle-width / 2;\n            }\n        }\n\n        .light-switch-label {\n            width: $label-width;\n            height: $label-height;\n\n            &.on-value {\n                //border-radius: $handle-width 0 0 $handle-width;\n            }\n\n            &.off-value {\n                //border-radius: 0 $handle-width $handle-width 0;\n            }\n        }\n    }\n}\n\n.light-switch {\n    padding: 0;\n\tposition: relative;\n\tborder: none;\n\twidth: $light-switch-size-width;\n\theight: $light-switch-handle-height;\n\tborder-radius: $light-switch-handle-width;\n\toverflow: hidden;\n\tcursor: pointer;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\toverflow: hidden;\n\n    @include light-switch-size('xs', .5);\n    @include light-switch-size('sm', .75);\n    @include light-switch-size('md', 1);\n    @include light-switch-size('lg', 1.5);\n    @include light-switch-size('xl', 2);\n\n    @include form-validation-state(\"valid\", $form-feedback-valid-color);\n    @include form-validation-state(\"invalid\", $form-feedback-invalid-color);\n\n    &.is-invalid {\n        border: 1px solid $form-feedback-invalid-color;\n\n        & .light-switch-handle {\n\n\n        }\n\n        &:not(.is-active) .light-switch-handle {\n            background: $form-feedback-invalid-color;\n        }\n\n        .light-switch-label {\n            &.on-value {\n                left: 0;\n            }\n            &.off-value {\n                right: 0;\n            }\n        }\n    }\n\n    .light-switch-handle {\n        top: 0;\n        left: 0;\n        z-index: 1;\n        position: absolute;\n        border-radius: 100%;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n        width: $light-switch-handle-width;\n        height: $light-switch-handle-height;\n        background: white;\n        background-image: radial-gradient(white, rgb(250, 250, 250) 50%, white 75%);\n        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.1);\n    }\n\n    .light-switch-container {\n        position: relative;\n        left: -$light-switch-handle-width / 2;\n        top: ($light-switch-handle-height -  $light-switch-label-height) / 2;\n        width: $light-switch-label-width * 2;\n        height: $light-switch-label-height;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n    }\n\n    &:not(.is-active) {\n        &:not(.is-dragging) .on-value {\n            visibility: hidden;\n        }\n    }\n\n    &.is-active {\n        &:not(.is-dragging) .off-value {\n            visibility: hidden;\n        }\n\n        .light-switch-handle {\n            left: $light-switch-handle-width / 2;\n        }\n\n        .light-switch-container {\n            left: 0;\n        }\n    }\n\n    .light-switch-label {\n        position: absolute;\n        width: $light-switch-label-width;\n        height: $light-switch-label-height;\n        //box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n\n        &.on-value {\n            left: 0;\n            background: #00b007;\n            //border-radius: $light-switch-handle-width 0 0 $light-switch-handle-width;\n        }\n\n        &.off-value {\n            right: 0;\n            background: #ebedef;\n            //border-radius: 0 $light-switch-handle-width $light-switch-handle-width 0;\n        }\n    }\n\n\n}\n\n</style>\n","import LightSwitchField from './LightSwitchField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            LightSwitchField\n        });\n    }\n\n});\n\nexport default LightSwitchField;\n","<template>\n    <router-link v-if=\"to\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </router-link>\n    <a v-elseif=\"href\" :href=\"href\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </a>\n    <button v-else-if=\"action\" type=\"button\" :class=\"classes\" @click.prevent=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </button>\n    <div v-else :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </div>\n</template>\n\n<script>\n\nimport { isObject } from '../../Helpers/Functions';\nimport Badge from '../Badge';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        Badge\n    },\n\n    props: {\n\n        /**\n         * The badge label (if number or string) or object of options to pass to\n         * the component.\n         *\n         * @property String|Object\n         */\n        badge: [Number, String, Object],\n\n        /**\n         * The list group item href attribute.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The list group item variant.\n         *\n         * @property String\n         */\n        variant: String,\n\n        /**\n         * Optionally pass the item as a object to use programmatically later.\n         *\n         * @property String\n         */\n        item: Object,\n\n        /**\n         * The list group item an action, or clickable item.\n         *\n         * @property Boolean\n         */\n        action: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item active.\n         *\n         * @property Boolean\n         */\n        active: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item disabled.\n         *\n         * @property Boolean\n         */\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list item label.\n         *\n         * @property Object\n         */\n        label: {\n            type: [Number, String],\n            value: null\n        },\n\n        /**\n         * The to attribute to be passed to a <router-link> component.\n         *\n         * @property String\n         */\n        to: [String, Object]\n\n    },\n\n    computed: {\n\n        classes() {\n            const classes = prefix({\n                'action': this.action,\n            }, 'list-group-item');\n\n            classes['list-group-item'] = true;\n            classes['active'] = this.active;\n            classes['disabled'] = this.disabled;\n\n            if(this.variant) {\n                classes[prefix(this.variant, 'list-group-item')] = true;\n            }\n\n            return classes;\n        },\n\n        badgeOptions() {\n            return isObject(this.badge) ? this.badge : {\n                label: this.badge\n            };\n        }\n\n    },\n\n    watch: {\n\n        active(value, prevValue) {\n            this.$emit('toggle', value);\n            this.$emit(!!value ? 'activate' : 'deactivate');\n        }\n\n    },\n\n\n}\n\n</script>\n","<template>\n    <div class=\"list-group\" :class=\"classes\">\n        <slot/>\n    </div>\n</template>\n\n<script>\n\nimport { each } from '../../Helpers/Functions';\nimport ListGroupItem from './ListGroupItem';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        ListGroupItem\n    },\n\n    props: {\n\n        /**\n         * The list group appear flush (without some borders).\n         *\n         * @property Boolean\n         */\n        flush: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Can activate multiple list items\n         *\n         * @property Boolean\n         */\n        multiple: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    computed: {\n        classes() {\n            return prefix({\n                'flush': this.flush\n            }, 'list-group');\n        }\n    },\n\n    methods: {\n\n        bindEventsToChildren() {\n            each(this.$children, child => {\n                child.$off('click', event => this.onClickItem(event, child));\n                child.$on('click', event => this.onClickItem(event, child));\n            });\n        },\n\n        /**\n         * The callback function for the `click` event.\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * The callback function for the child `click` events.\n         *\n         * @return void\n         */\n        onClickItem(event, child) {\n            this.$emit('item:click', event, child);\n        },\n\n    },\n\n    mounted() {\n        this.bindEventsToChildren();\n    },\n\n    updated() {\n        this.bindEventsToChildren();\n    }\n\n}\n\n</script>\n","import ListGroup from './ListGroup';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            ListGroup\n        });\n    }\n\n});\n\nexport default ListGroup;\n","<template>\n    <component class=\"navbar-brand\" :class=\"{'h1': h1}\" :is=\"component\" :to=\"to\" :href=\"href || to ? '#' : null\">\n        <img v-if=\"src\" class=\"d-inline-block align-center\" :src=\"src\" :width=\"unit(width)\" :height=\"unit(height)\" :alt=\"alt\"/>\n        <slot/>\n    </component>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\n\nexport default {\n\n    props: {\n\n        /**\n         * The img `alt` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        alt: String,\n\n        /**\n         * The HTML wrapping tag.\n         *\n         * @property Object\n         */\n        tag: String,\n\n        /**\n         * The img `width` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        width: [Number, String],\n\n        /**\n         * The img `height` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        height: [Number, String],\n\n        /**\n         * The `to` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        to: [Object, String],\n\n        /**\n         * The `href` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * Append the `h1` class to increase the display size\n         *\n         * @property Object\n         */\n        h1: Boolean,\n\n        /**\n         * If a `src` attribute is passed, then use it to add an img tag\n         *\n         * @property Object\n         */\n        src: String,\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : (this.href ? 'a' : 'span'));\n        }\n\n    },\n\n    methods: {\n        unit(value) {\n            return unit(value);\n        }\n    }\n\n}\n\n</script>\n","<template>\n    <div class=\"navbar-collapse\" id=\"navbarCollapse\" :class=\"{'collapse': collapse}\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-collapse',\n\n    props: {\n\n        collapse: {\n            type: Boolean,\n            default: true\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <button\n        type=\"button\"\n        class=\"navbar-toggler\"\n        data-toggle=\"collapse\"\n        :data-target=\"target\"\n        :aria-controls=\"target\"\n        :aria-expanded=\"expanded\"\n        :aria-label=\"label\"\n        @click=\"onClick\">\n        <slot><navbar-toggler-icon/></slot>\n    </button>\n</template>\n\n<script>\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\n\nexport default {\n\n    name: 'navbar-toggler',\n\n    components: {\n        NavbarTogglerIcon\n    },\n\n    props: {\n\n        expanded: Boolean,\n\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n\n        target: {\n            type: String,\n            default: '.navbar-collapse'\n        }\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n}\n\n</script>\n","<template>\n    <nav :class=\"classes\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport { each } from '../../Helpers/Functions';\nimport { isBoolean } from '../../Helpers/Functions';\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport Colorable from '../../Mixins/Colorable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'navbar',\n\n    components: {\n        NavbarBrand,\n        NavbarCollapse,\n        NavbarText,\n        NavbarToggler,\n        NavbarTogglerIcon\n    },\n\n    mixins: [\n        Variant,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Expand the navbar. If true, applies to all size, otherwise pass a string.\n         *\n         * @property Object\n         */\n        expand: {\n            type: [Boolean, String],\n            default: 'lg',\n            validate(value) {\n                ['xs', 'sm', 'md', 'lg', 'xl'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be fixed at the top.\n         *\n         * @property String\n         */\n        fixed: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be stickied at the top.\n         *\n         * @property String\n         */\n        sticky: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The variant attribute\n         *\n         * @property String\n         */\n        variant: {\n            type: String,\n            default: 'light',\n            validate(value) {\n                return ['light', 'dark'].indexOf(value) !== -1;\n            }\n        }\n\n    },\n\n    computed: {\n\n        expandedClass() {\n            if(isBoolean(this.expand)) {\n                return this.expand;\n            }\n\n            return prefix(prefix(this.expand, 'expand'), 'navbar');\n        },\n\n        classes() {\n            return this.mergeClasses(\n                'navbar',\n                prefix(this.sticky === true ? 'top' : this.sticky, 'sticky'),\n                prefix(this.fixed === true ? 'top' : this.fixed, 'fixed'),\n                this.expandedClass,\n                this.variantClass,\n                this.colorableClasses\n            );\n        }\n    },\n\n    data() {\n        return {}\n    }\n\n}\n\n</script>\n","<template>\n    <span class=\"navigation-error fa-stack fa-md\" :title=\"error\">\n        <i class=\"fa fa-stack-2x fa-certificate\"/>\n        <i class=\"fa fa-stack-1x fa-exclamation fa-inverse\"/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navigation-error',\n\n    props: {\n\n        error: {\n            type: String,\n            required: true\n        }\n\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/_functions.scss';\n@import './node_modules/bootstrap/scss/_variables.scss';\n\n.navigation-error {\n    color: $danger;\n}\n</style>\n","<template>\n    <component :is=\"component\" :href=\"href || (to ? '#' : null)\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n        <navigation-error v-if=\"error\" :error=\"error\"/>\n    </component>\n</template>\n\n<script>\nimport NavigationError from './NavigationError';\n\nexport default {\n\n    name: 'navigation-link',\n\n    components: {\n        NavigationError\n    },\n\n    props: {\n\n        /**\n         * Is the navigation item active\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * Is the navigation item disabled\n         *\n         * @prop {Boolean}\n         */\n        disabled: Boolean,\n\n        /**\n         * The error string.\n         *\n         * @prop {String}\n         */\n        error: String,\n\n        /**\n         * The href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * The component HTML tag\n         *\n         * @prop {String}\n         */\n        tag: String,\n\n        /**\n         * The to attribute, will be passed to router-link.\n         *\n         * @prop {String}\n         */\n        to: [Object, String],\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : 'a');\n        },\n\n        classes() {\n            this.$nextTick(() => {\n                if(!this.isItem) {\n                    this.isItem = !this.$parent.$el.classList.contains('nav-item');\n                }\n            });\n\n            return {\n                'nav-link': !!this.href || !!this.to,\n                'nav-item': !!this.item,\n                'active': this.active,\n                'disabled': this.disabled\n            }\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <component :is=\"component\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n    </component>\n</template>\n\n<script>\nimport NavigationLink from './NavigationLink';\n\nexport default {\n\n    name: 'navigation-item',\n\n    extends: NavigationLink,\n\n    props: {\n\n        /**\n         * The HTML element\n         *\n         * @prop {String}\n         */\n        element: String,\n\n        /**\n         * Is the component a list element\n         *\n         * @prop {Boolean}\n         */\n        list: Boolean,\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n\n    computed: {\n\n        component() {\n            if(this.element) {\n                return this.element;\n            }\n            else if(this.href) {\n                return 'a';\n            }\n            else if(this.list) {\n                return 'li';\n            }\n\n            return 'div';\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <nav class=\"nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'navigation',\n\n    components: {\n        NavigationItem\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Helper to add the justify-content-X class.\n         *\n         * @prop {Array}\n         */\n        align: String,\n\n        /**\n         * An array of buttons\n         *\n         * @prop {Array}\n         */\n        buttons: Array,\n\n        /**\n         * The navigation inside a card\n         *\n         * @prop {Boolean}\n         */\n        card: Boolean,\n\n        /**\n         * Justify nav items to fill the width equally (using flex).\n         *\n         * @prop {Array}\n         */\n        fill: Boolean,\n\n        /**\n         * Add `nav-justified` class to the component.\n         *\n         * @prop {Array}\n         */\n        justified: Boolean,\n\n        /**\n         * Display items as pill shapes\n         *\n         * @prop {Array}\n         */\n        pills: Boolean,\n\n        /**\n         * Display items as tab shapes\n         *\n         * @prop {Array}\n         */\n        tabs: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @prop {Boolean}\n         */\n        vertical: Boolean,\n\n        /**\n         * The role attribute\n         *\n         * @prop {String}\n         */\n        role: String\n\n    },\n\n    computed: {\n\n        classes() {\n            this.$nextTick(() => {\n                if(!this.isCard) {\n                    this.isCard = this.$parent.$el.classList.contains('card-header');\n                }\n            });\n\n            return this.mergeClasses(\n                prefix(this.align, 'justify-content'),\n                this.colorableClasses, {\n                    'card-header-tabs': this.isCard && this.tabs,\n                    'card-header-pills': this.isCard && this.pills,\n                    'nav-justified': this.justified,\n                    'nav-fill': this.fill,\n                    'nav-pills': this.pills,\n                    'nav-tabs': this.tabs,\n                    'flex-column': this.vertical\n                }\n            );\n        }\n\n    },\n\n    data() {\n        return {\n            isCard: this.card\n        };\n    }\n\n}\n</script>\n","<template>\n\n    <navigation-item class=\"dropdown\">\n\n        <slot name=\"toggle-button\">\n            <navigation-link\n                href=\"#\"\n                class=\"dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                :aria-expanded=\"isDropdownShowing\"\n                @click.native.prevent=\"toggle()\"\n                @blur=\"onBlur\">\n                {{label}}\n            </navigation-link>\n        </slot>\n\n        <slot name=\"dropdown-menu\">\n            <dropdown-menu\n                :id=\"id\"\n                :items=\"items\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </slot>\n\n    </navigation-item>\n\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport DropdownMenu from '../DropdownMenu';\nimport BtnDropdown from '../BtnDropdown';\n\nexport default {\n\n    name: 'navigation-dropdown',\n\n    extends: BtnDropdown,\n\n    components: {\n        BtnDropdown,\n        DropdownMenu,\n        NavigationItem,\n        NavigationLink\n    }\n\n}\n</script>\n","import Navigation from './Navigation';\nimport NavigationError from './NavigationError';\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport NavigationDropdown from './NavigationDropdown';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Navigation,\n            NavigationError,\n            NavigationItem,\n            NavigationLink,\n            NavigationDropdown\n        });\n    }\n\n});\n\nexport default Navigation;\n","import Navbar from './Navbar';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarNav from './NavbarNav';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Navbar,\n            NavbarBrand,\n            NavbarCollapse,\n            NavbarNav,\n            NavbarText,\n            NavbarToggler,\n            NavbarTogglerIcon\n        });\n    }\n\n});\n\nexport default Navbar;\n","<template>\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\" :class=\"classes\">\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage === 1}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Previous\" @click.prevent=\"prev($event)\">\n        \t\t\t<span aria-hidden=\"true\">&laquo;</span>\n        \t\t</a>\n        \t</li>\n            <li v-for=\"item in pages\" :data-page=\"item.page\" class=\"page-item\" :class=\"{'active': item.page === currentPage, 'disabled': !!item.divider}\">\n                <slot :item=\"item\">\n                    <a v-if=\"item.divider\" class=\"page-link\">&hellip;</a>\n                \t<a v-else href=\"#\" class=\"page-link\" :class=\"item.class\" :data-label=\"item.label\" @click.prevent=\"paginate(item.page, $event)\">\n                \t\t<span v-if=\"item.label\" aria-hidden=\"true\" v-html=\"item.label\"></span>\n                \t\t<span v-if=\"item.page\" aria-hidden=\"true\" v-html=\"item.page\"></span>\n                \t</a>\n                </slot>\n            </li>\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage >= totalPages}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Next\" @click.prevent=\"next($event)\">\n        \t\t\t<span aria-hidden=\"true\">&raquo;</span>\n        \t\t</a>\n            </li>\n        </ul>\n    </nav>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'pagination',\n\n    props: {\n        /**\n         * The alignment of the pagination component.\n         *\n         * @prop String\n         */\n        align: {\n            type: String,\n            validate: value => {\n                return ['start', 'end', 'center'].indexOf(value) !== -1;\n            }\n        },\n\n        /**\n         * The page on which the paginator should start.\n         *\n         * @prop String\n         */\n        page: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The total number of pages in the paginator.\n         *\n         * @prop String\n         */\n        totalPages: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The number of pages to show when the total number of pages is\n         * greater than the number of pages that should be shown.\n         *\n         * @prop String\n         */\n        showPages: {\n            type: Number,\n            default: 6\n        }\n        \n    },\n\n    methods: {\n\n        next(event) {\n            this.paginate(this.currentPage >= this.totalPages ? this.currentPage : this.currentPage + 1, event);\n        },\n\n        prev(event) {\n            this.paginate(this.currentPage <= 1 ? this.currentPage : this.currentPage - 1, event);\n        },\n\n        paginate(page, event) {\n            if(event.currentTarget.parentNode.classList.contains('disabled')) {\n                return;\n            }\n\n\t\t\tthis.setActivePage(page);\n\n            this.$emit('paginate', page, event);\n        },\n\n\t\tsetActivePage(page) {\n\t\t\tif(this.currentPage !== page) {\n\t\t\t\tthis.currentPage = page;\n\t\t\t}\n\t\t},\n\n        generate() {\n            const pages = [];\n            const showPages = this.showPages % 2 ? this.showPages + 1: this.showPages;\n\n            let startPage = (this.currentPage >= showPages) ? this.currentPage - (showPages / 2) : 1;\n            const startOffset = showPages + startPage;\n            const endPage = (this.totalPages < startOffset) ? this.totalPages : startOffset;\n            const diff = startPage - endPage + showPages;\n\n            startPage -= (startPage - diff > 0) ? diff : 0;\n\n            if (startPage > 1) {\n                pages.push({page: 1});\n            }\n\n            if(startPage > 2) {\n                pages.push({divider: true});\n            }\n\n            for(let i = startPage; i < endPage; i++) {\n                pages.push({page: i});\n            }\n\n            if (endPage <= this.totalPages) {\n                if(this.totalPages - 1 > endPage) {\n                    pages.push({divider: true});\n                }\n\n                pages.push({page: this.totalPages});\n            }\n\n            return pages;\n        }\n\n    },\n\n    computed: {\n\n        pages() {\n            return this.generate();\n        },\n\n        classes() {\n            const classes = {};\n\n            classes['justify-content-' + this.align] = true;\n\n            return classes;\n        }\n\n    },\n\n    data() {\n        return  {\n            currentPage: this.page\n        };\n    }\n\n};\n</script>\n","import Pagination from './Pagination';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Pagination\n        });\n    }\n\n});\n\nexport default Pagination;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <slot name=\"control\">\n            <select\n                :id=\"id\"\n                :name=\"name\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                @input=\"$emit('input', $event.target.value)\">\n                <slot />\n            </select>\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nconst CUSTOM_SELECT_PREFIX = 'custom-select-'\n\nexport default {\n\n    name: 'select-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    extends: FormControl,\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Add `custom-select` to the form control if true.\n         *\n         * @property String\n         */\n        custom: Boolean\n\n    },\n\n    computed: {\n\n        controlClass() {\n            const controlClass = this.custom ? 'custom-select' : this.defaultControlClass;\n            return this.plaintext ? `${controlClass}-plaintext` : controlClass;\n        },\n\n        customSelectClasses() {\n            return [\n                CUSTOM_SELECT_PREFIX.replace(/\\-$/, '') + (this.plaintext ? '-plaintext' : ''),\n                this.customSelectSizeClass,\n                (this.spacing || '')\n            ].join(' ');\n        }\n    }\n\n}\n</script>\n","<script>\nimport { extend } from '../../Helpers/Functions';\nimport { first } from '../../Helpers/Functions';\nimport { findIndex } from '../../Helpers/Functions';\nimport { isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'slides',\n\n    props: {\n\n        /**\n         * The active slide index or key.\n         *\n         * @type {String|Number}\n         */\n\n        active: {\n            type: [String, Number],\n            default: 0\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Get the HTML nodes from the default slots (exluding children without tags).\n         *\n         * @return {Array}\n         */\n        slides() {\n            return this.$slots.default\n                .filter((vnode, i) => {\n                    return !!vnode.tag;\n                })\n                .map((vnode, i) => {\n                    if(!vnode.key || !vnode.data && !vnode.data.key) {\n                        vnode.data = extend(vnode.data, {\n                            key: vnode.key = i\n                        });\n                    }\n\n                    return vnode;\n                });\n        },\n\n        /**\n         * Get a slide by index.\n         *\n         * @return {Array}\n         */\n        slide(index) {\n            return this.findSlideByKey(index) || this.findSlideByIndex(index) || this.findSlideByIndex(0);\n        },\n\n        /**\n         * Find a slide by a given key or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByKey(key) {\n            return first(this.slides().filter((vnode, i) => {\n                if(vnode.key === key) {\n                    return vnode;\n                }\n                else if(vnode.data && vnode.data.key === key) {\n                    return vnode;\n                }\n\n                return null;\n            }))\n        },\n\n        /**\n         * Find a slide by a given index or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByIndex(index) {\n            return this.slides()[index] || null;\n        },\n\n        /**\n         * Get the slide index for a give slide object or key\n         *\n         * @param  {Number|String} slide\n         * @return {VNode|null}\n         */\n        getSlideIndex(slide) {\n            const key = !isUndefined(slide.data) ? slide.data.key : slide.key || slide;\n\n            return findIndex(this.slides(), (vnode, i) => {\n                if(slide === vnode) {\n                    return true;\n                }\n                else if(vnode.data && vnode.data.key === key) {\n                    return true;\n                }\n                else if(vnode.key && vnode.key === key) {\n                    return true;\n                }\n                else if(i === slide) {\n                    return true;\n                }\n\n                return false;\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            lastSlide: null,\n            currentSlide: this.active\n        }\n    },\n\n    render(h) {\n        return this.slide(this.currentSlide);\n    }\n\n};\n</script>\n","<template>\n    <!-- TODO: Add tooltip with slide name/key to the control once the tooltip directive has been written. -->\n    <div class=\"slide-deck-controls\">\n        <a v-for=\"slide in slides\" href=\"#\" @click.prevent=\"onClick($event, slide)\" class=\"slide-deck-control-icon\" :class=\"{'is-active': (slide.data ? slide.data.key : slide.key) === active}\">\n            <i class=\"fa fa-circle\"/>\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'slide-deck-controls',\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * An array of slide vnodes\n         *\n         * @type {Number}\n         */\n        slides: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    methods: {\n\n        onClick(event, slide) {\n            this.$emit('click', event, slide)\n        }\n\n    },\n\n    computed: {\n\n    },\n\n    data() {\n        return {}\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.slide-deck-controls {\n    .slide-deck-control-icon {\n        color: $white;\n        font-size: $font-size-base;\n\n        &:not(:last-child) {\n            margin-right: $font-size-base / 2;\n        }\n    }\n\n    .slide-deck-control-icon.is-active {\n        color: $primary;\n    }\n}\n</style>\n","<template>\n    <div class=\"slide-deck\" :class=\"{'slide-deck-flex': center}\">\n        <div ref=\"content\" class=\"slide-deck-content\" :style=\"{width: width, height: height}\">\n            <keep-alive>\n                <transition\n                    :name=\"`slide-${direction}`\"\n                    @after-enter=\"onSlideAfterEnter\"\n                    @before-enter=\"onSlideBeforeEnter\"\n                    @enter=\"onSlideEnter\"\n                    @after-leave=\"onSlideAfterLeave\"\n                    @before-leave=\"onSlideBeforeLeave\"\n                    @leave=\"onSlideLeave\">\n                    <slides ref=\"slides\" :key=\"currentSlide\" :active=\"currentSlide\">\n                        <slot/>\n                    </slides>\n                </transition>\n            </keep-alive>\n        </div>\n        <slot name=\"controls\">\n            <slide-deck-controls v-if=\"controls\" ref=\"controls\" :slides=\"slides()\" :active=\"currentSlide\" @click=\"onClickControl\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport { isFunction } from '../../Helpers/Functions';\nimport unit from '../../Helpers/Unit';\nimport transition from '../../Helpers/Transition';\nimport Slides from './Slides';\nimport SlideDeckControls from './SlideDeckControls';\n\nexport default {\n\n    name: 'slide-deck',\n\n    components: {\n        Slides,\n        SlideDeckControls\n    },\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * Center the slide-deck.\n         *\n         * @type Boolean\n         */\n        center: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Show the slide-deck controls to change the slide.\n         *\n         * @type Boolean\n         */\n        controls: Boolean,\n\n        /**\n         * Flex the content within the popover.\n         *\n         * @type Boolean\n         */\n        flex: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Give a selector or Element to use apply a hidden overflow. If false,\n         * no overflow will be applied. Defaults to the slide deck's container.\n         *\n         * @type {String|Element|Boolean}\n         */\n        overflow: {\n            type: [Object, String, Element, Boolean],\n            default: true\n        },\n\n        /**\n         * The mode determines how the popover content will flex based on the\n         * varying heights of the slides.\n         *\n         * @type Boolean\n         */\n        resizeMode: {\n            type: [Function, Boolean, String],\n            default: 'auto',\n            validate(value) {\n                return ['auto', 'initial', 'inherit'].indexOf(value) !== 1;\n            }\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        },\n\n        currentSlide(value, oldValue) {\n            this.direction = this.$refs.slides.getSlideIndex(oldValue) > this.$refs.slides.getSlideIndex(value) ? 'backward' : 'forward';\n        }\n\n    },\n\n    methods: {\n\n        resize(el) {\n            if(isFunction(this.resizeMode)) {\n                this.resizeMode.call(this, el || this.$el);\n            }\n            else {\n                const style = getComputedStyle(el);\n\n                if(!el.style.width) {\n                    el.width = el.style.width = `calc(${style.width} + ${style.marginLeft} + ${style.marginRight})`;\n                }\n\n                if(!el.style.height) {\n                    el.height = el.style.height = `calc(${style.height} + ${style.marginTop} + ${style.marginBottom})`;\n                }\n            }\n        },\n\n        slide(index) {\n            return this.$refs.slides ? this.$refs.slides.slide(index || this.active) : null;\n        },\n\n        slides() {\n            return this.$refs.slides ? this.$refs.slides.slides() : [];\n        },\n\n        onClickControl(event, vnode) {\n            this.currentSlide = vnode.data ? vnode.data.key : vnode.key;\n        },\n\n        onSlideAfterEnter(el) {\n            if(el.width) {\n                el.width = el.style.width = null;\n            }\n\n            if(el.height) {\n                el.height = el.style.height = null;\n            }\n\n            this.width = null;\n            this.height = null;\n            this.$emit(\n                'after-enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideBeforeEnter(el) {\n            this.$emit(\n                'before-enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideEnter(el, done) {\n            this.resize(el);\n            this.width = el.style.width;\n            this.height = el.style.height;\n\n            transition(el).then(delay => {\n                this.$nextTick(done);\n            });\n\n            this.$emit(\n                'enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideAfterLeave(el) {\n            if(el.width) {\n                el.width = el.style.width = null;\n            }\n\n            if(el.height) {\n                el.height = el.style.height = null;\n            }\n\n            this.$nextTick(() => {\n                this.$emit(\n                    'after-leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n                );\n            });\n        },\n\n        onSlideBeforeLeave(el) {\n            this.resize(el);\n            this.$emit(\n                'before-leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n            );\n        },\n\n        onSlideLeave(el, done) {\n            transition(el).then(delay => {\n                this.$nextTick(done);\n            });\n\n            this.$emit(\n                'leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n            );\n        }\n\n    },\n\n    computed: {\n\n        overflowElement() {\n            if(this.overflow === true) {\n                return this.$el;\n            }\n            else if(this.overflow instanceof Element) {\n                return this.overflow;\n            }\n            else if(this.overflow && this.overflow.elm) {\n                return this.overflow.elm;\n            }\n            else if(this.overflow) {\n                return document.querySelector(this.overflow)\n            }\n\n            return null;\n        },\n\n        nodes() {\n            return this.$slots.default;\n        }\n\n    },\n\n    mounted() {\n        if(this.overflowElement) {\n            this.overflowElement.style.overflow = 'hidden';\n        }\n    },\n\n    data() {\n        return {\n            height: null,\n            width: null,\n            lastSlide: null,\n            currentSlide: this.active,\n            direction: 'forward'\n        }\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.slide-deck {\n    height: auto;\n    position: relative;\n\n    &.slide-deck-flex {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .slide-deck-content {\n            flex: 1;\n        }\n    }\n\n    .slide-deck-content {\n        position: relative;\n        transition: all .333s ease;\n    }\n\n    /*\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    */\n\n    .slide-deck-controls {\n        position: absolute;\n        left: 50%;\n        bottom: 1rem;\n        transform: translateX(-50%);\n    }\n\n    .slide-forward-enter-active,\n    .slide-forward-leave-active,\n    .slide-backward-enter-active,\n    .slide-backward-leave-active {\n        opacity: 0;\n        transition: all .333s ease-out;\n        position: absolute;\n        top: 0;\n    }\n\n    .slide-forward-enter-active,\n    .slide-backward-enter-active {\n        transition: all .333s ease-out;\n        width: 100%;\n    }\n\n    .slide-forward-enter-active {\n        left: 0;\n    }\n\n    .slide-backward-enter-active {\n        right: 0;\n    }\n\n    .slide-forward-enter-active,\n    .slide-backward-leave-to {\n        transform: translateX(115%);\n    }\n\n    .slide-forward-leave-to,\n    .slide-backward-enter-active {\n        transform: translateX(-115%);\n    }\n\n    .slide-forward-enter-to,\n    .slide-backward-enter-to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n\n}\n</style>\n","import RadioField from './RadioField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            RadioField\n        });\n    }\n\n});\n\nexport default RadioField;\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"checkbox\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"update($event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"checkbox\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"update($event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n</template>\n\n<script>\n\nimport RadioField from '../RadioField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'checkbox-field',\n\n    extends: RadioField,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValues'\n    },\n\n    props: {\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checkedValues: {\n            type: Array,\n            default() {\n                return [];\n            }\n        }\n\n    },\n\n    methods: {\n\n        update(value) {\n            const checked = this.checkedValues.slice(0);\n            const index = this.checkedValues.indexOf(value);\n\n            if(index === -1) {\n                checked.push(value);\n            }\n            else {\n                checked.splice(index, 1);\n            }\n\n            this.$emit('change', checked);\n        }\n\n    }\n}\n\n</script>\n","import CheckboxField from './CheckboxField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            CheckboxField\n        });\n    }\n\n});\n\nexport default CheckboxField;\n","<template>\n\n    <div class=\"input-group-append\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-append',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n}\n\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-text'\n\n}\n</script>\n","<template>\n    <span class=\"navbar-toggler-icon\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-toggler-icon'\n\n}\n</script>\n","<template>\n    <ul class=\"navbar-nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </ul>\n</template>\n\n<script>\nimport Navigation from '../Navigation';\n\nexport default {\n\n    name: 'navbar-nav',\n\n    components: {\n        Navigation\n    }\n\n}\n</script>\n","import SelectField from './SelectField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            SelectField\n        });\n    }\n\n});\n\nexport default SelectField;\n"],"names":["Card","methods","t","event","this","enumerable","components","$","ProgressBar","ready","isFunction","binding","value","hideClose","poster","type","File","file","orig_filename","[object Object]","name","toLowerCase","match","lastModified","loaded","B","e","lengthComputable","parseInt","$nextTick","n","floor","log","round","Math","pow","i","Vue","VueInstaller","Boolean","entry","target","rootBounds","document","targetRect","targetArea","intersectionRect","Number","Promise","Z","X","Error","options","_rootMarginValues","_parseRootMargin","rootMargin","$directives","performance","timeout","C","addEventListener","attachEvent","node","removeEvent","fn","rect1","appendChild","rect2","min","width","s","$modal","top","right","a","getBoundingClientRect","rect","bottom","left","title","getParentNode","parent","P","prototype","propsData","close","intersectionRatio","POLL_INTERVAL","IntersectionObserver","content","filter","_unregisterInstance","_unmonitorIntersections","_queuedEntries","threshold","parts","gt","innerHTML","bt","_monitoringIntersections","_monitoringInterval","addEvent","_checkForIntersections","attributes","r","clearInterval","window","classList","_getRootRect","_observationTargets","_rootContainsTarget","rootIsInDom","now","rootRect","rootContainsTarget","oldEntry","push","newEntry","response","getComputedStyle","atRoot","body","root","margin","height","requestAnimationFrame","isIntersecting","toString","length","clearTimeout","newRatio","containsDeep","_registerInstance","IntersectionObserverEntry","render","props","text","InputGroupPrepend","Array","String","staticRenderFns","controlClass","spacing","y","default","dragging","install","href","variant","item","active","prevValue","ListGroupItem","multiple","computed","each","$children","child","bindEventsToChildren","use","replace","trigger","NavbarToggler","indexOf","expand","triggerableClasses","fixed","attrs","error","NavigationError","$parent","contains","NavigationLink","NavigationItem","buttons","vertical","querySelector","isCard","mergeClasses","justified","tabs","card","extends","NavigationDropdown","page","currentPage","placement","parentNode","showPages","startOffset","popper","$poppers","pages","Pagination","HelpText","FormLabel","MergeClasses","progressClasses","findSlideByIndex","first","vnode","data","key","slides","currentSlide","RadioField","mixins","model","prop","checkedValues","slice","index","checked","splice","$emit","CheckboxField","CardBody","isDragging","onDragover","files","Dropzone","directives","el","context","Object","required","progress","split","pop","extension","bytesToSize","size","mime","lastModifiedDate","moment","readFile","total","then","image","result","diff","start","bytes","sizes","url","FilePreview","Colorable","FormControl","select","time","boundingClientRect","intersectionArea","toFixed","callback","opt_options","nodeType","throttle","bind","THROTTLE_TIMEOUT","_callback","thresholds","_initThresholds","map","unit","join","timer","setTimeout","opt_useCapture","removeEventListener","detatchEvent","max","err","host","defineProperty","get","USE_MUTATION_OBSERVER","observe","some","element","_monitorIntersections","unobserve","disconnect","takeRecords","records","opt_threshold","isArray","sort","isNaN","opt_rootMargin","exec","parseFloat","margins","setInterval","_domObserver","childList","characterData","subtree","_rootIsInDom","forEach","_computeTargetAndRootIntersection","_hasCrossedThreshold","display","parentComputedStyle","parentRect","documentElement","overflow","computeRectIntersection","html","clientWidth","clientHeight","_expandRectByRootMargin","newRect","oldRatio","ActivityIndicator","activity","background","entries","observer","hasScrolledIntoViewport","scrollIntoViewport","scrollOutViewport","$el","id","InputGroupText","InputGroupAppend","HasSlots","Sizeable","append","prepend","InputGroup","FormGroup","FormFeedback","FormControlMixin","defaultControlClass","activeClass","onValue","offValue","isActive","controlSizeClass","invalidFeedback","transitionDuration","numeric","duration","isUndefined","watch","getTransitionInMilliseconds","LightSwitchField","Badge","badge","action","disabled","label","to","prefix","classes","flush","$off","onClickItem","$on","ListGroup","alt","tag","h1","src","collapse","NavbarTogglerIcon","expanded","NavbarBrand","NavbarCollapse","NavbarText","Variant","sticky","expandedClass","variantClass","colorableClasses","isItem","nav-link","nav-item","list","align","fill","pills","role","card-header-tabs","card-header-pills","nav-justified","nav-fill","nav-pills","nav-tabs","flex-column","BtnDropdown","DropdownMenu","Navigation","Navbar","NavbarNav","validate","totalPages","paginate","currentTarget","setActivePage","startPage","endPage","divider","generate","custom","plaintext","customSelectSizeClass","SelectField","oldValue","lastSlide","$slots","extend","findSlideByKey","slide","h"],"mappings":"0rBA4BQA,qBAIJC,mCAG0BC,gGASVC,GACRC,8GAOW,YAAaD,0CAQZE,0CCtDHC,qxCCmCXC,2BAGFC,WAAAA,iBAIAC,sBAEWC,GAAWC,gCACsBC,iBAa5CC,wDAgBAC,wBAUIC,wEAc4BC,YAAYC,eAAiBA,KAAKC,eAQlEC,wBACgBF,qBAAuBb,cAAUgB,OAAW,WAAWC,mBAAqBJ,eAQ5FE,qCACiCF,mBAS7Bf,gCAAmCE,MAAKa,oCASxCf,mCAQJiB,uBACkBJ,KAAKO,2EAS0BC,4EASLN,sCAO5CE,cACOf,KAAKa,eAAgBD,MAAMd,kBAGrBsB,MAASC,GAEdrB,2BACkBa,MAAMS,MACXC,4BACUzB,iBAAiBsB,MAASI,4CAErCzB,wEAKK0B,oBACIL,2EAUnBM,2BACU5B,SAAY,uDAEZ6B,WAAWC,uBACjC9B,aAAY+B,QAAcC,KAAKC,YAAc,QAAiBC,KAG5DjB,SACIf,wBAKRe,MACIW,aACW1B,KAAKa,UACZO,OAAQpB,KAAKa,eAAgBD,OAAO,mCCpNpCqB,KACJC,+lBCqCQC,6CCxCDD,+BAGPA,6DC0C2BE,GACjCpC,sBACKqC,qBACAC,aAAmBA,mCACEF,oFAmnBlBG,wEA9mBJC,2BACAC,6CAEmBC,gBAMrB1C,0BAAyB2C,oBAA+CC,2BAGrBC,EAcvDC,6DAKcC,mDAGQC,yKAUpBhD,mDAEAA,KAAKiD,uBAAyBC,iBAAiBF,EAAQG,gFAI3B,qBACVnD,KAAKiD,sBAAsBG,YAC3C9B,kCAybJI,mCAC+B2B,gDAYTC,uEAObA,MAcTC,wCACkBC,6CACqClC,GAEjB,qBAAfmC,aACnBC,gCAaKC,OAAyBC,oEAEL7D,kEAGAA,gBAYI8D,KAC/BC,qBAA8BC,cACZC,kDAENlC,2BACRmC,WAGJC,MAAQD,KAASE,cACVC,kBAGLC,MAAOA,EACPJ,iBAWJK,6BAIcC,wCAMPC,6CAMWH,MACZI,eACAC,0BACoBF,GAAKE,YACjBF,EAAKC,uBAcVE,yCAKG,uBAYVL,WACa,sBAGUZ,oBAYhBkB,+BAGHC,0BAEKA,yCA3rBPnD,iCACAoD,kDAAwDC,UAY1DC,wHAPyDD,gCAEhD,WACHE,YAAYC,qDA6F8B,gBAQnBC,cAAgBnD,wCAMQA,EAQvDoD,oBAAyC/C,gFAKvC,WAIgBA,2BACEgD,6PAgBWC,0GAM3BtF,KAAKuF,wBAQTH,mEAEOI,uIAaAC,uBAccV,gDACe,wBACfW,sGAIC,gEAEX5F,KAAMwE,EAAEtC,kGAmBX2D,iCACJC,aACQ,uEAEApF,iBAAkBmF,EAAME,0BAI1B,oCAEaC,OAAc,wDAYzBC,0DACwBrE,EAI5B1B,wBACGgG,4DAC4BhG,qBAGjCiG,+DACkCC,2BAE9BlG,uEACkBsB,0BAA0B4E,qDAE5CC,yBACW,iBACIC,qBAaJrB,6CACf/E,iEAGFqG,sEAGA1C,EAAY2C,6DACyBJ,8EAInClG,0BAYNoF,EAAqBL,UAAUmB,uBAAyBK,iBACpCvG,uBACWA,MAAKwG,oBA0W3BlF,EACLmD,+CAzWGgC,sEAG2BC,iCAE1BhE,EAAmBiE,MACnB3G,kEAGI4G,6CAGMC,2BAMYC,6BAGMC,0BACRC,SAMlBD,yBACGtB,+CAZkBwB,KAe1BjH,iCAGDA,0CAiBJoF,EAAqBL,4CACjBmC,2BAGSC,2BAAXnF,qBAI2BK,OACd,EAEL+E,mBAEoBvC,YACtByB,oDAsBJ,2BAhBWhF,SAOKiB,GAAS8E,MACnBxC,+IA0BCyC,6DAOLlD,IAAKpC,EACL0C,0CAEAT,0JAeec,8CACnBxC,8CACEK,oBAA6B2E,+BACiBC,wCAIlCnD,kBACJG,WAAsBxC,GAC9B0C,2BAEMT,QAAgBI,wEAkBtBoD,0BAIkCC,oCACF,QACVA,gBACpBT,wBAAmCU,yCAKHC,kBAClB5H,kBAIhB6H,aAA0CC,SACDA,eAYxB/C,8CACNuC,SAAqB/E,MAAe+E,wCAUEhG,YACnDA,MAAOyG,gBAAoC1F,gBASd2F,uGAmMxBC,sDCxsBSC,iVAQZC,gBAOchG,mFAuCVuD,8GAae,eAEP1F,0BACW,mGAaEwH,sSAmBb9B,2RCrGZ1E,0jBCYIoH,mBCgBQF,mwBAORG,wCAYSC,yDCrDFpG,+EAMHmG,04CCoDME,yHA6BGzI,uBAOH0I,6CAIVzH,iBACIJ,YACS8H,wCAECC,oRAcYxH,MAAMyH,kCAIHC,8OAiBpBC,8HC1IbC,4zBC8BoBP,eAOhBQ,YAOAC,eAOAC,iCASIL,6FA6BOjG,+BASN4F,8FAWOjH,oCACiB4H,mBACHlJ,cAEnBA,0EAQHF,sCACWE,+BAQDmJ,kQCxHdC,2CAoBAC,oCAOJC,oBAEQd,4EASAe,OAAUC,gCACuBxJ,qCACVD,qCASnBA,0BASRgB,cAAmB0I,iDAOdC,uEC7EeC,ybCSxBxB,mDA+BIX,eAAiBe,8GAmCiB,sCAKtC1I,iBAEQ+J,yPC1ERzB,6uBCQAnH,KAAM6I,iBAEN3J,0GAaImC,gDAOJxC,gCAGmBG,uKCrBnBE,yEAII4J,0DAkBInJ,sGAyBAA,aAAewB,wBAWnB6G,wDAIqDlJ,oBAApBiK,kDAShB/J,mCAIagK,0FAMQC,yDACYC,oDAG1ClK,gWClGNmK,0BAIFC,qWCFJpJ,uBAEAd,4BACImK,IAGJlC,oEAmCSI,gCAeD5H,0BAMR2I,UAEIvI,0EAKIf,qBACQA,gCACoBsK,sBAAsBC,sCAKhCvK,qUC3EjBwK,GAETrC,mCAqBIc,gCAQJK,mRC9BMxJ,yBAGF2K,kCAQJtC,oBAcIuC,qFA0CAC,kDAoBIC,gCALaC,gFAKDC,4FAGqBD,mFAEHE,qBACV/K,iDAEKgL,oCAQjCjK,QACIO,kBACiB2J,msBC5ErBC,yHClCQjJ,EAAKe,mDAILyH,oCAEAU,0QCJRrC,qBACI5G,27CCoBJiG,mBAOcI,6DAWV6C,kBAEIxC,0FA4BJ7H,sBACkBf,mDAAyDA,KAAKqL,iEAIjCA,iBAAmBA,YAAcC,eAGvEF,qBACkBG,0FAMMxL,KAGvCgB,cAAcqK,2CAEOA,IAIfrK,6BAE2ByK,kCAAyCA,gEAG1DC,2CAC8DA,kBAGnCC,OAEjB1L,KACNgH,sBAIAA,iBAGVhH,MAAI2L,YAAgC3J,oBAYpChC,6BAPOA,qBACC4L,iBAAqB7L,oCAMtB6L,2BAQA5L,oEAMsBA,iCAS7BqL,6BC3JgB1B,0CAIhBkC,k5BC0CF9K,oCAGF+K,yBAEAC,8CASAC,4DAiByBhM,oDACrB,0BAA2ByI,iBAG/B1H,4DAE4CyG,qCACpCxH,2BACCA,uBACEiM,kMC5DazL,wDAcR,mJAoB8B0L,uEAUnCC,iBAAoB7G,QAAQ8G,oBAE3BxD,QAEC,MAASyD,iHAyBlBrM,MAAMsM,OAAyBD,QAA+BC,cAAZA,kBAE5BC,4GAWdvM,qEAYWkJ,0CAKAsD,qBC1HftE,+ZAIZC,4CASiBa,sHCQLd,16/BC1BJjG,EAAKe,GACTd,GAAahC,YACTuM,WAAAA,SC0DIvE,y3DAEZlH,KAAM,iBAENkK,QAASuB,GAETC,QACIV,IAGJW,OACI5M,MAAO,SACP6M,KAAM,iBAGVzE,OAOI0E,eACIlM,KAAM2H,MACNvH,UACI,YAMZlB,SAEIkB,OAAOP,GACH,QAAgBR,KAAK6M,cAAcC,MAAM,GACnCC,EAAQ/M,KAAK6M,cAAc9C,QAAQvJ,IAE3B,IAAXuM,EACCC,EAAQhG,KAAKxG,GAGbwM,EAAQC,OAAOF,EAAO,GAG1B/M,KAAKkN,MAAM,SAAUF,WC1GlB9K,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTiN,cAAAA,SpCgBIjF,2vBAEZlH,KAAM,WAENd,YACIN,KAAAA,GACAwN,SAAAA,IAGJvN,SAEIkB,OAAOhB,GACHC,KAAKqN,cACLrN,KAAKkN,MAAM,OAAQnN,IAGvBgB,WAAWhB,GACPC,KAAKqN,cACLrN,KAAKkN,MAAM,WAAYnN,IAG3BgB,YAAYhB,GACRC,KAAKqN,cACLrN,KAAKkN,MAAM,YAAanN,GACxBC,KAAKsN,WAAWvN,IAGpBgB,YAAYhB,GACRC,KAAKqN,cACLrN,KAAKkN,MAAM,YAAanN,KAKhCgB,OACI,OACIwM,MAAO,KACPF,sBCzDGnL,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTsN,SAAAA,SCgCItF,ivCAEZlH,KAAM,eAENd,YACIE,YAAAA,IAGJqN,YACIpN,OACIU,SAAS2M,EAAInN,EAAS6L,GACf9L,EAAWC,EAAQC,QAClB4L,EAAMuB,QAAQlM,UAAUlB,EAAQC,UAMhD2H,OAOI1H,UAAW0B,QAOXtB,MACIF,MAAOiN,OAAQhN,MACfiN,aAOJnN,OAAQ6H,OASRuF,UACInN,KAAMgC,OACNiG,iBAKRU,UAOIvI,OACI,YAAYF,qBAAuBb,KAAKa,KAAKG,KAAOhB,KAAKa,KAAKC,eAQlEC,YACI,YAAYF,qBAAuBb,KAAKa,KAAKG,KAAK+M,MAAM,KAAKC,MAAM/M,cAAgBjB,KAAKa,KAAKoN,WAQjGlN,OACI,YAAYmN,YAAYlO,KAAKa,KAAKsN,OAQtCpN,OACI,YAAYF,qBAAuBb,KAAKa,KAAKF,KAAOX,KAAKa,KAAKuN,MAQlErN,UACI,QAASf,KAAKW,KAAKO,MAAM,WAQ7BH,UACI,QAASf,KAAKW,KAAKO,MAAM,WAQ7BH,eACI,YAAYF,qBAAuBb,KAAKa,KAAKM,aAAe,MAQhEJ,mBACI,YAAYF,qBAAuBb,KAAKa,KAAKwN,iBAAmB,OAKxExO,SAEIkB,WACI,GAAGf,KAAKa,qBAAsB,CAC1B,QAAcyN,SAETlN,OAAS,EAEdpB,KAAKyB,eACD8M,GAASvO,KAAKa,KAAMS,IACbA,EAAEC,kBACDvB,KAAKkN,MAAM,WAAYlN,KAAKoB,OAASI,SAAUF,EAAEF,OAASE,EAAEkN,MAAS,IAAK,OAE/EC,KAAK1O,IACJC,KAAKkN,MAAM,OAAQnN,mBAGfC,KAAK0O,MAAQ3O,EAAMsC,OAAOsM,YACrBlN,eACDzB,KAAKoB,aAEV,IAAMkN,IAASM,KAAKC,KACxBzE,IACCpK,KAAKkN,MAAM,QAAS9C,SAMvC8D,YAAa,SAASY,GACrB,OAAa,QAAS,KAAM,KAAM,KAAM,SAC3B,GAATA,EAAY,MAAO,eACftN,SAASM,KAAKH,MAAMG,KAAKF,IAAIkN,GAAShN,KAAKF,IAAI,oBAC3CC,MAAMiN,EAAQhN,KAAKC,IAAI,KAAMC,GAAI,GAAK,IAAM+M,EAAM/M,IAG5DjB,OAAOhB,GACHC,KAAKkN,MAAM,YAKnBnM,OACI,OACI2N,MAAO1O,KAAKa,KAAKmO,IACjB5N,OAAQpB,KAAKa,sBAAuB,UCtNjCqB,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACT+O,YAAAA,SCmBI/G,wgBAEZlH,KAAM,eAEN0L,QACIwC,GACAC,GACAnD,IAGJ7D,OAOIiH,OAAQjN,QAORxB,MACIA,KAAM4H,OACNK,QAAS,cCjDOe,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTiP,YAAAA,QCEX,SAAS7I,EAAQ/D,GAuClB,WAAmCH,GACjCpC,KAAKqP,KAAOjN,EAAMiN,KAClBrP,KAAKqC,OAASD,EAAMC,OACpBrC,KAAKsC,WAAaF,EAAME,WACxBtC,KAAKsP,mBAAqBlN,EAAMkN,mBAChCtP,KAAK0C,iBAAmBN,EAAMM,mBAgnB5B0B,IAAK,EACLK,OAAQ,EACRC,KAAM,EACNL,MAAO,EACPJ,MAAO,EACPuD,OAAQ,GApnBVxH,KAAK0H,iBAAmBtF,EAAMM,uBAGb1C,KAAKsP,mBAClB7M,EAAaD,EAAWyB,MAAQzB,EAAWgF,OAC3C9E,EAAmB1C,KAAK0C,iBACxB6M,EAAmB7M,EAAiBuB,MAAQvB,EAAiB8E,YAM1DtC,kBAHHzC,EAGuBE,QAAQ4M,EAAmB9M,GAAY+M,QAAQ,IAG/CxP,KAAK0H,eAAiB,EAAI,EAcvD,WAA8B+H,EAAUC,GAEtC,MAAcA,SAES,qBACrB,gBAAgB,kCAGd1M,EAAQsE,MAAiC,GAAzBtE,EAAQsE,KAAKqI,SAC/B,gBAAgB,gCAIbzJ,uBAAyB0J,EAC1B5P,KAAKkG,uBAAuB2J,KAAK7P,MAAOA,KAAK8P,kBAGjD9P,KAAK+P,UAAYN,EACjBzP,KAAKyG,uBACLzG,KAAKyF,kBACLzF,KAAKiD,kBAAoBjD,KAAKkD,iBAAiBF,EAAQG,YAGvDnD,KAAKgQ,WAAahQ,KAAKiQ,gBAAgBjN,EAAQ0C,WAC/C1F,KAAKsH,KAAOtE,EAAQsE,MAAQ,KAC5BtH,KAAKmD,WAAanD,KAAKiD,kBAAkBiN,IAAI,SAAS3I,GACpD,SAAc/G,MAAQ+G,EAAO4I,OAC5BC,KAAK,KAwbV,aACE,SAAc/M,aAAeA,YAAYuD,KAAOvD,YAAYuD,MAY9D,WAAkBhD,EAAIN,GACpB,MAAY,uBAEL+M,IACHA,EAAQC,WAAW,WACjB1M,IACAyM,EAAQ,MACP/M,KAcT,WAAkBI,EAAM3D,EAAO6D,EAAI2M,GACG,qBAApB/M,iBACdE,EAAKF,iBAAiBzD,EAAO6D,EAAI2M,OAEC,qBAAf9M,aACnBC,EAAKD,YAAY,KAAO1D,EAAO6D,GAanC,WAAqBF,EAAM3D,EAAO6D,EAAI2M,GACG,qBAAvBC,oBACd9M,EAAK8M,oBAAoBzQ,EAAO6D,EAAI2M,OAED,qBAAhBE,cACnB/M,EAAK+M,aAAa,KAAO1Q,EAAO6D,GAYpC,WAAiCC,EAAOE,GACtC,MAAUjC,KAAK4O,IAAI7M,EAAMO,IAAKL,EAAMK,KAChCK,EAAS3C,KAAKkC,IAAIH,EAAMY,OAAQV,EAAMU,QACtCC,EAAO5C,KAAK4O,IAAI7M,EAAMa,KAAMX,EAAMW,MAClCL,EAAQvC,KAAKkC,IAAIH,EAAMQ,MAAON,EAAMM,OACpCJ,EAAQI,EAAQK,EAChB8C,EAAS/C,EAASL,YAEL,GAAKoD,GAAU,IAC9BpD,IAAKA,EACLK,OAAQA,EACRC,KAAMA,EACNL,MAAOA,EACPJ,MAAOA,EACPuD,OAAQA,GAUZ,WAA+BkG,GAC7B,UAGElJ,EAAOkJ,EAAGnJ,wBACV,MAAOoM,IAKT,UAGMnM,EAAKP,OAASO,EAAKgD,SACvBhD,GACEJ,IAAKI,EAAKJ,IACVC,MAAOG,EAAKH,MACZI,OAAQD,EAAKC,OACbC,KAAMF,EAAKE,KACXT,MAAOO,EAAKH,MAAQG,EAAKE,KACzB8C,OAAQhD,EAAKC,OAASD,EAAKJ,MAGxBI,IAWLJ,IAAK,EACLK,OAAQ,EACRC,KAAM,EACNL,MAAO,EACPJ,MAAO,EACPuD,OAAQ,GAWZ,WAAsB3C,EAAQ4E,GAE5B,IADA,MAAWA,EACJ/F,GAAM,CACX,GAAIA,GAAQmB,EAAQ,WAEbD,EAAclB,GAEvB,SAUF,WAAuBA,GACrB,MAAaA,EAAK6H,qBAEe,IAAnB1G,EAAO8K,UAAkB9K,EAAO+L,KAErC/L,EAAO+L,KAET/L,EA9rBT,GAAI,4BACA,iCACA,wBAA8BoD,0BAA0BlD,UAY1D,YARM,qBAA2BkD,0BAA0BlD,WACzD6I,OAAOiD,eAAevK,EAAO2B,0BAA0BlD,UACrD,kBACA+L,IAAK,WACH,YAAY5L,kBAAoB,QA6FnBH,UAAU+K,iBAAmB,IAQlD1K,EAAqBL,UAAUI,cAAgB,KAM/CC,EAAqBL,UAAUgM,yBAQ/B3L,EAAqBL,UAAUiM,QAAU,SAAS3O,GAKhD,IAJ8BrC,KAAKyG,oBAAoBwK,KAAK,SAAShI,GACnE,SAAYiI,SAAW7O,IAGzB,CAIA,IAAMA,GAA6B,GAAnBA,EAAOsN,SACrB,gBAAgB,kCAGb3H,oBACLhI,KAAKyG,oBAAoBO,MAAMkK,QAAS7O,EAAQD,MAAO,OACvDpC,KAAKmR,wBACLnR,KAAKkG,2BAQPd,EAAqBL,UAAUqM,UAAY,SAAS/O,GAClDrC,KAAKyG,oBACDzG,KAAKyG,oBAAoBnB,OAAO,SAAS2D,GAE3C,SAAYiI,SAAW7O,IAEpBrC,KAAKyG,oBAAoBmB,SAC5B5H,KAAKwF,0BACLxF,KAAKuF,wBAQTH,EAAqBL,UAAUsM,WAAa,WAC1CrR,KAAKyG,uBACLzG,KAAKwF,0BACLxF,KAAKuF,uBAUPH,EAAqBL,UAAUuM,YAAc,WAC3C,MAActR,KAAKyF,eAAeqH,oBAC7BrH,kBACE8L,GAaTnM,EAAqBL,UAAUkL,gBAAkB,SAASuB,GACxD,MAAgBA,IAAkB,gBACvBC,QAAQ/L,KAAYA,GAAaA,IAErCA,EAAUgM,OAAOpM,OAAO,SAASxF,EAAGkC,EAAGsC,GAC5C,GAAgB,oBAAYqN,MAAM7R,IAAMA,EAAI,GAAKA,EAAI,EACnD,gBAAgB,qEAELwE,EAAEtC,EAAI,MAgBvBoD,EAAqBL,UAAU7B,iBAAmB,SAAS0O,GACzD,OAAmBA,GAAkB,OACV7D,MAAM,OAAOmC,IAAI,SAAS3I,GACnD,MAAY,wBAAwBsK,KAAKtK,OACpC5B,EACH,gBAAgB,4DAEVnF,MAAOsR,WAAWnM,EAAM,IAAKwK,KAAMxK,EAAM,eAI3C,GAAKoM,EAAQ,IAAMA,EAAQ,GACnCA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,GACnCA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,GAE5BA,GAST3M,EAAqBL,UAAUoM,sBAAwB,WAChDnR,KAAK+F,2BACR/F,KAAK+F,4BAID/F,KAAKmF,cACPnF,KAAKgG,oBAAsBgM,YACvBhS,KAAKkG,uBAAwBlG,KAAKmF,gBAGtCc,EAASK,EAAQ,SAAUtG,KAAKkG,2BAChCD,EAAS1D,EAAU,SAAUvC,KAAKkG,2BAE9BlG,KAAK+Q,uBAAyB,yBAChC/Q,KAAKiS,aAAe,qBAAqBjS,KAAKkG,wBAC9ClG,KAAKiS,aAAajB,QAAQzO,GACxB4D,cACA+L,aACAC,iBACAC,iBAYVhN,EAAqBL,UAAUS,wBAA0B,WACnDxF,KAAK+F,2BACP/F,KAAK+F,4BAELM,cAAcrG,KAAKgG,qBACnBhG,KAAKgG,oBAAsB,KAE3BrC,EAAY2C,EAAQ,SAAUtG,KAAKkG,2BACnCvC,EAAYpB,EAAU,SAAUvC,KAAKkG,2BAEjClG,KAAKiS,eACPjS,KAAKiS,aAAaZ,aAClBrR,KAAKiS,aAAe,QAY1B7M,EAAqBL,UAAUmB,uBAAyB,WACtD,MAAkBlG,KAAKqS,eACnBxL,EAAWF,EAAc3G,KAAKwG,gBA0WhCpC,IAAK,EACLK,OAAQ,EACRC,KAAM,EACNL,MAAO,EACPJ,MAAO,EACPuD,OAAQ,QA7WLf,oBAAoB6L,QAAQ,SAASrJ,GACxC,MAAaA,EAAKiI,QACd1O,EAAa+B,EAAsBlC,GACnCyE,EAAqB9G,KAAK0G,oBAAoBrE,GAC9C0E,EAAWkC,EAAK7G,MAChBM,EAAmBiE,GAAeG,GAClC9G,KAAKuS,kCAAkClQ,EAAQwE,GAE/CI,EAAWgC,EAAK7G,MAAQ,OAC1BiN,KAAMzI,IACNvE,OAAQA,EACRiN,mBAAoB9M,EACpBF,WAAYuE,EACZnE,iBAAkBA,MAKTiE,GAAeG,EAGpB9G,KAAKwS,qBAAqBzL,EAAUE,IACtCjH,KAAKyF,eAAeuB,KAAKC,GAMvBF,GAAYA,EAASW,gBACvB1H,KAAKyF,eAAeuB,KAAKC,GAZ3BjH,KAAKyF,eAAeuB,KAAKC,IAe1BjH,MAECA,KAAKyF,eAAemC,QACtB5H,KAAK+P,UAAU/P,KAAKsR,cAAetR,OAiBvCoF,EAAqBL,UAAUwN,kCAC3B,SAASlQ,EAAQwE,GAGnB,GAA+C,QAA3CP,EAAOa,iBAAiB9E,GAAQoQ,QAApC,CAOA,IALA,MAAiBlO,EAAsBlC,GAEnCwC,EAASD,EAAcvC,GACvB+E,MAEIA,GAAQ,CACd,MAAiB,KACbsL,EAAyC,GAAnB7N,EAAO8K,SAC7BrJ,EAAOa,iBAAiBtC,SAGO,QAA/B6N,EAAoBD,QAAmB,UAEvC5N,GAAU7E,KAAKsH,MAAQzC,GAAUtC,GACnC6E,KACAuL,EAAa9L,GAMThC,GAAUtC,EAAS8E,MACnBxC,GAAUtC,EAASqQ,iBACa,WAAhCF,EAAoBG,WACtBF,EAAapO,EAAsBM,IAMnC8N,KACFjQ,EAAmBoQ,EAAwBH,EAAYjQ,IAEhC,QAEhBkC,EAAcC,GAEzB,WASFO,EAAqBL,UAAUyB,aAAe,WAC5C,SACIxG,KAAKsH,KACPT,EAAWtC,EAAsBvE,KAAKsH,UACjC,CAEL,MAAW/E,EAASqQ,gBAChBvL,EAAO9E,EAAS8E,QAElBjD,IAAK,EACLM,KAAM,EACNL,MAAO0O,EAAKC,aAAe3L,EAAK2L,YAChC/O,MAAO8O,EAAKC,aAAe3L,EAAK2L,YAChCvO,OAAQsO,EAAKE,cAAgB5L,EAAK4L,aAClCzL,OAAQuL,EAAKE,cAAgB5L,EAAK4L,cAGtC,YAAYC,wBAAwBrM,IAUtCzB,EAAqBL,UAAUmO,wBAA0B,SAAS1O,GAChE,MAAcxE,KAAKiD,kBAAkBiN,IAAI,SAAS3I,EAAQvF,GACxD,MAAsB,MAAfuF,EAAO4I,KAAe5I,EAAO/G,MAChC+G,EAAO/G,OAASwB,EAAI,EAAIwC,EAAKP,MAAQO,EAAKgD,QAAU,MAEtD2L,GACF/O,IAAKI,EAAKJ,IAAM2N,EAAQ,GACxB1N,MAAOG,EAAKH,MAAQ0N,EAAQ,GAC5BtN,OAAQD,EAAKC,OAASsN,EAAQ,GAC9BrN,KAAMF,EAAKE,KAAOqN,EAAQ,aAEpB9N,MAAQkP,EAAQ9O,MAAQ8O,EAAQzO,KACxCyO,EAAQ3L,OAAS2L,EAAQ1O,OAAS0O,EAAQ/O,IAEnC+O,GAcT/N,EAAqBL,UAAUyN,qBAC3B,SAASzL,EAAUE,GAIrB,MAAeF,GAAYA,EAASW,eAChCX,EAAS7B,mBAAqB,GAAK,EACnC4C,EAAWb,EAASS,eACpBT,EAAS/B,mBAAqB,GAAK,KAGnCkO,IAAatL,EAEjB,IAAK,MAAQ,EAAG9F,EAAIhC,KAAKgQ,WAAWpI,OAAQ5F,IAAK,CAC/C,MAAgBhC,KAAKgQ,WAAWhO,MAI5B0D,GAAa0N,GAAY1N,GAAaoC,GACtCpC,EAAY0N,GAAa1N,EAAYoC,EACvC,WAWN1C,EAAqBL,UAAUsN,aAAe,WAC5C,OAAQrS,KAAKsH,MAAQS,EAAaxF,EAAUvC,KAAKsH,OAUnDlC,EAAqBL,UAAU2B,oBAAsB,SAASrE,GAC5D,SAAoBrC,KAAKsH,MAAQ/E,EAAUF,IAS7C+C,EAAqBL,UAAUiD,kBAAoB,aAWnD5C,EAAqBL,UAAUQ,oBAAsB,aAuLrDe,EAAOlB,qBAAuBA,EAC9BkB,EAAO2B,0BAA4BA,GAEjC3B,OAAQ/D,kBC1sBM2F,qRAEZlH,KAAM,qBAENd,YACImT,kBAAAA,IAGJlL,OAOImL,SAAUnR,QAOVoR,WAAYhL,OAOZf,QACI7G,KAAMgC,OACNiG,QAAS,KAQbuF,KAAM5F,OAON5H,KAAM4H,OAQN7C,WACI/E,KAAMgC,OACNiG,QAAS,IACT7H,SAASP,GACL,UAAgB,GAAKA,GAAS,KAM1CX,SAEIkB,mBAAmBqB,GACfpC,KAAKkN,MAAM,YAAa9K,GAEpBpC,KAAKsT,UACLtT,KAAKkN,MAAM,OAAQ9K,IAI3BrB,kBAAkBqB,GACdpC,KAAKkN,MAAM,aAAc9K,KAKjCkH,UAEIvI,aACI,UAAYf,KAAKwH,UAKzBzG,UACIf,KAAKyB,eACD,yBAAyB,CAAC+R,EAASC,KAC/BD,EAAQlB,QAAQlQ,IACTA,EAAMsF,iBAAmB1H,KAAK0T,yBAC7B1T,KAAK2T,mBAAmBvR,EAAOqR,GAC/BzT,KAAK0T,4BAED1T,KAAK0T,0BACT1T,KAAK4T,kBAAkBxR,EAAOqR,GAC9BzT,KAAK0T,gCAIbhO,UAAW1F,KAAK0F,YACjBsL,QAAQhR,KAAK6T,QAIxB9S,OACI,OACI2S,kCC9GIxL,4LAEZlH,KAAM,mBAENmH,OAOI2L,GAAIvL,OAOJH,MAAOE,MAAO3F,OAAQ4F,c6BfdL,4MAEZlH,KAAM,qBAENmH,OAOIC,KAAMjG,c5BXE+F,6MAEZlH,KAAM,sBAENmH,OAOIC,KAAMjG,cCgBE+F,4qBAEZlH,KAAM,cAENd,YACI6T,eAAAA,GACAC,iBAAAA,GACA3L,kBAAAA,IAGJqE,QACIuH,GACAC,GACAhF,GACAlD,IAGJ7D,OAEIgM,QAAS7L,MAAO3F,OAAQ4F,QAExB6L,SAAU9L,MAAO3F,OAAQ4F,cCvDlBrG,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTmU,WAAAA,GACAL,iBAAAA,GACA3L,kBAAAA,GACA0L,eAAAA,SC2BI7L,osCAEZlH,KAAM,qBAENd,YACI4L,SAAAA,GACAwI,UAAAA,GACAvI,UAAAA,eACAoD,GACAoF,aAAAA,IAGJ7H,QACI8H,IAGJrM,OAOIsM,qBACI9T,KAAM4H,OACNK,QAAS,6BAQb8L,aACI/T,KAAM4H,OACNK,QAAS,MAQb+L,SACI/L,QAAS,GAQbgM,UACIhM,QAAS,IAKjBU,UAEIuL,SAAU,WACN,YAAYrU,QAAUR,KAAK2U,SAG/B5T,iBACI,OACIf,KAAKyI,aACLzI,KAAK8U,iBACJ9U,KAAK0I,SAAW,GAChB1I,KAAK+U,gBAAkB,aAAe,GACtC/U,KAAK6I,SAAW,cAAgB,GAChC7I,KAAK6U,SAAW,YAAc,IACjCzE,KAAK,OAKfvQ,SAEIkB,8BACI,QAAiBoG,iBAAiBnH,KAAK6T,IAAIjJ,cAAc,yBAAyBoK,mBAC5EC,EAAUnD,WAAWoD,EAAU,IAC/B/E,EAAO+E,EAAShU,MAAM,cAEpBiP,EAAK,IACT,IAAK,IACD,WAAO8E,MACN,KACD,SAIR,oBAAoB9E,EAAK,2FAG7BpP,OAAOP,GACHR,KAAKkN,MAAM,QAAUiI,EAAY3U,GAAkBR,KAAK6U,SAAW7U,KAAK4U,SAAW5U,KAAK2U,QAA9CnU,KAKlD4U,OACIrU,QACIf,KAAK6I,YAELyH,gBACItQ,KAAK6I,aACN7I,KAAKqV,iCAIhBtU,OACI,OACI8H,oBCtJG3G,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACToV,iBAAAA,SCcIpN,ktBAEZhI,YACIqV,MAAAA,IAGJpN,OAQIqN,OAAQ7S,OAAQ4F,OAAQqF,QAOxB7E,KAAMR,OAONS,QAAST,OAOTU,KAAM2E,OAON6H,QACI9U,KAAMwB,QACNyG,YAQJM,QACIvI,KAAMwB,QACNyG,YAQJ8M,UACI/U,KAAMwB,QACNyG,YAQJ+M,OACIhV,MAAOgC,OAAQ4F,QACf/H,MAAO,MAQXoV,IAAKrN,OAAQqF,SAIjBtE,UAEIvI,UACI,QAAgB8U,GACZJ,OAAUzV,KAAKyV,QAChB,4BAEK,sBACRK,EAAgB5M,OAAIlJ,KAAKkJ,OACzB4M,EAAkBJ,SAAI1V,KAAK0V,SAExB1V,KAAKgJ,UACJ8M,EAAQD,EAAO7V,KAAKgJ,QAAS,wBAG1B8M,GAGX/U,eACI,SAAgBf,KAAKwV,OAASxV,KAAKwV,OAC/BG,MAAO3V,KAAKwV,SAMxBJ,OAEIrU,OAAOP,EAAO2I,GACVnJ,KAAKkN,MAAM,SAAU1M,GACrBR,KAAKkN,MAAQ1M,EAAQ,WAAa,sBC7H9B0H,gKAEZhI,YACIkJ,cAAAA,IAGJjB,OAOI4N,OACIpV,KAAMwB,QACNyG,YAQJS,UACI1I,KAAMwB,QACNyG,aAKRU,UACIvI,UACI,UACIgV,MAAS/V,KAAK+V,OACf,gBAIXlW,SAEIkB,uBACIwI,EAAKvJ,KAAKwJ,UAAWC,IACjBA,EAAMuM,KAAK,QAASjW,GAASC,KAAKiW,YAAYlW,EAAO0J,MAC/CyM,IAAI,QAASnW,GAASC,KAAKiW,YAAYlW,EAAO0J,OAS5D1I,QAAQhB,GACJC,KAAKkN,MAAM,QAASnN,IAQxBgB,YAAYhB,EAAO0J,GACfzJ,KAAKkN,MAAM,aAAcnN,EAAO0J,KAKxC1I,UACIf,KAAK0J,wBAGT3I,UACIf,KAAK0J,6BCjFExH,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTiW,UAAAA,SCGIjO,4XAEZC,OAQIiO,IAAK7N,OAOL8N,IAAK9N,OAQLtE,OAAQtB,OAAQ4F,QAQhBf,QAAS7E,OAAQ4F,QAOjBqN,IAAKhI,OAAQrF,QAObQ,KAAMR,OAON+N,GAAInU,QAOJoU,IAAKhO,QAITe,UAEIvI,YACI,YAAYsV,MAAQrW,KAAK4V,GAAK,cAAiB5V,KAAK+I,KAAO,IAAM,UAKzElJ,SACIkB,KAAKP,GACD,UAAYA,WC9ER0H,6MAEZlH,KAAM,kBAENmH,OAEIqO,UACI7V,KAAMwB,QACNyG,kBoBRIV,kJAEZlH,KAAM,mBCFMkH,0JAEZlH,KAAM,2BpBQMkH,yVAEZlH,KAAM,iBAENd,YACIuW,kBAAAA,IAGJtO,OAEIuO,SAAUvU,QAEVwT,OACIhV,KAAM4H,OACNK,QAAS,qBAGbvG,QACI1B,KAAM4H,OACNK,QAAS,qBAKjB/I,SAEIkB,QAAQhB,GACJC,KAAKkN,MAAM,QAASnN,UCzBhBmI,uIAEZlH,KAAM,SAENd,YACIyW,YAAAA,GACAC,eAAAA,GACAC,WAAAA,GACA/M,cAAAA,GACA2M,kBAAAA,IAGJ/J,QACIoK,GACA5H,GACAlD,IAGJ7D,OAOI6B,QACIrJ,MAAOwB,QAASoG,QAChBK,QAAS,KACT7H,SAASP,MAUb0J,OACIvJ,MAAO4H,OAAQpG,SACfpB,SAASP,MAUbuW,QACIpW,MAAO4H,OAAQpG,SACfpB,SAASP,MAUbwI,SACIrI,KAAM4H,OACNK,QAAS,QACT7H,SAASP,GACL,OAA6C,KAArC,QAAS,QAAQuJ,QAAQvJ,MAM7C8I,UAEIvI,gBACI,SAAaf,KAAKgK,QACPhK,KAAKgK,OAGT6L,EAAOA,EAAO7V,KAAKgK,OAAQ,UAAW,WAGjDjJ,UACI,YAAY+J,aACR,SACA+K,OAAO7V,KAAK+W,OAAkB,MAAQ/W,KAAK+W,OAAQ,UACnDlB,OAAO7V,KAAKkK,MAAiB,MAAQlK,KAAKkK,MAAO,SACjDlK,KAAKgX,cACLhX,KAAKiX,aACLjX,KAAKkX,oBAKjBnW,OACI,eC1GQmH,4SAEZlH,KAAM,mBAENmH,OAEIiC,OACIzJ,KAAM4H,OACNsF,mBCNI3F,+TAEZlH,KAAM,kBAENd,YACImK,gBAAAA,IAGJlC,OAOIe,OAAQ/G,QAORuT,SAAUvT,QAOViI,MAAO7B,OAOPQ,KAAMR,OAON8N,IAAK9N,OAOLqN,IAAKhI,OAAQrF,QAObU,MACItI,KAAMwB,QACNyG,aAKRU,UAEIvI,YACI,YAAYsV,MAAQrW,KAAK4V,GAAK,cAAgB,MAGlD7U,UAOI,YANKU,eACGzB,KAAKmX,SACLnX,KAAKmX,QAAUnX,KAAKsK,QAAQuJ,IAAItN,UAAUgE,SAAS,gBAKvD6M,aAAcpX,KAAK+I,QAAU/I,KAAK4V,GAClCyB,aAAcrX,KAAKiJ,KACnBC,OAAUlJ,KAAKkJ,OACfwM,SAAY1V,KAAK0V,iBClFjBxN,wMAEZlH,KAAM,kBAENkK,QAASV,GAETrC,OAOI+I,QAAS3I,OAOT+O,KAAMnV,QAON8G,MACItI,KAAMwB,QACNyG,aAMRU,UAEIvI,YACI,YAAQmQ,QACGlR,KAAKkR,QAERlR,KAAK+I,KACF,IAEH/I,KAAKsX,KACF,KAGJ,aC7CHpP,6KAEZlH,KAAM,aAENd,YACIuK,eAAAA,IAGJiC,QACIwC,GACAlD,IAGJ7D,OAOIoP,MAAOhP,OAOPmC,QAASpC,MAOT2C,KAAM9I,QAONqV,KAAMrV,QAON4I,UAAW5I,QAOXsV,MAAOtV,QAOP6I,KAAM7I,QAONwI,SAAUxI,QAOVuV,KAAMnP,QAIVe,UAEIvI,UAOI,YANKU,eACGzB,KAAK6K,SACL7K,KAAK6K,OAAS7K,KAAKsK,QAAQuJ,IAAItN,UAAUgE,SAAS,kBAInDvK,KAAK8K,aACR+K,EAAO7V,KAAKuX,MAAO,mBACnBvX,KAAKkX,kBACDS,mBAAoB3X,KAAK6K,QAAU7K,KAAKgL,KACxC4M,oBAAqB5X,KAAK6K,QAAU7K,KAAKyX,MACzCI,gBAAiB7X,KAAK+K,UACtB+M,WAAY9X,KAAKwX,KACjBO,YAAa/X,KAAKyX,MAClBO,WAAYhY,KAAKgL,KACjBiN,cAAejY,KAAK2K,aAOpC5J,OACI,OACI8J,OAAQ7K,KAAKiL,YChFT/C,2pBAEZlH,KAAM,sBAENkK,QAASgN,GAEThY,YACIgY,YAAAA,GACAC,aAAAA,GACA1N,eAAAA,GACAD,eAAAA,SC1COtI,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTkY,WAAAA,GACA/N,gBAAAA,GACAI,eAAAA,GACAD,eAAAA,GACAW,mBAAAA,ScNIjD,mLAEZlH,KAAM,aAENd,YACIkY,WAAAA,UbLOlW,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTmY,OAAAA,GACA1B,YAAAA,GACAC,eAAAA,GACA0B,UAAAA,GACAzB,WAAAA,GACA/M,cAAAA,GACA2M,kBAAAA,SCSIvO,uyCAEZlH,KAAM,aAENmH,OAMIoP,OACI5W,KAAM4H,OACNgQ,SAAU/X,IACgD,KAA9C,QAAS,MAAO,UAAUuJ,QAAQvJ,IASlD4K,MACIzK,KAAMgC,OACNiG,QAAS,GAQb4P,YACI7X,KAAMgC,OACNiG,QAAS,GASb4C,WACI7K,KAAMgC,OACNiG,QAAS,IAKjB/I,SAEIkB,KAAKhB,GACDC,KAAKyY,SAASzY,KAAKqL,aAAerL,KAAKwY,WAAaxY,KAAKqL,YAAcrL,KAAKqL,YAAc,EAAGtL,IAGjGgB,KAAKhB,GACDC,KAAKyY,SAASzY,KAAKqL,aAAe,EAAIrL,KAAKqL,YAAcrL,KAAKqL,YAAc,EAAGtL,IAGnFgB,SAASqK,EAAMrL,GACRA,EAAM2Y,cAAcnN,WAAWhF,UAAUgE,SAAS,cAI9DvK,KAAK2Y,cAAcvN,GAEVpL,KAAKkN,MAAM,WAAY9B,EAAMrL,KAGvCgB,cAAcqK,GACVpL,KAAKqL,cAAgBD,IACvBpL,KAAKqL,YAAcD,IAIfrK,WACI,WACMyK,EAAYxL,KAAKwL,UAAY,EAAIxL,KAAKwL,UAAY,EAAGxL,KAAKwL,gBAE/CxL,KAAKqL,aAAeG,EAAaxL,KAAKqL,YAAeG,EAAY,EAAK,UACnEA,EAAYoN,EAC1BC,EAAW7Y,KAAKwY,WAAa/M,EAAezL,KAAKwY,WAAa/M,EAC9DmD,EAAOgK,EAAYC,EAAUrN,GAEnCoN,GAAcA,EAAYhK,EAAO,EAAKA,EAAO,GAE7B,GACZhD,EAAM5E,MAAMoE,KAAM,IAGnBwN,EAAY,GACXhN,EAAM5E,MAAM8R,iBAGZ,MAAQF,EAAW5W,EAAI6W,EAAS7W,IAChC4J,EAAM5E,MAAMoE,KAAMpJ,cAGPhC,KAAKwY,aACbxY,KAAKwY,WAAa,EAAIK,GACrBjN,EAAM5E,MAAM8R,aAGhBlN,EAAM5E,MAAMoE,KAAMpL,KAAKwY,cAGpB5M,IAKftC,UAEIvI,QACI,YAAYgY,YAGhBhY,UACI,oBAEQ,mBAAqBf,KAAKuX,UAE3BzB,IAKf/U,OACI,OACIsK,YAAarL,KAAKoL,YC3JFzB,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACT2L,WAAAA,gBCwCI3D,k3BAEZlH,KAAM,eAENd,YACI4L,SAAAA,GACAwI,UAAAA,GACAvI,UAAAA,GACAwI,aAAAA,IAGJrJ,QAASiE,GAETzC,QACIwC,GACAC,GACAnD,IAGJ7D,OAOI6Q,OAAQ7W,SAIZmH,UAEIvI,eACI,QAAqBf,KAAKgZ,OAAS,gBAAkBhZ,KAAKyU,gCAC9CwE,aAAexQ,cAA2BA,GAG1D1H,sBACI,OAxCiB,iBAyCQ6I,QAAQ,MAAO,KAAO5J,KAAKiZ,UAAY,aAAe,IAC3EjZ,KAAKkZ,sBACJlZ,KAAK0I,SAAW,IACnB0H,KAAK,YWtFJlO,GAAayH,KAExBb,iBAAQ7G,EAAKe,GACTd,GAAahC,YACTiZ,YAAAA,SVCRnY,KAAM,SAENmH,OAQIe,QACIvI,MAAO4H,OAAQ5F,QACfiG,QAAS,IAKjBwM,OAEIrU,OAAOP,EAAO4Y,GACVpZ,KAAKqZ,UAAYD,EACjBpZ,KAAKwM,aAAehM,IAK5BX,SAOIkB,SACI,YAAYuY,OAAO1Q,QACdtD,OAAO,CAAC8G,EAAOpK,MACHoK,EAAMiK,KAElBnG,IAAI,CAAC9D,EAAOpK,KACLoK,EAAME,MAAQF,EAAMC,MAASD,EAAMC,KAAKC,OACxCF,EAAMC,KAAOkN,EAAOnN,EAAMC,MACtBC,IAAKF,EAAME,IAAMtK,iBAarCjB,MAAMgM,GACF,YAAYyM,eAAezM,IAAU/M,KAAKkM,iBAAiBa,IAAU/M,KAAKkM,iBAAiB,IAS/FnL,eAAeuL,GACX,SAAatM,KAAKuM,SAASjH,OAAO,CAAC8G,EAAOpK,KACtC,GAAGoK,EAAME,MAAQA,EACb,YAEIF,EAAMC,MAAQD,EAAMC,KAAKC,MAAQA,EACrC,yBAaZvL,iBAAiBgM,GACb,YAAYR,SAASQ,IAAU,MASnChM,cAAc0Y,GACV,QAAatE,EAAYsE,EAAMpN,MAAyBoN,EAAMnN,KAAOmN,EAA9BA,EAAMpN,KAAKC,aAEjCtM,KAAKuM,SAAU,CAACH,EAAOpK,KACpC,GAAGyX,IAAUrN,EACT,YAEIA,EAAMC,MAAQD,EAAMC,KAAKC,MAAQA,EACrC,YAEIF,EAAME,KAAOF,EAAME,MAAQA,EAC/B,YAEItK,IAAMyX,EACV,sBAShB1Y,OACI,OACIsY,UAAW,KACX7M,aAAcxM,KAAKkJ,SAI3BnI,OAAO2Y,GACH,YAAYD,MAAMzZ,KAAKwM,qBC1HftE,oYAEZlH,KAAM,sBAENmH,OAOIe,QACIvI,MAAO4H,OAAQ5F,QACfiG,QAAS,GAQb2D,QACI5L,KAAM2H,MACNuF,cAKRhO,SAEIkB,QAAQhB,EAAO0Z,GACXzZ,KAAKkN,MAAM,QAASnN,EAAO0Z,KAKnCnQ,YAIAvI,OACI,eCpBQmH,34/BCxBJuE"}