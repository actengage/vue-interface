{"version":3,"file":"vue-interface.min.js","sources":["../src/Components/Dropzone/Dropzone.vue","../src/Components/Dropzone/index.js","../src/Components/FilePreview/FilePreview.vue","../src/Components/FilePreview/index.js","../src/Components/FormControl/FormControl.vue","../node_modules/intersection-observer/intersection-observer.js","../src/Components/InfiniteScrolling/InfiniteScrolling.vue","../src/Components/InputGroup/InputGroup.vue","../src/Components/InputGroup/index.js","../src/Components/LightSwitchField/LightSwitchField.vue","../src/Components/LightSwitchField/index.js","../src/Components/ListGroup/ListGroupItem.vue","../src/Components/ListGroup/ListGroup.vue","../src/Components/Navbar/NavbarBrand.vue","../src/Components/Navbar/NavbarTogglerIcon.vue","../src/Components/Navbar/NavbarToggler.vue","../src/Components/Navbar/Navbar.vue","../src/Components/Navigation/NavigationError.vue","../src/Components/Navigation/NavigationLink.vue","../src/Components/Navigation/NavigationItem.vue","../src/Components/Navigation/Navigation.vue","../src/Components/Navigation/NavigationDropdown.vue","../src/Components/Navigation/index.js","../src/Components/Navbar/index.js","../src/Components/Pagination/Pagination.vue","../src/Components/SelectField/SelectField.vue","../src/Components/SelectField/index.js","../src/Components/SlideDeck/Slides.vue","../src/Components/SlideDeck/SlideDeckControls.vue","../src/Components/RadioField/index.js","../src/Components/CheckboxField/CheckboxField.vue","../src/Components/CheckboxField/index.js","../src/Components/FormControl/index.js","../src/Components/InputGroup/InputGroupText.vue","../src/Components/InputGroup/InputGroupAppend.vue","../src/Components/InputGroup/InputGroupPrepend.vue","../src/Components/ListGroup/index.js","../src/Components/Navbar/NavbarCollapse.vue","../src/Components/Navbar/NavbarText.vue","../src/Components/Navbar/NavbarNav.vue","../src/Components/Pagination/index.js","../src/Components/SlideDeck/SlideDeck.vue"],"sourcesContent":["<template>\n\n    <div class=\"dropzone\" :class=\"{'is-dragging': isDragging}\" @drop.prevent=\"onDrop\" @dragover.prevent=\"onDragover\" @dragenter.prevent=\"onDragenter\" @dragleave.prevent=\"onDragleave\">\n        <slot name=\"placeholder\">\n            <div class=\"dropzone-placeholder text-center\">\n                <card>\n                    <card-body>\n                        <h1 class=\"mt-4\">Drag & Drop</h1>\n                        <p>Drag and drop your files here to upload them!</p>\n                        <div class=\"mt-3\"><i class=\"fa fa-image\"/></div>\n                    </card-body>\n                </card>\n            </div>\n        </slot>\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport Card from '../Card';\nimport CardBody from '../Card/CardBody';\n\nexport default {\n\n    name: 'dropzone',\n\n    components: {\n        Card,\n        CardBody\n    },\n\n    methods: {\n\n        onDrop(event) {\n            this.isDragging = false;\n            this.$emit('drop', event);\n        },\n\n        onDragover(event) {\n            this.isDragging = true;\n            this.$emit('dragover', event);\n        },\n\n        onDragenter(event) {\n            this.isDragging = true;\n            this.$emit('dragenter', event);\n            this.onDragover(event);\n        },\n\n        onDragleave(event) {\n            this.isDragging = false;\n            this.$emit('dragleave', event);\n        }\n\n    },\n\n    data() {\n        return {\n            files: null,\n            isDragging: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.dropzone {\n    position: relative;\n\n    p {\n        font-size: 18px;\n    }\n\n    .fa-image {\n        font-size: 100px;\n    }\n\n    .dropzone-placeholder {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        width: 100%;\n        height: 100%;\n        background: white;\n    }\n\n    &.is-dragging .dropzone-placeholder {\n        display: block;\n    }\n}\n</style>\n","import Dropzone from './Dropzone';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Dropzone\n        });\n    }\n\n});\n\nexport default Dropzone;\n","<template>\n\n    <div class=\"file-preview\" :class=\"{'has-image': !!image}\">\n\n        <div class=\"file-preview-inner\">\n\n            <a v-if=\"!hideClose\" href=\"#\" class=\"file-preview-close\" @click.prevent=\"$emit('close', file)\">\n                <i class=\"fa fa-times-circle\"></i>\n            </a>\n\n            <div v-if=\"!!poster || isImage\" class=\"file-preview-image\">\n                <img v-if=\"!!poster || !!image\" :src=\"poster || image\" class=\"file-preview-thumbnail\" @load=\"onLoad\"/>\n            </div>\n\n            <div v-else v-ready=\"() => this.$emit('loaded')\" class=\"file-preview-icon\">\n                <i class=\"fa\" :class=\"{'fa-file-video-o': isVideo, 'fa-file-o': !isVideo}\"></i>\n            </div>\n\n            <progress-bar\n                v-if=\"progress || isImage && loaded !== false\"\n                v-ready=\"readFile\"\n                :value=\"progress || loaded || 0\"\n                :height=\"10\"\n                class=\"mt-3\"/>\n\n            <div class=\"file-preview-filename\" v-html=\"name\"></div>\n            <div class=\"file-preview-filesize\">({{size}})</div>\n        <div>\n\n    </div>\n\n</template>\n\n<script>\nimport moment from 'moment';\nimport ProgressBar from '../ProgressBar';\nimport { isFunction } from '../../Helpers/Functions';\nimport readFile from '../../Helpers/ReadFile/ReadFile';\n\nexport default {\n\n    name: 'file-preview',\n\n    components: {\n        ProgressBar\n    },\n\n    directives: {\n        ready: {\n            inserted(el, binding, vnode) {\n                if (isFunction(binding.value)) {\n                    vnode.context.$nextTick(binding.value);\n                }\n            }\n        }\n    },\n\n    props: {\n\n        /**\n         * Hide the close button for the preview\n         *\n         * @property Object\n         */\n        hideClose: Boolean,\n\n        /**\n         * The uploaded File object\n         *\n         * @property Object\n         */\n        file: {\n            type: [Object, File],\n            required: true\n        },\n\n        /**\n         * An image URL to instead of using the file reader.\n         * @property {String}\n         */\n        poster: String,\n\n        /**\n         * Progress that can be passed from a parent comparent, for instance\n         * use to show an ajax request with a single progress bar. If a progress\n         * value is passed, even a 0, the progress bar will not be used to show\n         * the progress of the file reader.\n         * @property {Number}\n         */\n        progress: {\n            type: Number,\n            default: undefined\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * Get the file name\n         *\n         * @property String\n         */\n        name() {\n            return this.file instanceof File ? this.file.name : this.file.orig_filename;\n        },\n\n        /**\n         * Get the file extension\n         *\n         * @property String\n         */\n        extension() {\n            return this.file instanceof File ? this.file.name.split('.').pop().toLowerCase() : this.file.extension;\n        },\n\n        /**\n         * Get the file formatted size\n         *\n         * @property String\n         */\n        size() {\n            return this.bytesToSize(this.file.size);\n        },\n\n        /**\n         * Get the file type\n         *\n         * @property String\n         */\n        type() {\n            return this.file instanceof File ? this.file.type : this.file.mime;\n        },\n\n        /**\n         * Check to see if the file is an image.\n         *\n         * @property String\n         */\n        isImage() {\n            return !!this.type.match(/^image/);\n        },\n\n        /**\n         * Check to see if the file is a video.\n         *\n         * @property String\n         */\n        isVideo() {\n            return !!this.type.match(/^video/);\n        },\n\n        /**\n         * Get the last time the file was modified (as timestamp)\n         *\n         * @property String\n         */\n        lastModified() {\n            return this.file instanceof File ? this.file.lastModified : null;\n        },\n\n        /**\n         * Get the last time the file was modified (as Date)\n         *\n         * @property String\n         */\n        lastModifiedDate() {\n            return this.file instanceof File ? this.file.lastModifiedDate : null;\n        }\n\n    },\n\n    methods: {\n\n        readFile() {\n            if (this.file instanceof File) {\n                const start = moment();\n\n                this.loaded = 0;\n\n                this.$nextTick(() => {\n                    readFile(this.file, e => {\n                        if (e.lengthComputable) {\n                            this.$emit('progress', this.loaded = parseInt((e.loaded / e.total) * 100, 10));\n                        }\n                    }).then(event => {\n                        this.$emit('read', event);\n\n                        setTimeout(() => {\n                            this.image = event.target.result;\n                            this.$nextTick(() => {\n                                this.loaded = false;\n                            });\n                        }, 500 - moment().diff(start));\n                    }, error => {\n                        this.$emit('error', error);\n                    });\n                });\n            }\n        },\n\n        bytesToSize(bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n            if (bytes === 0) return '0 Byte';\n            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        },\n\n        onLoad(event) {\n            this.$emit('loaded');\n        }\n\n    },\n\n    data() {\n        return {\n            image: this.file.url,\n            loaded: this.file instanceof File ? 0 : false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n$file-preview-close-width: 1rem * 2;\n$file-preview-close-height: 1rem * 2;\n\n.file-preview {\n    width: 100%;\n\n    .file-preview-inner {\n        position: relative;\n    }\n\n    .file-preview-close {\n        top: 0;\n        right: 0;\n        padding: 0;\n        width: 24px;\n        height: 24px;\n        background: white;\n        position: absolute;\n        border-radius: 100%;\n        transform: translate(33%, -33%);\n\n        i {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            font-size: 24px;\n            text-align: center;\n        }\n    }\n\n    .file-preview-icon {\n        text-align: center;\n        font-size: 60px;\n        padding: 1rem;\n    }\n\n    .file-preview-thumbnail {\n        width: 100%;\n        max-width: 100%;\n    }\n\n    .file-preview-filename {\n        overflow: hidden;\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .file-preview-filename,\n    .file-preview-filesize {\n        text-align: center;\n    }\n\n}\n\n</style>\n","import FilePreview from './FilePreview';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FilePreview\n        });\n    }\n\n});\n\nexport default FilePreview;\n","<template>\n\n    <component\n        :name=\"name\"\n        :id=\"id\"\n        :is=\"!select ? 'input' : 'select'\"\n        :type=\"!select ? type : false\"\n        :value=\"value\"\n        :pattern=\"pattern\"\n        :required=\"required\"\n        :readonly=\"readonly\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled || readonly\"\n        :class=\"mergeClasses(controlClasses, colorableClasses)\"\n        :aria-label=\"label\"\n        :aria-describedby=\"id\"\n        v-bind-events=\"bindEvents\"/>\n\n</template>\n\n<script>\n\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'form-control',\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Is the element a select?\n         *\n         * @property String\n         */\n        select: Boolean,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n};\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","<template>\n    <div class=\"infinite-scrolling\" :style=\"{height: heightUnit, background: background}\">\n        <activity-indicator v-if=\"activity\" :size=\"size\" :type=\"type\" center/>\n    </div>\n</template>\n\n<script>\nimport 'intersection-observer';\nimport unit from '../../Helpers/Unit';\nimport ActivityIndicator from '../ActivityIndicator';\n\nexport default {\n\n    name: 'infinite-scrolling',\n\n    components: {\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Is the activity indicator showing\n         *\n         * @property String\n         */\n        activity: Boolean,\n\n        /**\n         * The activity indicator background style\n         *\n         * @property String\n         */\n        background: String,\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        height: {\n            type: Number,\n            default: 100\n        },\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        size: String,\n\n        /**\n         * The activity indicator type\n         *\n         * @property String\n         */\n        type: String,\n\n        /**\n         * The scroll observer threshold for when an element is considered\n         * into view. Must be a validate between 0 and 1, and is a percentage.\n         *\n         * @property Number\n         */\n        threshold: {\n            type: Number,\n            default: 0.75,\n            validate(value) {\n                return value >= 0 && value <= 1;\n            }\n        }\n\n    },\n\n    methods: {\n\n        scrollIntoViewport(entry) {\n            this.$emit('scroll:in', entry);\n\n            if (!this.activity) {\n                this.$emit('load', entry);\n            }\n        },\n\n        scrollOutViewport(entry) {\n            this.$emit('scroll:out', entry);\n        }\n\n    },\n\n    computed: {\n\n        heightUnit() {\n            return unit(this.height);\n        }\n\n    },\n\n    mounted() {\n        this.$nextTick(() => {\n            new IntersectionObserver((entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting && !this.hasScrolledIntoViewport) {\n                        this.scrollIntoViewport(entry, observer);\n                        this.hasScrolledIntoViewport = true;\n                    }\n                    else if (this.hasScrolledIntoViewport) {\n                        this.scrollOutViewport(entry, observer);\n                        this.hasScrolledIntoViewport = false;\n                    }\n                });\n            }, {\n                threshold: this.threshold\n            }).observe(this.$el);\n        });\n    },\n\n    data() {\n        return {\n            hasScrolledIntoViewport: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.infinite-scrolling {\n    position: relative;\n\n}\n</style>\n","<template>\n\n    <div class=\"input-group\" :class=\"mergeClasses(colorableClasses, sizeableClass)\">\n\n        <slot name=\"prepend\">\n            <template v-if=\"prepend instanceof Array\">\n                <input-group-prepend>\n                    <input-group-text v-for=\"value in prepend\" :text=\"value\"/>\n                </input-group-prepend>\n            </template>\n            <template v-else-if=\"prepend\">\n                <input-group-prepend text>{{prepend}}</input-group-prepend>\n            </template>\n        </slot>\n\n        <slot/>\n\n        <slot name=\"append\">\n            <template v-if=\"append instanceof Array\">\n                <input-group-append>\n                    <input-group-text v-for=\"value in append\" :text=\"value\"/>\n                </input-group-append>\n            </template>\n            <template v-else-if=\"append\">\n                <input-group-append text>{{append}}</input-group-append>\n            </template>\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Sizeable from '../../Mixins/Sizeable';\nimport InputGroupText from './InputGroupText';\nimport Colorable from '../../Mixins/Colorable';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'input-group',\n\n    components: {\n        InputGroupText,\n        InputGroupAppend,\n        InputGroupPrepend\n    },\n\n    mixins: [\n        HasSlots,\n        Sizeable,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        append: [Array, Number, String],\n\n        prepend: [Array, Number, String]\n\n    }\n\n};\n</script>\n","import InputGroup from './InputGroup';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport InputGroupText from './InputGroupText';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            InputGroup,\n            InputGroupAppend,\n            InputGroupPrepend,\n            InputGroupText\n        });\n    }\n\n});\n\nexport * from './InputGroupAppend';\nexport * from './InputGroupPrepend';\nexport * from './InputGroupText';\nexport default InputGroup;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\" />\n        </slot>\n\n        <div :class=\"controlClasses\" tabindex=\"0\" @click=\"toggle()\" @keyup.32=\"toggle()\" @keyup.37=\"toggle(offValue)\" @keyup.39=\"toggle(onValue)\">\n            <div class=\"light-switch-handle\"></div>\n        \t<div class=\"light-switch-container\">\n        \t\t<div class=\"light-switch-label on-value\"></div>\n        \t\t<div class=\"light-switch-label off-value\"></div>\n        \t</div>\n        </div>\n\n        <form-control :name=\"name\" :value=\"value\" :id=\"id\" class=\"d-none\"/>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport { isUndefined } from '../../Helpers/Functions';\nimport FormControl from '../FormControl';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nexport default {\n\n    name: 'light-switch-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormControl,\n        FormFeedback\n    },\n\n    mixins: [\n        FormControlMixin\n    ],\n\n    props: {\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control light-switch'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        activeClass: {\n            type: String,\n            default: 'on'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        onValue: {\n            default: 1\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        offValue: {\n            default: 0\n        }\n\n    },\n\n    computed: {\n\n        isActive: function() {\n            return this.value === this.onValue;\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : ''),\n                (this.dragging ? 'is-dragging' : ''),\n                (this.isActive ? 'is-active' : '')\n            ].join(' ');\n        }\n\n    },\n\n    methods: {\n\n        getTransitionInMilliseconds() {\n            const duration = getComputedStyle(this.$el.querySelector('.light-switch-handle')).transitionDuration;\n            const numeric = parseFloat(duration, 10);\n            const unit = duration.match(/m?s/);\n\n            switch (unit[0]) {\n            case 's':\n                return numeric * 1000;\n            case 'ms':\n                return numeric;\n            }\n\n            throw new Error(`\"${unit[0]}\" is not a valid unit of measure. Unit must be \"s\" (seconds) or \"ms\" (milliseconds).`);\n        },\n\n        toggle(value) {\n            this.$emit('input', !isUndefined(value) ? value : (this.isActive ? this.offValue : this.onValue));\n        }\n\n    },\n\n    watch: {\n        value() {\n            this.dragging = true;\n\n            setTimeout(() => {\n                this.dragging = false;\n            }, this.getTransitionInMilliseconds());\n        }\n    },\n\n    data() {\n        return {\n            dragging: false\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n@import './node_modules/bootstrap/scss/mixins.scss';\n\n$light-switch-animation-easing: ease;\n$light-switch-animation-length: 1s / 3;\n$light-switch-handle-width: $font-size-base * 2;\n$light-switch-handle-height: $light-switch-handle-width;\n$light-switch-size-width: $light-switch-handle-width * 1.5;\n$light-switch-size-height: $light-switch-handle-height;\n$light-switch-label-width: $light-switch-handle-width;\n$light-switch-label-height: $light-switch-handle-height;\n\n@mixin light-switch-size($size, $modifier) {\n    $handle-width: $light-switch-handle-width * $modifier;\n    $handle-height: $handle-width;\n    $size-width: $handle-width * 1.5;\n    $size-height: $handle-height;\n    $label-width: $handle-width;\n    $label-height: $handle-height;\n\n    &.light-switch-#{$size} {\n        padding: 0;\n    \twidth: $size-width;\n    \theight: $handle-height;\n    \tborder-radius: $handle-width;\n\n        .light-switch-handle {\n            width: $handle-width;\n            height: $handle-height;\n        }\n\n        .light-switch-container {\n            left: -$handle-width / 2;\n            width: $label-width * 2;\n            height: $label-height;\n        }\n\n        &.is-active {\n            .light-switch-handle {\n                left: $handle-width / 2;\n            }\n        }\n\n        .light-switch-label {\n            width: $label-width;\n            height: $label-height;\n\n            &.on-value {\n                //border-radius: $handle-width 0 0 $handle-width;\n            }\n\n            &.off-value {\n                //border-radius: 0 $handle-width $handle-width 0;\n            }\n        }\n    }\n}\n\n.light-switch {\n    padding: 0;\n\tposition: relative;\n\tborder: none;\n\twidth: $light-switch-size-width;\n\theight: $light-switch-handle-height;\n\tborder-radius: $light-switch-handle-width;\n\toverflow: hidden;\n\tcursor: pointer;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\toverflow: hidden;\n\n    @include light-switch-size('xs', .5);\n    @include light-switch-size('sm', .75);\n    @include light-switch-size('md', 1);\n    @include light-switch-size('lg', 1.5);\n    @include light-switch-size('xl', 2);\n\n    @include form-validation-state(\"valid\", $form-feedback-valid-color);\n    @include form-validation-state(\"invalid\", $form-feedback-invalid-color);\n\n    &.is-invalid {\n        border: 1px solid $form-feedback-invalid-color;\n\n        & .light-switch-handle {\n\n\n        }\n\n        &:not(.is-active) .light-switch-handle {\n            background: $form-feedback-invalid-color;\n        }\n\n        .light-switch-label {\n            &.on-value {\n                left: 0;\n            }\n            &.off-value {\n                right: 0;\n            }\n        }\n    }\n\n    .light-switch-handle {\n        top: 0;\n        left: 0;\n        z-index: 1;\n        position: absolute;\n        border-radius: 100%;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n        width: $light-switch-handle-width;\n        height: $light-switch-handle-height;\n        background: white;\n        background-image: radial-gradient(white, rgb(250, 250, 250) 50%, white 75%);\n        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.1);\n    }\n\n    .light-switch-container {\n        position: relative;\n        left: -$light-switch-handle-width / 2;\n        top: ($light-switch-handle-height -  $light-switch-label-height) / 2;\n        width: $light-switch-label-width * 2;\n        height: $light-switch-label-height;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n    }\n\n    &:not(.is-active) {\n        &:not(.is-dragging) .on-value {\n            visibility: hidden;\n        }\n    }\n\n    &.is-active {\n        &:not(.is-dragging) .off-value {\n            visibility: hidden;\n        }\n\n        .light-switch-handle {\n            left: $light-switch-handle-width / 2;\n        }\n\n        .light-switch-container {\n            left: 0;\n        }\n    }\n\n    .light-switch-label {\n        position: absolute;\n        width: $light-switch-label-width;\n        height: $light-switch-label-height;\n        //box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n\n        &.on-value {\n            left: 0;\n            background: #00b007;\n            //border-radius: $light-switch-handle-width 0 0 $light-switch-handle-width;\n        }\n\n        &.off-value {\n            right: 0;\n            background: #ebedef;\n            //border-radius: 0 $light-switch-handle-width $light-switch-handle-width 0;\n        }\n    }\n\n\n}\n\n</style>\n","import LightSwitchField from './LightSwitchField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            LightSwitchField\n        });\n    }\n\n});\n\nexport default LightSwitchField;\n","<template>\n    <router-link v-if=\"to\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </router-link>\n    <a v-elseif=\"href\" :href=\"href\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </a>\n    <button v-else-if=\"action\" type=\"button\" :class=\"classes\" @click.prevent=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </button>\n    <div v-else :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </div>\n</template>\n\n<script>\n\nimport { isObject } from '../../Helpers/Functions';\nimport Badge from '../Badge';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        Badge\n    },\n\n    props: {\n\n        /**\n         * The badge label (if number or string) or object of options to pass to\n         * the component.\n         *\n         * @property String|Object\n         */\n        badge: [Number, String, Object],\n\n        /**\n         * The list group item href attribute.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The list group item variant.\n         *\n         * @property String\n         */\n        variant: String,\n\n        /**\n         * Optionally pass the item as a object to use programmatically later.\n         *\n         * @property String\n         */\n        item: Object,\n\n        /**\n         * The list group item an action, or clickable item.\n         *\n         * @property Boolean\n         */\n        action: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item active.\n         *\n         * @property Boolean\n         */\n        active: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item disabled.\n         *\n         * @property Boolean\n         */\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list item label.\n         *\n         * @property Object\n         */\n        label: {\n            type: [Number, String],\n            value: null\n        },\n\n        /**\n         * The to attribute to be passed to a <router-link> component.\n         *\n         * @property String\n         */\n        to: [String, Object]\n\n    },\n\n    computed: {\n\n        classes() {\n            const classes = prefix({\n                'action': this.action\n            }, 'list-group-item');\n\n            classes['list-group-item'] = true;\n            classes['active'] = this.active;\n            classes['disabled'] = this.disabled;\n\n            if (this.variant) {\n                classes[prefix(this.variant, 'list-group-item')] = true;\n            }\n\n            return classes;\n        },\n\n        badgeOptions() {\n            return isObject(this.badge) ? this.badge : {\n                label: this.badge\n            };\n        }\n\n    },\n\n    watch: {\n\n        active(value, prevValue) {\n            this.$emit('toggle', value);\n            this.$emit(value ? 'activate' : 'deactivate');\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"list-group\" :class=\"classes\">\n        <slot/>\n    </div>\n</template>\n\n<script>\n\nimport { each } from '../../Helpers/Functions';\nimport ListGroupItem from './ListGroupItem';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        ListGroupItem\n    },\n\n    props: {\n\n        /**\n         * The list group appear flush (without some borders).\n         *\n         * @property Boolean\n         */\n        flush: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Can activate multiple list items\n         *\n         * @property Boolean\n         */\n        multiple: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    computed: {\n        classes() {\n            return prefix({\n                'flush': this.flush\n            }, 'list-group');\n        }\n    },\n\n    methods: {\n\n        bindEventsToChildren() {\n            each(this.$children, child => {\n                child.$off('click', event => this.onClickItem(event, child));\n                child.$on('click', event => this.onClickItem(event, child));\n            });\n        },\n\n        /**\n         * The callback function for the `click` event.\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * The callback function for the child `click` events.\n         *\n         * @return void\n         */\n        onClickItem(event, child) {\n            this.$emit('item:click', event, child);\n        }\n\n    },\n\n    mounted() {\n        this.bindEventsToChildren();\n    },\n\n    updated() {\n        this.bindEventsToChildren();\n    }\n\n};\n</script>\n","<template>\n    <component class=\"navbar-brand\" :class=\"{'h1': h1}\" :is=\"component\" :to=\"to\" :href=\"href || to ? '#' : null\">\n        <img v-if=\"src\" class=\"d-inline-block align-center\" :src=\"src\" :width=\"unit(width)\" :height=\"unit(height)\" :alt=\"alt\"/>\n        <slot/>\n    </component>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\n\nexport default {\n\n    props: {\n\n        /**\n         * The img `alt` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        alt: String,\n\n        /**\n         * The HTML wrapping tag.\n         *\n         * @property Object\n         */\n        tag: String,\n\n        /**\n         * The img `width` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        width: [Number, String],\n\n        /**\n         * The img `height` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        height: [Number, String],\n\n        /**\n         * The `to` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        to: [Object, String],\n\n        /**\n         * The `href` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * Append the `h1` class to increase the display size\n         *\n         * @property Object\n         */\n        h1: Boolean,\n\n        /**\n         * If a `src` attribute is passed, then use it to add an img tag\n         *\n         * @property Object\n         */\n        src: String\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : (this.href ? 'a' : 'span'));\n        }\n\n    },\n\n    methods: {\n        unit(value) {\n            return unit(value);\n        }\n    }\n\n};\n</script>\n","<template>\n    <span class=\"navbar-toggler-icon\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-toggler-icon'\n\n};\n</script>\n","<template>\n    <button\n        type=\"button\"\n        class=\"navbar-toggler\"\n        data-toggle=\"collapse\"\n        :data-target=\"target\"\n        :aria-controls=\"target\"\n        :aria-expanded=\"expanded\"\n        :aria-label=\"label\"\n        @click=\"onClick\">\n        <slot><navbar-toggler-icon/></slot>\n    </button>\n</template>\n\n<script>\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\n\nexport default {\n\n    name: 'navbar-toggler',\n\n    components: {\n        NavbarTogglerIcon\n    },\n\n    props: {\n\n        expanded: Boolean,\n\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n\n        target: {\n            type: String,\n            default: '.navbar-collapse'\n        }\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <nav :class=\"classes\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport Colorable from '../../Mixins/Colorable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport { isBoolean } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'navbar',\n\n    components: {\n        NavbarBrand,\n        NavbarCollapse,\n        NavbarText,\n        NavbarToggler,\n        NavbarTogglerIcon\n    },\n\n    mixins: [\n        Variant,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Expand the navbar. If true, applies to all size, otherwise pass a string.\n         *\n         * @property Object\n         */\n        expand: {\n            type: [Boolean, String],\n            default: 'lg',\n            validate(value) {\n                ['xs', 'sm', 'md', 'lg', 'xl'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be fixed at the top.\n         *\n         * @property String\n         */\n        fixed: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be stickied at the top.\n         *\n         * @property String\n         */\n        sticky: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The variant attribute\n         *\n         * @property String\n         */\n        variant: {\n            type: String,\n            default: 'light',\n            validate(value) {\n                return ['light', 'dark'].indexOf(value) !== -1;\n            }\n        }\n\n    },\n\n    computed: {\n\n        expandedClass() {\n            if (isBoolean(this.expand)) {\n                return this.expand;\n            }\n\n            return prefix(prefix(this.expand, 'expand'), 'navbar');\n        },\n\n        classes() {\n            return this.mergeClasses(\n                'navbar',\n                prefix(this.sticky === true ? 'top' : this.sticky, 'sticky'),\n                prefix(this.fixed === true ? 'top' : this.fixed, 'fixed'),\n                this.expandedClass,\n                this.variantClass,\n                this.colorableClasses\n            );\n        }\n    },\n\n    data() {\n        return {};\n    }\n\n};\n</script>\n","<template>\n    <span class=\"navigation-error fa-stack fa-md\" :title=\"error\">\n        <i class=\"fa fa-stack-2x fa-certificate\"/>\n        <i class=\"fa fa-stack-1x fa-exclamation fa-inverse\"/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navigation-error',\n\n    props: {\n\n        error: {\n            type: String,\n            required: true\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/_functions.scss';\n@import './node_modules/bootstrap/scss/_variables.scss';\n\n.navigation-error {\n    color: $danger;\n}\n</style>\n","<template>\n    <component :is=\"component\" :href=\"href || (to ? '#' : null)\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n        <navigation-error v-if=\"error\" :error=\"error\"/>\n    </component>\n</template>\n\n<script>\nimport NavigationError from './NavigationError';\n\nexport default {\n\n    name: 'navigation-link',\n\n    components: {\n        NavigationError\n    },\n\n    props: {\n\n        /**\n         * Is the navigation item active\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * Is the navigation item disabled\n         *\n         * @prop {Boolean}\n         */\n        disabled: Boolean,\n\n        /**\n         * The error string.\n         *\n         * @prop {String}\n         */\n        error: String,\n\n        /**\n         * The href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * The component HTML tag\n         *\n         * @prop {String}\n         */\n        tag: String,\n\n        /**\n         * The to attribute, will be passed to router-link.\n         *\n         * @prop {String}\n         */\n        to: [Object, String],\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : 'a');\n        },\n\n        classes() {\n            this.$nextTick(() => {\n                if (!this.isItem) {\n                    this.isItem = !this.$parent.$el.classList.contains('nav-item');\n                }\n            });\n\n            return {\n                'nav-link': !!this.href || !!this.to,\n                'nav-item': !!this.item,\n                'active': this.active,\n                'disabled': this.disabled\n            };\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <component :is=\"component\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n    </component>\n</template>\n\n<script>\nimport NavigationLink from './NavigationLink';\n\nexport default {\n\n    name: 'navigation-item',\n\n    extends: NavigationLink,\n\n    props: {\n\n        /**\n         * The HTML element\n         *\n         * @prop {String}\n         */\n        element: String,\n\n        /**\n         * Is the component a list element\n         *\n         * @prop {Boolean}\n         */\n        list: Boolean,\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    computed: {\n\n        component() {\n            if (this.element) {\n                return this.element;\n            }\n            else if (this.href) {\n                return 'a';\n            }\n            else if (this.list) {\n                return 'li';\n            }\n\n            return 'div';\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <nav class=\"nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'navigation',\n\n    components: {\n        NavigationItem\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Helper to add the justify-content-X class.\n         *\n         * @prop {Array}\n         */\n        align: String,\n\n        /**\n         * An array of buttons\n         *\n         * @prop {Array}\n         */\n        buttons: Array,\n\n        /**\n         * The navigation inside a card\n         *\n         * @prop {Boolean}\n         */\n        card: Boolean,\n\n        /**\n         * Justify nav items to fill the width equally (using flex).\n         *\n         * @prop {Array}\n         */\n        fill: Boolean,\n\n        /**\n         * Add `nav-justified` class to the component.\n         *\n         * @prop {Array}\n         */\n        justified: Boolean,\n\n        /**\n         * Display items as pill shapes\n         *\n         * @prop {Array}\n         */\n        pills: Boolean,\n\n        /**\n         * Display items as tab shapes\n         *\n         * @prop {Array}\n         */\n        tabs: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @prop {Boolean}\n         */\n        vertical: Boolean,\n\n        /**\n         * The role attribute\n         *\n         * @prop {String}\n         */\n        role: String\n\n    },\n\n    computed: {\n\n        classes() {\n            this.$nextTick(() => {\n                if (!this.isCard) {\n                    this.isCard = this.$parent.$el.classList.contains('card-header');\n                }\n            });\n\n            return this.mergeClasses(\n                prefix(this.align, 'justify-content'),\n                this.colorableClasses, {\n                    'card-header-tabs': this.isCard && this.tabs,\n                    'card-header-pills': this.isCard && this.pills,\n                    'nav-justified': this.justified,\n                    'nav-fill': this.fill,\n                    'nav-pills': this.pills,\n                    'nav-tabs': this.tabs,\n                    'flex-column': this.vertical\n                }\n            );\n        }\n\n    },\n\n    data() {\n        return {\n            isCard: this.card\n        };\n    }\n\n};\n</script>\n","<template>\n\n    <navigation-item class=\"dropdown\">\n\n        <slot name=\"toggle-button\">\n            <navigation-link\n                href=\"#\"\n                class=\"dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                :aria-expanded=\"isDropdownShowing\"\n                @click.native.prevent=\"toggle()\"\n                @blur=\"onBlur\">\n                {{label}}\n            </navigation-link>\n        </slot>\n\n        <slot name=\"dropdown-menu\">\n            <dropdown-menu\n                :id=\"id\"\n                :items=\"items\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </slot>\n\n    </navigation-item>\n\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport DropdownMenu from '../DropdownMenu';\nimport BtnDropdown from '../BtnDropdown';\n\nexport default {\n\n    name: 'navigation-dropdown',\n\n    extends: BtnDropdown,\n\n    components: {\n        BtnDropdown,\n        DropdownMenu,\n        NavigationItem,\n        NavigationLink\n    }\n\n};\n</script>\n","import Navigation from './Navigation';\nimport NavigationError from './NavigationError';\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport NavigationDropdown from './NavigationDropdown';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Navigation,\n            NavigationError,\n            NavigationItem,\n            NavigationLink,\n            NavigationDropdown\n        });\n    }\n\n});\n\nexport default Navigation;\n","import Navbar from './Navbar';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarNav from './NavbarNav';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Navbar,\n            NavbarBrand,\n            NavbarCollapse,\n            NavbarNav,\n            NavbarText,\n            NavbarToggler,\n            NavbarTogglerIcon\n        });\n    }\n\n});\n\nexport default Navbar;\n","<template>\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\" :class=\"classes\">\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage === 1}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Previous\" @click.prevent=\"prev($event)\">\n        \t\t\t<span aria-hidden=\"true\">&laquo;</span>\n        \t\t</a>\n        \t</li>\n            <li v-for=\"item in pages\" :data-page=\"item.page\" class=\"page-item\" :class=\"{'active': item.page === currentPage, 'disabled': !!item.divider}\">\n                <slot :item=\"item\">\n                    <a v-if=\"item.divider\" class=\"page-link\">&hellip;</a>\n                \t<a v-else href=\"#\" class=\"page-link\" :class=\"item.class\" :data-label=\"item.label\" @click.prevent=\"paginate(item.page, $event)\">\n                \t\t<span v-if=\"item.label\" aria-hidden=\"true\" v-html=\"item.label\"></span>\n                \t\t<span v-if=\"item.page\" aria-hidden=\"true\" v-html=\"item.page\"></span>\n                \t</a>\n                </slot>\n            </li>\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage >= totalPages}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Next\" @click.prevent=\"next($event)\">\n        \t\t\t<span aria-hidden=\"true\">&raquo;</span>\n        \t\t</a>\n            </li>\n        </ul>\n    </nav>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'pagination',\n\n    props: {\n        /**\n         * The alignment of the pagination component.\n         *\n         * @prop String\n         */\n        align: {\n            type: String,\n            validate: value => {\n                return ['start', 'end', 'center'].indexOf(value) !== -1;\n            }\n        },\n\n        /**\n         * The page on which the paginator should start.\n         *\n         * @prop String\n         */\n        page: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The total number of pages in the paginator.\n         *\n         * @prop String\n         */\n        totalPages: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The number of pages to show when the total number of pages is\n         * greater than the number of pages that should be shown.\n         *\n         * @prop String\n         */\n        showPages: {\n            type: Number,\n            default: 6\n        }\n\n    },\n\n    methods: {\n\n        next(event) {\n            this.paginate(this.currentPage >= this.totalPages ? this.currentPage : this.currentPage + 1, event);\n        },\n\n        prev(event) {\n            this.paginate(this.currentPage <= 1 ? this.currentPage : this.currentPage - 1, event);\n        },\n\n        paginate(page, event) {\n            if (event.currentTarget.parentNode.classList.contains('disabled')) {\n                return;\n            }\n\n            this.setActivePage(page);\n\n            this.$emit('paginate', page, event);\n        },\n\n        setActivePage(page) {\n            if (this.currentPage !== page) {\n                this.currentPage = page;\n            }\n        },\n\n        generate() {\n            const pages = [];\n            const showPages = this.showPages % 2 ? this.showPages + 1 : this.showPages;\n\n            let startPage = (this.currentPage >= showPages) ? this.currentPage - (showPages / 2) : 1;\n            const startOffset = showPages + startPage;\n            const endPage = (this.totalPages < startOffset) ? this.totalPages : startOffset;\n            const diff = startPage - endPage + showPages;\n\n            startPage -= (startPage - diff > 0) ? diff : 0;\n\n            if (startPage > 1) {\n                pages.push({ page: 1 });\n            }\n\n            if (startPage > 2) {\n                pages.push({ divider: true });\n            }\n\n            for (let i = startPage; i < endPage; i++) {\n                pages.push({ page: i });\n            }\n\n            if (endPage <= this.totalPages) {\n                if (this.totalPages - 1 > endPage) {\n                    pages.push({ divider: true });\n                }\n\n                pages.push({ page: this.totalPages });\n            }\n\n            return pages;\n        }\n\n    },\n\n    computed: {\n\n        pages() {\n            return this.generate();\n        },\n\n        classes() {\n            const classes = {};\n\n            classes['justify-content-' + this.align] = true;\n\n            return classes;\n        }\n\n    },\n\n    data() {\n        return {\n            currentPage: this.page\n        };\n    }\n\n};\n</script>\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <slot name=\"control\">\n            <select\n                :id=\"id\"\n                :name=\"name\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                @input=\"$emit('input', $event.target.value)\">\n                <slot />\n            </select>\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nconst CUSTOM_SELECT_PREFIX = 'custom-select-';\n\nexport default {\n\n    name: 'select-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    extends: FormControl,\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Add `custom-select` to the form control if true.\n         *\n         * @property String\n         */\n        custom: Boolean\n\n    },\n\n    computed: {\n\n        controlClass() {\n            const controlClass = this.custom ? 'custom-select' : this.defaultControlClass;\n            return this.plaintext ? `${controlClass}-plaintext` : controlClass;\n        },\n\n        customSelectClasses() {\n            return [\n                CUSTOM_SELECT_PREFIX.replace(/-$/, '') + (this.plaintext ? '-plaintext' : ''),\n                this.customSelectSizeClass,\n                (this.spacing || '')\n            ].join(' ');\n        }\n    }\n\n};\n</script>\n","import SelectField from './SelectField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            SelectField\n        });\n    }\n\n});\n\nexport default SelectField;\n","<script>\nimport { extend, first, findIndex, isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'slides',\n\n    props: {\n\n        /**\n         * The active slide index or key.\n         *\n         * @type {String|Number}\n         */\n\n        active: {\n            type: [String, Number],\n            default: 0\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Get the HTML nodes from the default slots (exluding children without tags).\n         *\n         * @return {Array}\n         */\n        slides() {\n            return this.$slots.default\n                .filter((vnode, i) => {\n                    return !!vnode.tag;\n                })\n                .map((vnode, i) => {\n                    if (!vnode.key || (!vnode.data && !vnode.data.key)) {\n                        vnode.data = extend(vnode.data, {\n                            key: vnode.key = i\n                        });\n                    }\n\n                    return vnode;\n                });\n        },\n\n        /**\n         * Get a slide by index.\n         *\n         * @return {Array}\n         */\n        slide(index) {\n            return this.findSlideByKey(index) || this.findSlideByIndex(index) || this.findSlideByIndex(0);\n        },\n\n        /**\n         * Find a slide by a given key or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByKey(key) {\n            return first(this.slides().filter((vnode, i) => {\n                if (vnode.key === key) {\n                    return vnode;\n                }\n                else if (vnode.data && vnode.data.key === key) {\n                    return vnode;\n                }\n\n                return null;\n            }));\n        },\n\n        /**\n         * Find a slide by a given index or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByIndex(index) {\n            return this.slides()[index] || null;\n        },\n\n        /**\n         * Get the slide index for a give slide object or key\n         *\n         * @param  {Number|String} slide\n         * @return {VNode|null}\n         */\n        getSlideIndex(slide) {\n            const key = !isUndefined(slide.data) ? slide.data.key : slide.key || slide;\n\n            return findIndex(this.slides(), (vnode, i) => {\n                if (slide === vnode) {\n                    return true;\n                }\n                else if (vnode.data && vnode.data.key === key) {\n                    return true;\n                }\n                else if (vnode.key && vnode.key === key) {\n                    return true;\n                }\n                else if (i === slide) {\n                    return true;\n                }\n\n                return false;\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            lastSlide: null,\n            currentSlide: this.active\n        };\n    },\n\n    render(h) {\n        return this.slide(this.currentSlide);\n    }\n\n};\n</script>\n","<template>\n    <!-- TODO: Add tooltip with slide name/key to the control once the tooltip directive has been written. -->\n    <div class=\"slide-deck-controls\">\n        <a v-for=\"slide in slides\" href=\"#\" @click.prevent=\"onClick($event, slide)\" class=\"slide-deck-control-icon\" :class=\"{'is-active': (slide.data ? slide.data.key : slide.key) === active}\">\n            <i class=\"fa fa-circle\"/>\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'slide-deck-controls',\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * An array of slide vnodes\n         *\n         * @type {Number}\n         */\n        slides: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    methods: {\n\n        onClick(event, slide) {\n            this.$emit('click', event, slide);\n        }\n\n    },\n\n    computed: {\n\n    },\n\n    data() {\n        return {};\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.slide-deck-controls {\n    .slide-deck-control-icon {\n        color: $white;\n        font-size: $font-size-base;\n\n        &:not(:last-child) {\n            margin-right: $font-size-base / 2;\n        }\n    }\n\n    .slide-deck-control-icon.is-active {\n        color: $primary;\n    }\n}\n</style>\n","import RadioField from './RadioField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            RadioField\n        });\n    }\n\n});\n\nexport default RadioField;\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"checkbox\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"update($event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"checkbox\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"update($event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n</template>\n\n<script>\n\nimport RadioField from '../RadioField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'checkbox-field',\n\n    extends: RadioField,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValues'\n    },\n\n    props: {\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checkedValues: {\n            type: Array,\n            default() {\n                return [];\n            }\n        }\n\n    },\n\n    methods: {\n\n        update(value) {\n            const checked = this.checkedValues.slice(0);\n            const index = this.checkedValues.indexOf(value);\n\n            if (index === -1) {\n                checked.push(value);\n            }\n            else {\n                checked.splice(index, 1);\n            }\n\n            this.$emit('change', checked);\n        }\n\n    }\n};\n</script>\n","import CheckboxField from './CheckboxField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            CheckboxField\n        });\n    }\n\n});\n\nexport default CheckboxField;\n","import FormControl from './FormControl';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormControl\n        });\n    }\n\n});\n\nexport default FormControl;\n","<template>\n\n    <span class=\"input-group-text\" :id=\"id\">\n        <slot>{{ text }}</slot>\n    </span>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-text',\n\n    props: {\n\n        /**\n         * The id attribute\n         *\n         * @property String\n         */\n        id: String,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: [Array, Number, String]\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group-append\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-append',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group-prepend\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-prepend',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n};\n</script>\n","import ListGroup from './ListGroup';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            ListGroup\n        });\n    }\n\n});\n\nexport default ListGroup;\n","<template>\n    <div class=\"navbar-collapse\" id=\"navbarCollapse\" :class=\"{'collapse': collapse}\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-collapse',\n\n    props: {\n\n        collapse: {\n            type: Boolean,\n            default: true\n        }\n\n    }\n\n};\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-text'\n\n};\n</script>\n","<template>\n    <ul class=\"navbar-nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </ul>\n</template>\n\n<script>\nimport Navigation from '../Navigation';\n\nexport default {\n\n    name: 'navbar-nav',\n\n    components: {\n        Navigation\n    }\n\n};\n</script>\n","import Pagination from './Pagination';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Pagination\n        });\n    }\n\n});\n\nexport default Pagination;\n","<template>\n    <div class=\"slide-deck\" :class=\"{'slide-deck-flex': center}\">\n        <div ref=\"content\" class=\"slide-deck-content\" :style=\"{width: width, height: height}\">\n            <keep-alive>\n                <transition\n                    :name=\"`slide-${direction}`\"\n                    @after-enter=\"onSlideAfterEnter\"\n                    @before-enter=\"onSlideBeforeEnter\"\n                    @enter=\"onSlideEnter\"\n                    @after-leave=\"onSlideAfterLeave\"\n                    @before-leave=\"onSlideBeforeLeave\"\n                    @leave=\"onSlideLeave\">\n                    <slides ref=\"slides\" :key=\"currentSlide\" :active=\"currentSlide\">\n                        <slot/>\n                    </slides>\n                </transition>\n            </keep-alive>\n        </div>\n        <slot name=\"controls\">\n            <slide-deck-controls v-if=\"controls\" ref=\"controls\" :slides=\"slides()\" :active=\"currentSlide\" @click=\"onClickControl\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport Slides from './Slides';\nimport transition from '../../Helpers/Transition';\nimport SlideDeckControls from './SlideDeckControls';\nimport { isFunction } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'slide-deck',\n\n    components: {\n        Slides,\n        SlideDeckControls\n    },\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * Center the slide-deck.\n         *\n         * @type Boolean\n         */\n        center: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Show the slide-deck controls to change the slide.\n         *\n         * @type Boolean\n         */\n        controls: Boolean,\n\n        /**\n         * Flex the content within the popover.\n         *\n         * @type Boolean\n         */\n        flex: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Give a selector or Element to use apply a hidden overflow. If false,\n         * no overflow will be applied. Defaults to the slide deck's container.\n         *\n         * @type {String|Element|Boolean}\n         */\n        overflow: {\n            type: [Object, String, Element, Boolean],\n            default: true\n        },\n\n        /**\n         * The mode determines how the popover content will flex based on the\n         * varying heights of the slides.\n         *\n         * @type Boolean\n         */\n        resizeMode: {\n            type: [Function, Boolean, String],\n            default: 'auto',\n            validate(value) {\n                return ['auto', 'initial', 'inherit'].indexOf(value) !== 1;\n            }\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        },\n\n        currentSlide(value, oldValue) {\n            this.direction = this.$refs.slides.getSlideIndex(oldValue) > this.$refs.slides.getSlideIndex(value) ? 'backward' : 'forward';\n        }\n\n    },\n\n    methods: {\n\n        resize(el) {\n            if (isFunction(this.resizeMode)) {\n                this.resizeMode(el || this.$el);\n            }\n            else {\n                const style = getComputedStyle(el);\n\n                if (!el.style.width) {\n                    el.width = el.style.width = `calc(${style.width} + ${style.marginLeft} + ${style.marginRight})`;\n                }\n\n                if (!el.style.height) {\n                    el.height = el.style.height = `calc(${style.height} + ${style.marginTop} + ${style.marginBottom})`;\n                }\n            }\n        },\n\n        slide(index) {\n            return this.$refs.slides ? this.$refs.slides.slide(index || this.active) : null;\n        },\n\n        slides() {\n            return this.$refs.slides ? this.$refs.slides.slides() : [];\n        },\n\n        onClickControl(event, vnode) {\n            this.currentSlide = vnode.data ? vnode.data.key : vnode.key;\n        },\n\n        onSlideAfterEnter(el) {\n            if (el.width) {\n                el.width = el.style.width = null;\n            }\n\n            if (el.height) {\n                el.height = el.style.height = null;\n            }\n\n            this.width = null;\n            this.height = null;\n            this.$emit(\n                'after-enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideBeforeEnter(el) {\n            this.$emit(\n                'before-enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideEnter(el, done) {\n            this.resize(el);\n            this.width = el.style.width;\n            this.height = el.style.height;\n\n            transition(el).then(delay => {\n                this.$nextTick(done);\n            });\n\n            this.$emit(\n                'enter', this.$refs.slides.slide(this.currentSlide), this.$refs.slides.slide(this.lastSlide)\n            );\n        },\n\n        onSlideAfterLeave(el) {\n            if (el.width) {\n                el.width = el.style.width = null;\n            }\n\n            if (el.height) {\n                el.height = el.style.height = null;\n            }\n\n            this.$nextTick(() => {\n                this.$emit(\n                    'after-leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n                );\n            });\n        },\n\n        onSlideBeforeLeave(el) {\n            this.resize(el);\n            this.$emit(\n                'before-leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n            );\n        },\n\n        onSlideLeave(el, done) {\n            transition(el).then(delay => {\n                this.$nextTick(done);\n            });\n\n            this.$emit(\n                'leave', this.$refs.slides.slide(this.lastSlide), this.$refs.slides.slide(this.currentSlide)\n            );\n        }\n\n    },\n\n    computed: {\n\n        overflowElement() {\n            if (this.overflow === true) {\n                return this.$el;\n            }\n            else if (this.overflow instanceof Element) {\n                return this.overflow;\n            }\n            else if (this.overflow && this.overflow.elm) {\n                return this.overflow.elm;\n            }\n            else if (this.overflow) {\n                return document.querySelector(this.overflow);\n            }\n\n            return null;\n        },\n\n        nodes() {\n            return this.$slots.default;\n        }\n\n    },\n\n    mounted() {\n        if (this.overflowElement) {\n            this.overflowElement.style.overflow = 'hidden';\n        }\n    },\n\n    data() {\n        return {\n            height: null,\n            width: null,\n            lastSlide: null,\n            currentSlide: this.active,\n            direction: 'forward'\n        };\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.slide-deck {\n    height: auto;\n    position: relative;\n\n    &.slide-deck-flex {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .slide-deck-content {\n            flex: 1;\n        }\n    }\n\n    .slide-deck-content {\n        position: relative;\n        transition: all .333s ease;\n    }\n\n    /*\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    */\n\n    .slide-deck-controls {\n        position: absolute;\n        left: 50%;\n        bottom: 1rem;\n        transform: translateX(-50%);\n    }\n\n    .slide-forward-enter-active,\n    .slide-forward-leave-active,\n    .slide-backward-enter-active,\n    .slide-backward-leave-active {\n        opacity: 0;\n        transition: all .333s ease-out;\n        position: absolute;\n        top: 0;\n    }\n\n    .slide-forward-enter-active,\n    .slide-backward-enter-active {\n        transition: all .333s ease-out;\n        width: 100%;\n    }\n\n    .slide-forward-enter-active {\n        left: 0;\n    }\n\n    .slide-backward-enter-active {\n        right: 0;\n    }\n\n    .slide-forward-enter-active,\n    .slide-backward-leave-to {\n        transform: translateX(115%);\n    }\n\n    .slide-forward-leave-to,\n    .slide-backward-enter-active {\n        transform: translateX(-115%);\n    }\n\n    .slide-forward-enter-to,\n    .slide-backward-enter-to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n\n}\n</style>\n"],"names":["Card","CardBody","isDragging","this","[object Object]","t","$emit","event","VueInstaller","name","components","value","hideClose","String","type","computed","file","split","File","mime","e","loaded","$nextTick","lengthComputable","target","result","i","bytes","parseInt","Math","pow","x","install","Colorable","props","window","rootBounds","entry","width","addEventListener","boundingClientRect","targetRect","intersectionRect","targetArea","toFixed","n","options","$filters","_checkForIntersections","THROTTLE_TIMEOUT","_observationTargets","_rootMarginValues","thresholds","threshold","timer","setTimeout","opt_useCapture","fn","node","min","top","left","rect","right","k","parent","child","$on","s","IntersectionObserverEntry","intersectionRatio","prototype","IntersectionObserver","item","document","element","$popover","_unmonitorIntersections","Array","filter","_parseRootMargin","margin","Error","margins","setInterval","observe","_t","_monitoringIntersections","clearInterval","_monitoringInterval","disconnect","add","bottom","rootContainsTarget","_rootContainsTarget","rootRect","newEntry","now","_callback","atRoot","overflow","parentRect","root","body","_expandRectByRootMargin","c","_hasCrossedThreshold","isIntersecting","length","containsDeep","activity","unit","height","observer","hasScrolledIntoViewport","Vue","render","class","controlClass","controlSizeClass","getComputedStyle","Number","disabled","variant","label","flush","src","tag","expanded","Boolean","NavbarText","indexOf","prefix","error","required","on","to","isItem","classList","nav-item","extends","default","NavigationItem","mixins","MergeClasses","card","pills","justified","BtnDropdown","NavigationError","NavigationLink","NavbarBrand","NavbarNav","NavbarTogglerIcon","currentPage","setActivePage","pages","showPages","endPage","startPage","diff","push","popper","totalPages","focus","classes","FormLabel","vnode","key","index","slide","h","RadioField","model","prop","checkedValues","methods","slice","checked","splice","use","CheckboxField","onDragover","files","Dropzone","ProgressBar","directives","ready","el","binding","isFunction","context","Object","poster","progress","orig_filename","pop","toLowerCase","extension","bytesToSize","size","match","lastModified","lastModifiedDate","moment","readFile","total","then","image","start","floor","log","round","sizes","url","FilePreview","FormControl","select","time","intersectionArea","callback","opt_options","nodeType","throttle","bind","_queuedEntries","rootMargin","_initThresholds","map","join","performance","timeout","attachEvent","removeEventListener","detatchEvent","rect1","rect2","max","getBoundingClientRect","err","getParentNode","parentNode","host","defineProperty","get","POLL_INTERVAL","USE_MUTATION_OBSERVER","some","_registerInstance","_monitorIntersections","unobserve","_unregisterInstance","takeRecords","records","opt_threshold","isArray","sort","a","isNaN","opt_rootMargin","exec","parts","parseFloat","addEvent","_domObserver","attributes","childList","characterData","subtree","removeEvent","_rootIsInDom","rootIsInDom","_getRootRect","forEach","oldEntry","_computeTargetAndRootIntersection","display","parentComputedStyle","documentElement","computeRectIntersection","html","clientWidth","clientHeight","newRect","newRatio","oldRatio","ActivityIndicator","background","entries","scrollIntoViewport","scrollOutViewport","$el","id","text","InputGroupText","InputGroupAppend","InputGroupPrepend","HasSlots","Sizeable","append","prepend","InputGroup","HelpText","FormGroup","FormFeedback","FormControlMixin","defaultControlClass","activeClass","onValue","offValue","isActive","spacing","invalidFeedback","dragging","querySelector","transitionDuration","numeric","duration","isUndefined","watch","getTransitionInMilliseconds","LightSwitchField","Badge","badge","href","action","active","prevValue","ListGroupItem","multiple","each","$children","$off","onClickItem","bindEventsToChildren","ListGroup","alt","h1","collapse","NavbarCollapse","NavbarToggler","Variant","expand","fixed","sticky","mergeClasses","expandedClass","variantClass","colorableClasses","$parent","contains","nav-link","list","align","buttons","fill","tabs","vertical","role","isCard","card-header-tabs","card-header-pills","nav-justified","nav-fill","nav-pills","nav-tabs","flex-column","DropdownMenu","Navigation","NavigationDropdown","Navbar","validate","page","paginate","currentTarget","startOffset","divider","generate","Pagination","custom","plaintext","replace","customSelectSizeClass","SelectField","oldValue","lastSlide","currentSlide","$slots","data","extend","findSlideByKey","findSlideByIndex","slides"],"mappings":"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"}