{"version":3,"file":"vue-interface.min.js","sources":["../src/Components/CheckboxField/CheckboxField.vue","../src/Components/CheckboxField/index.js","../src/Components/Dropzone/Dropzone.vue","../src/Components/Dropzone/index.js","../src/Components/FilePreview/FilePreview.vue","../src/Components/FilePreview/index.js","../src/Components/FormControl/FormControl.vue","../src/Components/FormControl/index.js","../node_modules/intersection-observer/intersection-observer.js","../src/Components/InfiniteScrolling/InfiniteScrolling.vue","../src/Components/InputGroup/InputGroupText.vue","../src/Components/InputGroup/InputGroup.vue","../src/Components/InputGroup/index.js","../src/Components/LightSwitchField/LightSwitchField.vue","../src/Components/LightSwitchField/index.js","../src/Components/ListGroup/ListGroupItem.vue","../src/Components/ListGroup/ListGroup.vue","../src/Components/Navbar/NavbarBrand.vue","../src/Components/Navbar/NavbarToggler.vue","../src/Components/Navbar/Navbar.vue","../src/Components/Navigation/NavigationError.vue","../src/Components/Navigation/NavigationLink.vue","../src/Components/Navigation/NavigationItem.vue","../src/Components/Navigation/Navigation.vue","../src/Components/Navigation/NavigationDropdown.vue","../src/Components/Navigation/index.js","../src/Components/Navbar/NavbarNav.vue","../src/Components/Navbar/index.js","../src/Components/Pagination/Pagination.vue","../src/Components/Pagination/index.js","../src/Components/SelectField/SelectField.vue","../src/Components/SelectField/index.js","../src/Components/SlideDeck/Slides.vue","../src/Components/RadioField/RadioField.vue","../src/Components/RadioField/index.js","../src/Components/InputGroup/InputGroupAppend.vue","../src/Components/InputGroup/InputGroupPrepend.vue","../src/Components/ListGroup/index.js","../src/Components/Navbar/NavbarCollapse.vue","../src/Components/Navbar/NavbarText.vue","../src/Components/Navbar/NavbarTogglerIcon.vue","../src/Components/SlideDeck/SlideDeckControls.vue"],"sourcesContent":["<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"checkbox\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"update($event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"checkbox\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"update($event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n</template>\n\n<script>\n\nimport RadioField from '../RadioField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'checkbox-field',\n\n    extends: RadioField,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValues'\n    },\n\n    props: {\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checkedValues: {\n            type: Array,\n            default() {\n                return [];\n            }\n        }\n\n    },\n\n    methods: {\n\n        update(value) {\n            const checked = this.checkedValues.slice(0);\n            const index = this.checkedValues.indexOf(value);\n\n            if(index === -1) {\n                checked.push(value);\n            }\n            else {\n                checked.splice(index, 1);\n            }\n\n            this.$emit('change', checked);\n        }\n\n    }\n}\n\n</script>\n","import CheckboxField from './CheckboxField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            CheckboxField\n        });\n    }\n\n});\n\nexport default CheckboxField;\n","<template>\n\n    <div class=\"dropzone\" :class=\"{'is-dragging': isDragging}\" @drop.prevent=\"onDrop\" @dragover.prevent=\"onDragover\" @dragenter.prevent=\"onDragenter\" @dragleave.prevent=\"onDragleave\">\n        <slot name=\"placeholder\">\n            <div class=\"dropzone-placeholder text-center\">\n                <card>\n                    <card-body>\n                        <h1 class=\"mt-4\">Drag & Drop</h1>\n                        <p>Drag and drop your files here to upload them!</p>\n                        <div class=\"mt-3\"><i class=\"fa fa-image\"/></div>\n                    </card-body>\n                </card>\n            </div>\n        </slot>\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nimport Card from '../Card';\nimport CardBody from '../Card/CardBody';\n\nexport default {\n\n    name: 'dropzone',\n\n    components: {\n        Card,\n        CardBody\n    },\n\n    methods: {\n\n        onDrop(event) {\n            this.isDragging = false;\n            this.$emit('drop', event);\n        },\n\n        onDragover(event) {\n            this.isDragging = true;\n            this.$emit('dragover', event);\n        },\n\n        onDragenter(event) {\n            this.isDragging = true;\n            this.$emit('dragenter', event);\n            this.onDragover(event);\n        },\n\n        onDragleave(event) {\n            this.isDragging = false;\n            this.$emit('dragleave', event);\n        }\n\n    },\n\n    data() {\n        return {\n            files: null,\n            isDragging: false\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.dropzone {\n    position: relative;\n\n    p {\n        font-size: 18px;\n    }\n\n    .fa-image {\n        font-size: 100px;\n    }\n\n    .dropzone-placeholder {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        width: 100%;\n        height: 100%;\n        background: white;\n    }\n\n    &.is-dragging .dropzone-placeholder {\n        display: block;\n    }\n}\n</style>\n","import Dropzone from './Dropzone';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Dropzone\n        });\n    }\n\n});\n\nexport default Dropzone;\n","<template>\n\n    <div class=\"file-preview\" :class=\"{'has-image': !!image}\">\n\n        <div class=\"file-preview-inner\">\n\n            <a v-if=\"!hideClose\" href=\"#\" class=\"file-preview-close\" @click.prevent=\"$emit('close', file)\">\n                <i class=\"fa fa-times-circle\"></i>\n            </a>\n\n            <div v-if=\"!!poster || isImage\" class=\"file-preview-image\">\n                <img v-if=\"!!poster || !!image\" :src=\"poster || image\" class=\"file-preview-thumbnail\" @load=\"onLoad\"/>\n            </div>\n\n            <div v-else v-ready=\"() => this.$emit('loaded')\" class=\"file-preview-icon\">\n                <i class=\"fa\" :class=\"{'fa-file-video-o': isVideo, 'fa-file-o': !isVideo}\"></i>\n            </div>\n\n            <progress-bar\n                v-if=\"progress || isImage && loaded !== false\"\n                v-ready=\"readFile\"\n                :value=\"progress || loaded || 0\"\n                :height=\"10\"\n                class=\"mt-3\"/>\n\n            <div class=\"file-preview-filename\" v-html=\"name\"></div>\n            <div class=\"file-preview-filesize\">({{size}})</div>\n        <div>\n\n    </div>\n\n</template>\n\n<script>\nimport moment from 'moment';\nimport ProgressBar from '../ProgressBar';\nimport { isFunction } from '../../Helpers/Functions';\nimport readFile from '../../Helpers/ReadFile/ReadFile';\n\nexport default {\n\n    name: 'file-preview',\n\n    components: {\n        ProgressBar\n    },\n\n    directives: {\n        ready: {\n            inserted(el, binding, vnode) {\n                if(isFunction(binding.value)) {\n                    vnode.context.$nextTick(binding.value);\n                }\n            }\n        }\n    },\n\n    props: {\n\n        /**\n         * Hide the close button for the preview\n         *\n         * @property Object\n         */\n        hideClose: Boolean,\n\n        /**\n         * The uploaded File object\n         *\n         * @property Object\n         */\n        file: {\n            type: [Object, File],\n            required: true\n        },\n\n        /**\n         * An image URL to instead of using the file reader.\n         * @property {String}\n         */\n        poster: String,\n\n        /**\n         * Progress that can be passed from a parent comparent, for instance\n         * use to show an ajax request with a single progress bar. If a progress\n         * value is passed, even a 0, the progress bar will not be used to show\n         * the progress of the file reader.\n         * @property {Number}\n         */\n        progress: {\n            type: Number,\n            default: undefined\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * Get the file name\n         *\n         * @property String\n         */\n        name() {\n            return this.file instanceof File ? this.file.name : this.file.orig_filename;\n        },\n\n        /**\n         * Get the file extension\n         *\n         * @property String\n         */\n        extension() {\n            return this.file instanceof File ? this.file.name.split('.').pop().toLowerCase() : this.file.extension;\n        },\n\n        /**\n         * Get the file formatted size\n         *\n         * @property String\n         */\n        size() {\n            return this.bytesToSize(this.file.size);\n        },\n\n        /**\n         * Get the file type\n         *\n         * @property String\n         */\n        type() {\n            return this.file instanceof File ? this.file.type : this.file.mime;\n        },\n\n        /**\n         * Check to see if the file is an image.\n         *\n         * @property String\n         */\n        isImage() {\n            return !!this.type.match(/^image/);\n        },\n\n        /**\n         * Check to see if the file is a video.\n         *\n         * @property String\n         */\n        isVideo() {\n            return !!this.type.match(/^video/);\n        },\n\n        /**\n         * Get the last time the file was modified (as timestamp)\n         *\n         * @property String\n         */\n        lastModified() {\n            return this.file instanceof File ? this.file.lastModified : null;\n        },\n\n        /**\n         * Get the last time the file was modified (as Date)\n         *\n         * @property String\n         */\n        lastModifiedDate() {\n            return this.file instanceof File ? this.file.lastModifiedDate : null;\n        }\n\n    },\n\n    methods: {\n\n        readFile() {\n            if(this.file instanceof File) {\n                const start = moment();\n\n                this.loaded = 0;\n\n                this.$nextTick(() => {\n                    readFile(this.file, e => {\n                        if(e.lengthComputable) {\n                            this.$emit('progress', this.loaded = parseInt((e.loaded / e.total) * 100, 10));\n                        }\n                    }).then(event => {\n                        this.$emit('read', event);\n\n                        setTimeout(() => {\n                            this.image = event.target.result;\n                            this.$nextTick(() => {\n                                this.loaded = false;\n                            });\n                        }, 500 - moment().diff(start));\n                    }, error => {\n                        this.$emit('error', error);\n                    });\n                });\n            }\n        },\n\n    \tbytesToSize: function(bytes) {\n    \t\tvar sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    \t\tif (bytes == 0) return '0 Byte';\n    \t\tvar i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    \t\treturn Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n    \t},\n\n        onLoad(event) {\n            this.$emit('loaded');\n        }\n\n    },\n\n    data() {\n        return {\n            image: this.file.url,\n            loaded: this.file instanceof File ? 0 : false,\n        };\n    }\n\n}\n\n</script>\n\n<style lang=\"scss\">\n$file-preview-close-width: 1rem * 2;\n$file-preview-close-height: 1rem * 2;\n\n.file-preview {\n    width: 100%;\n\n    .file-preview-inner {\n        position: relative;\n    }\n\n    .file-preview-close {\n        top: 0;\n        right: 0;\n        padding: 0;\n        width: 24px;\n        height: 24px;\n        background: white;\n        position: absolute;\n        border-radius: 100%;\n        transform: translate(33%, -33%);\n\n        i {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            font-size: 24px;\n            text-align: center;\n        }\n    }\n\n    .file-preview-icon {\n        text-align: center;\n        font-size: 60px;\n        padding: 1rem;\n    }\n\n    .file-preview-thumbnail {\n        width: 100%;\n        max-width: 100%;\n    }\n\n    .file-preview-filename {\n        overflow: hidden;\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .file-preview-filename,\n    .file-preview-filesize {\n        text-align: center;\n    }\n\n}\n\n</style>\n","import FilePreview from './FilePreview';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FilePreview\n        });\n    }\n\n});\n\nexport default FilePreview;\n","<template>\n\n    <component\n        :name=\"name\"\n        :id=\"id\"\n        :is=\"!select ? 'input' : 'select'\"\n        :type=\"!select ? type : false\"\n        :value=\"value\"\n        :pattern=\"pattern\"\n        :required=\"required\"\n        :readonly=\"readonly\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled || readonly\"\n        :class=\"mergeClasses(controlClasses, colorableClasses)\"\n        :aria-label=\"label\"\n        :aria-describedby=\"id\"\n        v-bind-events=\"bindEvents\"/>\n\n</template>\n\n<script>\n\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'form-control',\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Is the element a select?\n         *\n         * @property String\n         */\n        select: Boolean,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n}\n\n</script>\n","import FormControl from './FormControl';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormControl\n        });\n    }\n\n});\n\nexport default FormControl;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","<template>\n    <div class=\"infinite-scrolling\" :style=\"{height: heightUnit, background: background}\">\n        <activity-indicator v-if=\"activity\" :size=\"size\" :type=\"type\" center/>\n    </div>\n</template>\n\n<script>\nimport 'intersection-observer';\nimport unit from '../../Helpers/Unit';\nimport ActivityIndicator from '../ActivityIndicator';\n\nexport default {\n\n    name: 'infinite-scrolling',\n\n    components: {\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Is the activity indicator showing\n         *\n         * @property String\n         */\n        activity: Boolean,\n\n        /**\n         * The activity indicator background style\n         *\n         * @property String\n         */\n        background: String,\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        height: {\n            type: Number,\n            default: 100\n        },\n\n        /**\n         * The activity indicator size\n         *\n         * @property String\n         */\n        size: String,\n\n        /**\n         * The activity indicator type\n         *\n         * @property String\n         */\n        type: String,\n\n        /**\n         * The scroll observer threshold for when an element is considered\n         * into view. Must be a validate between 0 and 1, and is a percentage.\n         *\n         * @property Number\n         */\n        threshold: {\n            type: Number,\n            default: .75,\n            validate(value) {\n                return value >= 0 && value <= 1;\n            }\n        }\n\n    },\n\n    methods: {\n\n        scrollIntoViewport(entry) {\n            this.$emit('scroll:in', entry);\n\n            if(!this.activity) {\n                this.$emit('load', entry);\n            }\n        },\n\n        scrollOutViewport(entry) {\n            this.$emit('scroll:out', entry);\n        }\n\n    },\n\n    computed: {\n\n        heightUnit() {\n            return unit(this.height);\n        }\n\n    },\n\n    mounted() {\n        this.$nextTick(() => {\n            new IntersectionObserver((entries, observer) => {\n                entries.forEach(entry => {\n                    if(entry.isIntersecting && !this.hasScrolledIntoViewport) {\n                        this.scrollIntoViewport(entry, observer);\n                        this.hasScrolledIntoViewport = true;\n                    }\n                    else if(this.hasScrolledIntoViewport) {\n                        this.scrollOutViewport(entry, observer);\n                        this.hasScrolledIntoViewport = false;\n                    }\n                });\n            }, {\n                threshold: this.threshold\n            }).observe(this.$el);\n        });\n    },\n\n    data() {\n        return {\n            hasScrolledIntoViewport: false\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.infinite-scrolling {\n    position: relative;\n\n}\n</style>\n","<template>\n\n    <span class=\"input-group-text\" :id=\"id\">\n        <slot>{{ text }}</slot>\n    </span>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-text',\n\n    props: {\n\n        /**\n         * The id attribute\n         *\n         * @property String\n         */\n        id: String,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: [Array, Number, String]\n\n    }\n\n}\n\n</script>\n","<template>\n\n    <div class=\"input-group\" :class=\"mergeClasses(colorableClasses, sizeableClass)\">\n\n        <slot name=\"prepend\">\n            <template v-if=\"prepend instanceof Array\">\n                <input-group-prepend>\n                    <input-group-text v-for=\"value in prepend\" :text=\"value\"/>\n                </input-group-prepend>\n            </template>\n            <template v-else-if=\"prepend\">\n                <input-group-prepend text>{{prepend}}</input-group-prepend>\n            </template>\n        </slot>\n\n        <slot/>\n\n        <slot name=\"append\">\n            <template v-if=\"append instanceof Array\">\n                <input-group-append>\n                    <input-group-text v-for=\"value in append\" :text=\"value\"/>\n                </input-group-append>\n            </template>\n            <template v-else-if=\"append\">\n                <input-group-append text>{{append}}</input-group-append>\n            </template>\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Sizeable from '../../Mixins/Sizeable';\nimport InputGroupText from './InputGroupText';\nimport Colorable from '../../Mixins/Colorable';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'input-group',\n\n    components: {\n        InputGroupText,\n        InputGroupAppend,\n        InputGroupPrepend\n    },\n\n    mixins: [\n        HasSlots,\n        Sizeable,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        append: [Array, Number, String],\n\n        prepend: [Array, Number, String]\n\n    }\n\n}\n\n</script>\n","import InputGroup from './InputGroup';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport InputGroupText from './InputGroupText';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            InputGroup,\n            InputGroupAppend,\n            InputGroupPrepend,\n            InputGroupText\n        });\n    }\n\n});\n\nexport * from './InputGroupAppend';\nexport * from './InputGroupPrepend';\nexport * from './InputGroupText';\nexport default InputGroup;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\" />\n        </slot>\n\n        <div :class=\"controlClasses\" tabindex=\"0\" @click=\"toggle()\" @keyup.32=\"toggle()\" @keyup.37=\"toggle(offValue)\" @keyup.39=\"toggle(onValue)\">\n            <div class=\"light-switch-handle\"></div>\n        \t<div class=\"light-switch-container\">\n        \t\t<div class=\"light-switch-label on-value\"></div>\n        \t\t<div class=\"light-switch-label off-value\"></div>\n        \t</div>\n        </div>\n\n        <form-control :name=\"name\" :value=\"value\" :id=\"id\" class=\"d-none\"/>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport { isUndefined } from '../../Helpers/Functions';\nimport FormControl from '../FormControl';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nexport default {\n\n    name: 'light-switch-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormControl,\n        FormFeedback\n    },\n\n    mixins: [\n        FormControlMixin\n    ],\n\n    props: {\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control light-switch'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        activeClass: {\n            type: String,\n            default: 'on'\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        onValue: {\n            default: 1\n        },\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        offValue: {\n            default: 0\n        }\n\n    },\n\n    computed: {\n\n        isActive: function() {\n            return this.value === this.onValue;\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : ''),\n                (this.dragging ? 'is-dragging' : ''),\n                (this.isActive ? 'is-active' : '')\n            ].join(' ');\n        }\n\n    },\n\n    methods: {\n\n        getTransitionInMilliseconds() {\n            const duration = getComputedStyle(this.$el.querySelector('.light-switch-handle')).transitionDuration;\n            const numeric = parseFloat(duration, 10);\n            const unit = duration.match(/m?s/);\n\n            switch (unit[0]) {\n                case 's':\n                    return numeric * 1000;\n                case 'ms':\n                    return numeric;\n\n            }\n\n            throw new Error(`\"${unit[0]}\" is not a valid unit of measure. Unit must be \"s\" (seconds) or \"ms\" (milliseconds).`);\n        },\n\n        toggle(value) {\n            this.$emit('input', !isUndefined(value) ? value : (this.isActive ? this.offValue : this.onValue));\n        }\n\n    },\n\n    watch: {\n        value() {\n            this.dragging = true;\n\n            setTimeout(() => {\n                this.dragging = false;\n            }, this.getTransitionInMilliseconds());\n        }\n    },\n\n    data() {\n        return {\n            dragging: false\n        };\n    }\n\n}\n\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n@import './node_modules/bootstrap/scss/mixins.scss';\n\n$light-switch-animation-easing: ease;\n$light-switch-animation-length: 1s / 3;\n$light-switch-handle-width: $font-size-base * 2;\n$light-switch-handle-height: $light-switch-handle-width;\n$light-switch-size-width: $light-switch-handle-width * 1.5;\n$light-switch-size-height: $light-switch-handle-height;\n$light-switch-label-width: $light-switch-handle-width;\n$light-switch-label-height: $light-switch-handle-height;\n\n@mixin light-switch-size($size, $modifier) {\n    $handle-width: $light-switch-handle-width * $modifier;\n    $handle-height: $handle-width;\n    $size-width: $handle-width * 1.5;\n    $size-height: $handle-height;\n    $label-width: $handle-width;\n    $label-height: $handle-height;\n\n    &.light-switch-#{$size} {\n        padding: 0;\n    \twidth: $size-width;\n    \theight: $handle-height;\n    \tborder-radius: $handle-width;\n\n        .light-switch-handle {\n            width: $handle-width;\n            height: $handle-height;\n        }\n\n        .light-switch-container {\n            left: -$handle-width / 2;\n            width: $label-width * 2;\n            height: $label-height;\n        }\n\n        &.is-active {\n            .light-switch-handle {\n                left: $handle-width / 2;\n            }\n        }\n\n        .light-switch-label {\n            width: $label-width;\n            height: $label-height;\n\n            &.on-value {\n                //border-radius: $handle-width 0 0 $handle-width;\n            }\n\n            &.off-value {\n                //border-radius: 0 $handle-width $handle-width 0;\n            }\n        }\n    }\n}\n\n.light-switch {\n    padding: 0;\n\tposition: relative;\n\tborder: none;\n\twidth: $light-switch-size-width;\n\theight: $light-switch-handle-height;\n\tborder-radius: $light-switch-handle-width;\n\toverflow: hidden;\n\tcursor: pointer;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\toverflow: hidden;\n\n    @include light-switch-size('xs', .5);\n    @include light-switch-size('sm', .75);\n    @include light-switch-size('md', 1);\n    @include light-switch-size('lg', 1.5);\n    @include light-switch-size('xl', 2);\n\n    @include form-validation-state(\"valid\", $form-feedback-valid-color);\n    @include form-validation-state(\"invalid\", $form-feedback-invalid-color);\n\n    &.is-invalid {\n        border: 1px solid $form-feedback-invalid-color;\n\n        & .light-switch-handle {\n\n\n        }\n\n        &:not(.is-active) .light-switch-handle {\n            background: $form-feedback-invalid-color;\n        }\n\n        .light-switch-label {\n            &.on-value {\n                left: 0;\n            }\n            &.off-value {\n                right: 0;\n            }\n        }\n    }\n\n    .light-switch-handle {\n        top: 0;\n        left: 0;\n        z-index: 1;\n        position: absolute;\n        border-radius: 100%;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n        width: $light-switch-handle-width;\n        height: $light-switch-handle-height;\n        background: white;\n        background-image: radial-gradient(white, rgb(250, 250, 250) 50%, white 75%);\n        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.1);\n    }\n\n    .light-switch-container {\n        position: relative;\n        left: -$light-switch-handle-width / 2;\n        top: ($light-switch-handle-height -  $light-switch-label-height) / 2;\n        width: $light-switch-label-width * 2;\n        height: $light-switch-label-height;\n        transition: left $light-switch-animation-length $light-switch-animation-easing;\n    }\n\n    &:not(.is-active) {\n        &:not(.is-dragging) .on-value {\n            visibility: hidden;\n        }\n    }\n\n    &.is-active {\n        &:not(.is-dragging) .off-value {\n            visibility: hidden;\n        }\n\n        .light-switch-handle {\n            left: $light-switch-handle-width / 2;\n        }\n\n        .light-switch-container {\n            left: 0;\n        }\n    }\n\n    .light-switch-label {\n        position: absolute;\n        width: $light-switch-label-width;\n        height: $light-switch-label-height;\n        //box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n\n        &.on-value {\n            left: 0;\n            background: #00b007;\n            //border-radius: $light-switch-handle-width 0 0 $light-switch-handle-width;\n        }\n\n        &.off-value {\n            right: 0;\n            background: #ebedef;\n            //border-radius: 0 $light-switch-handle-width $light-switch-handle-width 0;\n        }\n    }\n\n\n}\n\n</style>\n","import LightSwitchField from './LightSwitchField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            LightSwitchField\n        });\n    }\n\n});\n\nexport default LightSwitchField;\n","<template>\n    <router-link v-if=\"to\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </router-link>\n    <a v-elseif=\"href\" :href=\"href\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </a>\n    <button v-else-if=\"action\" type=\"button\" :class=\"classes\" @click.prevent=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </button>\n    <div v-else :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot>{{label}}</slot> <badge v-if=\"badge\" v-bind=\"badgeOptions\"></badge>\n    </div>\n</template>\n\n<script>\n\nimport { isObject } from '../../Helpers/Functions';\nimport Badge from '../Badge';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        Badge\n    },\n\n    props: {\n\n        /**\n         * The badge label (if number or string) or object of options to pass to\n         * the component.\n         *\n         * @property String|Object\n         */\n        badge: [Number, String, Object],\n\n        /**\n         * The list group item href attribute.\n         *\n         * @property String\n         */\n        href: String,\n\n        /**\n         * The list group item variant.\n         *\n         * @property String\n         */\n        variant: String,\n\n        /**\n         * Optionally pass the item as a object to use programmatically later.\n         *\n         * @property String\n         */\n        item: Object,\n\n        /**\n         * The list group item an action, or clickable item.\n         *\n         * @property Boolean\n         */\n        action: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item active.\n         *\n         * @property Boolean\n         */\n        active: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list group item disabled.\n         *\n         * @property Boolean\n         */\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The list item label.\n         *\n         * @property Object\n         */\n        label: {\n            type: [Number, String],\n            value: null\n        },\n\n        /**\n         * The to attribute to be passed to a <router-link> component.\n         *\n         * @property String\n         */\n        to: [String, Object]\n\n    },\n\n    computed: {\n\n        classes() {\n            const classes = prefix({\n                'action': this.action,\n            }, 'list-group-item');\n\n            classes['list-group-item'] = true;\n            classes['active'] = this.active;\n            classes['disabled'] = this.disabled;\n\n            if(this.variant) {\n                classes[prefix(this.variant, 'list-group-item')] = true;\n            }\n\n            return classes;\n        },\n\n        badgeOptions() {\n            return isObject(this.badge) ? this.badge : {\n                label: this.badge\n            };\n        }\n\n    },\n\n    watch: {\n\n        active(value, prevValue) {\n            this.$emit('toggle', value);\n            this.$emit(!!value ? 'activate' : 'deactivate');\n        }\n\n    },\n\n\n}\n\n</script>\n","<template>\n    <div class=\"list-group\" :class=\"classes\">\n        <slot/>\n    </div>\n</template>\n\n<script>\n\nimport { each } from '../../Helpers/Functions';\nimport ListGroupItem from './ListGroupItem';\nimport prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    components: {\n        ListGroupItem\n    },\n\n    props: {\n\n        /**\n         * The list group appear flush (without some borders).\n         *\n         * @property Boolean\n         */\n        flush: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Can activate multiple list items\n         *\n         * @property Boolean\n         */\n        multiple: {\n            type: Boolean,\n            default: false\n        }\n\n    },\n\n    computed: {\n        classes() {\n            return prefix({\n                'flush': this.flush\n            }, 'list-group');\n        }\n    },\n\n    methods: {\n\n        bindEventsToChildren() {\n            each(this.$children, child => {\n                child.$off('click', event => this.onClickItem(event, child));\n                child.$on('click', event => this.onClickItem(event, child));\n            });\n        },\n\n        /**\n         * The callback function for the `click` event.\n         *\n         * @return void\n         */\n        onClick(event) {\n            this.$emit('click', event);\n        },\n\n        /**\n         * The callback function for the child `click` events.\n         *\n         * @return void\n         */\n        onClickItem(event, child) {\n            this.$emit('item:click', event, child);\n        },\n\n    },\n\n    mounted() {\n        this.bindEventsToChildren();\n    },\n\n    updated() {\n        this.bindEventsToChildren();\n    }\n\n}\n\n</script>\n","<template>\n    <component class=\"navbar-brand\" :class=\"{'h1': h1}\" :is=\"component\" :to=\"to\" :href=\"href || to ? '#' : null\">\n        <img v-if=\"src\" class=\"d-inline-block align-center\" :src=\"src\" :width=\"unit(width)\" :height=\"unit(height)\" :alt=\"alt\"/>\n        <slot/>\n    </component>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\n\nexport default {\n\n    props: {\n\n        /**\n         * The img `alt` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        alt: String,\n\n        /**\n         * The HTML wrapping tag.\n         *\n         * @property Object\n         */\n        tag: String,\n\n        /**\n         * The img `width` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        width: [Number, String],\n\n        /**\n         * The img `height` attribute. `src` must be define before this prop has\n         * any affect.\n         *\n         * @property Object\n         */\n        height: [Number, String],\n\n        /**\n         * The `to` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        to: [Object, String],\n\n        /**\n         * The `href` attribute that is passed to the component.\n         *\n         * @property Object\n         */\n        href: String,\n\n        /**\n         * Append the `h1` class to increase the display size\n         *\n         * @property Object\n         */\n        h1: Boolean,\n\n        /**\n         * If a `src` attribute is passed, then use it to add an img tag\n         *\n         * @property Object\n         */\n        src: String,\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : (this.href ? 'a' : 'span'));\n        }\n\n    },\n\n    methods: {\n        unit(value) {\n            return unit(value);\n        }\n    }\n\n}\n\n</script>\n","<template>\n    <button\n        type=\"button\"\n        class=\"navbar-toggler\"\n        data-toggle=\"collapse\"\n        :data-target=\"target\"\n        :aria-controls=\"target\"\n        :aria-expanded=\"expanded\"\n        :aria-label=\"label\"\n        @click=\"onClick\">\n        <slot><navbar-toggler-icon/></slot>\n    </button>\n</template>\n\n<script>\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\n\nexport default {\n\n    name: 'navbar-toggler',\n\n    components: {\n        NavbarTogglerIcon\n    },\n\n    props: {\n\n        expanded: Boolean,\n\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n\n        target: {\n            type: String,\n            default: '.navbar-collapse'\n        }\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            this.$emit('click', event);\n        }\n\n    }\n\n}\n\n</script>\n","<template>\n    <nav :class=\"classes\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport { each } from '../../Helpers/Functions';\nimport { isBoolean } from '../../Helpers/Functions';\nimport prefix from '../../Helpers/Prefix';\nimport Variant from '../../Mixins/Variant';\nimport Colorable from '../../Mixins/Colorable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'navbar',\n\n    components: {\n        NavbarBrand,\n        NavbarCollapse,\n        NavbarText,\n        NavbarToggler,\n        NavbarTogglerIcon\n    },\n\n    mixins: [\n        Variant,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Expand the navbar. If true, applies to all size, otherwise pass a string.\n         *\n         * @property Object\n         */\n        expand: {\n            type: [Boolean, String],\n            default: 'lg',\n            validate(value) {\n                ['xs', 'sm', 'md', 'lg', 'xl'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be fixed at the top.\n         *\n         * @property String\n         */\n        fixed: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The should the navbar be stickied at the top.\n         *\n         * @property String\n         */\n        sticky: {\n            type: [String, Boolean],\n            validate(value) {\n                ['top', 'bottom'].indexOf(value) !== -1 || isBoolean(value);\n            }\n        },\n\n        /**\n         * The variant attribute\n         *\n         * @property String\n         */\n        variant: {\n            type: String,\n            default: 'light',\n            validate(value) {\n                return ['light', 'dark'].indexOf(value) !== -1;\n            }\n        }\n\n    },\n\n    computed: {\n\n        expandedClass() {\n            if(isBoolean(this.expand)) {\n                return this.expand;\n            }\n\n            return prefix(prefix(this.expand, 'expand'), 'navbar');\n        },\n\n        classes() {\n            return this.mergeClasses(\n                'navbar',\n                prefix(this.sticky === true ? 'top' : this.sticky, 'sticky'),\n                prefix(this.fixed === true ? 'top' : this.fixed, 'fixed'),\n                this.expandedClass,\n                this.variantClass,\n                this.colorableClasses\n            );\n        }\n    },\n\n    data() {\n        return {}\n    }\n\n}\n\n</script>\n","<template>\n    <span class=\"navigation-error fa-stack fa-md\" :title=\"error\">\n        <i class=\"fa fa-stack-2x fa-certificate\"/>\n        <i class=\"fa fa-stack-1x fa-exclamation fa-inverse\"/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navigation-error',\n\n    props: {\n\n        error: {\n            type: String,\n            required: true\n        }\n\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/_functions.scss';\n@import './node_modules/bootstrap/scss/_variables.scss';\n\n.navigation-error {\n    color: $danger;\n}\n</style>\n","<template>\n    <component :is=\"component\" :href=\"href || (to ? '#' : null)\" :to=\"to\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n        <navigation-error v-if=\"error\" :error=\"error\"/>\n    </component>\n</template>\n\n<script>\nimport NavigationError from './NavigationError';\n\nexport default {\n\n    name: 'navigation-link',\n\n    components: {\n        NavigationError\n    },\n\n    props: {\n\n        /**\n         * Is the navigation item active\n         *\n         * @prop {Boolean}\n         */\n        active: Boolean,\n\n        /**\n         * Is the navigation item disabled\n         *\n         * @prop {Boolean}\n         */\n        disabled: Boolean,\n\n        /**\n         * The error string.\n         *\n         * @prop {String}\n         */\n        error: String,\n\n        /**\n         * The href attribute\n         *\n         * @prop {String}\n         */\n        href: String,\n\n        /**\n         * The component HTML tag\n         *\n         * @prop {String}\n         */\n        tag: String,\n\n        /**\n         * The to attribute, will be passed to router-link.\n         *\n         * @prop {String}\n         */\n        to: [Object, String],\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n    computed: {\n\n        component() {\n            return this.tag || (this.to ? 'router-link' : 'a');\n        },\n\n        classes() {\n            this.$nextTick(() => {\n                if(!this.isItem) {\n                    this.isItem = !this.$parent.$el.classList.contains('nav-item');\n                }\n            });\n\n            return {\n                'nav-link': !!this.href || !!this.to,\n                'nav-item': !!this.item,\n                'active': this.active,\n                'disabled': this.disabled\n            }\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <component :is=\"component\" :class=\"classes\" @click=\"$emit('click', $event)\">\n        <slot />\n    </component>\n</template>\n\n<script>\nimport NavigationLink from './NavigationLink';\n\nexport default {\n\n    name: 'navigation-item',\n\n    extends: NavigationLink,\n\n    props: {\n\n        /**\n         * The HTML element\n         *\n         * @prop {String}\n         */\n        element: String,\n\n        /**\n         * Is the component a list element\n         *\n         * @prop {Boolean}\n         */\n        list: Boolean,\n\n        /**\n         * Add the nav-item class to the link\n         *\n         * @prop {Boolean}\n         */\n        item: {\n            type: Boolean,\n            default: true\n        }\n\n    },\n\n\n    computed: {\n\n        component() {\n            if(this.element) {\n                return this.element;\n            }\n            else if(this.href) {\n                return 'a';\n            }\n            else if(this.list) {\n                return 'li';\n            }\n\n            return 'div';\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <nav class=\"nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </nav>\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'navigation',\n\n    components: {\n        NavigationItem\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Helper to add the justify-content-X class.\n         *\n         * @prop {Array}\n         */\n        align: String,\n\n        /**\n         * An array of buttons\n         *\n         * @prop {Array}\n         */\n        buttons: Array,\n\n        /**\n         * The navigation inside a card\n         *\n         * @prop {Boolean}\n         */\n        card: Boolean,\n\n        /**\n         * Justify nav items to fill the width equally (using flex).\n         *\n         * @prop {Array}\n         */\n        fill: Boolean,\n\n        /**\n         * Add `nav-justified` class to the component.\n         *\n         * @prop {Array}\n         */\n        justified: Boolean,\n\n        /**\n         * Display items as pill shapes\n         *\n         * @prop {Array}\n         */\n        pills: Boolean,\n\n        /**\n         * Display items as tab shapes\n         *\n         * @prop {Array}\n         */\n        tabs: Boolean,\n\n        /**\n         * Display the buttons vertically\n         *\n         * @prop {Boolean}\n         */\n        vertical: Boolean,\n\n        /**\n         * The role attribute\n         *\n         * @prop {String}\n         */\n        role: String\n\n    },\n\n    computed: {\n\n        classes() {\n            this.$nextTick(() => {\n                if(!this.isCard) {\n                    this.isCard = this.$parent.$el.classList.contains('card-header');\n                }\n            });\n\n            return this.mergeClasses(\n                prefix(this.align, 'justify-content'),\n                this.colorableClasses, {\n                    'card-header-tabs': this.isCard && this.tabs,\n                    'card-header-pills': this.isCard && this.pills,\n                    'nav-justified': this.justified,\n                    'nav-fill': this.fill,\n                    'nav-pills': this.pills,\n                    'nav-tabs': this.tabs,\n                    'flex-column': this.vertical\n                }\n            );\n        }\n\n    },\n\n    data() {\n        return {\n            isCard: this.card\n        };\n    }\n\n}\n</script>\n","<template>\n\n    <navigation-item class=\"dropdown\">\n\n        <slot name=\"toggle-button\">\n            <navigation-link\n                href=\"#\"\n                class=\"dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                :aria-expanded=\"isDropdownShowing\"\n                @click.native.prevent=\"toggle()\"\n                @blur=\"onBlur\">\n                {{label}}\n            </navigation-link>\n        </slot>\n\n        <slot name=\"dropdown-menu\">\n            <dropdown-menu\n                :id=\"id\"\n                :items=\"items\"\n                :align=\"align\"\n                :show.sync=\"isDropdownShowing\"\n                @item:click=\"onItemClick\">\n                <slot/>\n            </dropdown-menu>\n        </slot>\n\n    </navigation-item>\n\n</template>\n\n<script>\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport DropdownMenu from '../DropdownMenu';\nimport BtnDropdown from '../BtnDropdown';\n\nexport default {\n\n    name: 'navigation-dropdown',\n\n    extends: BtnDropdown,\n\n    components: {\n        BtnDropdown,\n        DropdownMenu,\n        NavigationItem,\n        NavigationLink\n    }\n\n}\n</script>\n","import Navigation from './Navigation';\nimport NavigationError from './NavigationError';\nimport NavigationItem from './NavigationItem';\nimport NavigationLink from './NavigationLink';\nimport NavigationDropdown from './NavigationDropdown';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Navigation,\n            NavigationError,\n            NavigationItem,\n            NavigationLink,\n            NavigationDropdown\n        });\n    }\n\n});\n\nexport default Navigation;\n","<template>\n    <ul class=\"navbar-nav\" :class=\"classes\" :role=\"role\">\n        <slot/>\n    </ul>\n</template>\n\n<script>\nimport Navigation from '../Navigation';\n\nexport default {\n\n    name: 'navbar-nav',\n\n    components: {\n        Navigation\n    }\n\n}\n</script>\n","import Navbar from './Navbar';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarNav from './NavbarNav';\nimport NavbarText from './NavbarText';\nimport NavbarToggler from './NavbarToggler';\nimport NavbarTogglerIcon from './NavbarTogglerIcon';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Navbar,\n            NavbarBrand,\n            NavbarCollapse,\n            NavbarNav,\n            NavbarText,\n            NavbarToggler,\n            NavbarTogglerIcon\n        });\n    }\n\n});\n\nexport default Navbar;\n","<template>\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\" :class=\"classes\">\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage === 1}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Previous\" @click.prevent=\"prev($event)\">\n        \t\t\t<span aria-hidden=\"true\">&laquo;</span>\n        \t\t</a>\n        \t</li>\n            <li v-for=\"item in pages\" :data-page=\"item.page\" class=\"page-item\" :class=\"{'active': item.page === currentPage, 'disabled': !!item.divider}\">\n                <slot :item=\"item\">\n                    <a v-if=\"item.divider\" class=\"page-link\">&hellip;</a>\n                \t<a v-else href=\"#\" class=\"page-link\" :class=\"item.class\" :data-label=\"item.label\" @click.prevent=\"paginate(item.page, $event)\">\n                \t\t<span v-if=\"item.label\" aria-hidden=\"true\" v-html=\"item.label\"></span>\n                \t\t<span v-if=\"item.page\" aria-hidden=\"true\" v-html=\"item.page\"></span>\n                \t</a>\n                </slot>\n            </li>\n        \t<li class=\"page-item\" :class=\"{'disabled': currentPage >= totalPages}\">\n        \t\t<a href=\"#\" class=\"page-link\" aria-label=\"Next\" @click.prevent=\"next($event)\">\n        \t\t\t<span aria-hidden=\"true\">&raquo;</span>\n        \t\t</a>\n            </li>\n        </ul>\n    </nav>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'pagination',\n\n    props: {\n        /**\n         * The alignment of the pagination component.\n         *\n         * @prop String\n         */\n        align: {\n            type: String,\n            validate: value => {\n                return ['start', 'end', 'center'].indexOf(value) !== -1;\n            }\n        },\n\n        /**\n         * The page on which the paginator should start.\n         *\n         * @prop String\n         */\n        page: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The total number of pages in the paginator.\n         *\n         * @prop String\n         */\n        totalPages: {\n            type: Number,\n            default: 1\n        },\n\n        /**\n         * The number of pages to show when the total number of pages is\n         * greater than the number of pages that should be shown.\n         *\n         * @prop String\n         */\n        showPages: {\n            type: Number,\n            default: 6\n        }\n        \n    },\n\n    methods: {\n\n        next(event) {\n            this.paginate(this.currentPage >= this.totalPages ? this.currentPage : this.currentPage + 1, event);\n        },\n\n        prev(event) {\n            this.paginate(this.currentPage <= 1 ? this.currentPage : this.currentPage - 1, event);\n        },\n\n        paginate(page, event) {\n            if(event.currentTarget.parentNode.classList.contains('disabled')) {\n                return;\n            }\n\n\t\t\tthis.setActivePage(page);\n\n            this.$emit('paginate', page, event);\n        },\n\n\t\tsetActivePage(page) {\n\t\t\tif(this.currentPage !== page) {\n\t\t\t\tthis.currentPage = page;\n\t\t\t}\n\t\t},\n\n        generate() {\n            const pages = [];\n            const showPages = this.showPages % 2 ? this.showPages + 1: this.showPages;\n\n            let startPage = (this.currentPage >= showPages) ? this.currentPage - (showPages / 2) : 1;\n            const startOffset = showPages + startPage;\n            const endPage = (this.totalPages < startOffset) ? this.totalPages : startOffset;\n            const diff = startPage - endPage + showPages;\n\n            startPage -= (startPage - diff > 0) ? diff : 0;\n\n            if (startPage > 1) {\n                pages.push({page: 1});\n            }\n\n            if(startPage > 2) {\n                pages.push({divider: true});\n            }\n\n            for(let i = startPage; i < endPage; i++) {\n                pages.push({page: i});\n            }\n\n            if (endPage <= this.totalPages) {\n                if(this.totalPages - 1 > endPage) {\n                    pages.push({divider: true});\n                }\n\n                pages.push({page: this.totalPages});\n            }\n\n            return pages;\n        }\n\n    },\n\n    computed: {\n\n        pages() {\n            return this.generate();\n        },\n\n        classes() {\n            const classes = {};\n\n            classes['justify-content-' + this.align] = true;\n\n            return classes;\n        }\n\n    },\n\n    data() {\n        return  {\n            currentPage: this.page\n        };\n    }\n\n};\n</script>\n","import Pagination from './Pagination';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            Pagination\n        });\n    }\n\n});\n\nexport default Pagination;\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <slot name=\"control\">\n            <select\n                :id=\"id\"\n                :name=\"name\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                @input=\"$emit('input', $event.target.value)\">\n                <slot />\n            </select>\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nconst CUSTOM_SELECT_PREFIX = 'custom-select-'\n\nexport default {\n\n    name: 'select-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    extends: FormControl,\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * Add `custom-select` to the form control if true.\n         *\n         * @property String\n         */\n        custom: Boolean\n\n    },\n\n    computed: {\n\n        controlClass() {\n            const controlClass = this.custom ? 'custom-select' : this.defaultControlClass;\n            return this.plaintext ? `${controlClass}-plaintext` : controlClass;\n        },\n\n        customSelectClasses() {\n            return [\n                CUSTOM_SELECT_PREFIX.replace(/\\-$/, '') + (this.plaintext ? '-plaintext' : ''),\n                this.customSelectSizeClass,\n                (this.spacing || '')\n            ].join(' ');\n        }\n    }\n\n}\n</script>\n","import SelectField from './SelectField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            SelectField\n        });\n    }\n\n});\n\nexport default SelectField;\n","<script>\nimport { extend } from '../../Helpers/Functions';\nimport { first } from '../../Helpers/Functions';\nimport { findIndex } from '../../Helpers/Functions';\nimport { isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'slides',\n\n    props: {\n\n        /**\n         * The active slide index or key.\n         *\n         * @type {String|Number}\n         */\n\n        active: {\n            type: [String, Number],\n            default: 0\n        }\n\n    },\n\n    watch: {\n\n        active(value, oldValue) {\n            this.lastSlide = oldValue;\n            this.currentSlide = value;\n        }\n\n    },\n\n    methods: {\n\n        /**\n         * Get the HTML nodes from the default slots (exluding children without tags).\n         *\n         * @return {Array}\n         */\n        slides() {\n            return this.$slots.default\n                .filter((vnode, i) => {\n                    return !!vnode.tag;\n                })\n                .map((vnode, i) => {\n                    if(!vnode.key || !vnode.data && !vnode.data.key) {\n                        vnode.data = extend(vnode.data, {\n                            key: vnode.key = i\n                        });\n                    }\n\n                    return vnode;\n                });\n        },\n\n        /**\n         * Get a slide by index.\n         *\n         * @return {Array}\n         */\n        slide(index) {\n            return this.findSlideByKey(index) || this.findSlideByIndex(index) || this.findSlideByIndex(0);\n        },\n\n        /**\n         * Find a slide by a given key or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByKey(key) {\n            return first(this.slides().filter((vnode, i) => {\n                if(vnode.key === key) {\n                    return vnode;\n                }\n                else if(vnode.data && vnode.data.key === key) {\n                    return vnode;\n                }\n\n                return null;\n            }))\n        },\n\n        /**\n         * Find a slide by a given index or return null if non found.\n         *\n         * @param  {Number|String} key\n         * @return {VNode|null}\n         */\n        findSlideByIndex(index) {\n            return this.slides()[index] || null;\n        },\n\n        /**\n         * Get the slide index for a give slide object or key\n         *\n         * @param  {Number|String} slide\n         * @return {VNode|null}\n         */\n        getSlideIndex(slide) {\n            const key = !isUndefined(slide.data) ? slide.data.key : slide.key || slide;\n\n            return findIndex(this.slides(), (vnode, i) => {\n                if(slide === vnode) {\n                    return true;\n                }\n                else if(vnode.data && vnode.data.key === key) {\n                    return true;\n                }\n                else if(vnode.key && vnode.key === key) {\n                    return true;\n                }\n                else if(i === slide) {\n                    return true;\n                }\n\n                return false;\n            });\n        }\n\n    },\n\n    data() {\n        return {\n            lastSlide: null,\n            currentSlide: this.active\n        }\n    },\n\n    render(h) {\n        return this.slide(this.currentSlide);\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"radio\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValue === value || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"$emit('change', $event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"radio\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValue === value || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"$emit('change', $event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormFeedback from '../FormFeedback';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'radio-field',\n\n    components: {\n        HelpText,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValue'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * Is this a custom element\n         *\n         * @property String\n         */\n        custom: Boolean,\n\n        /**\n         * Display the form field and label inline\n         *\n         * @property Function\n         */\n        inline: Boolean,\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checked: Boolean,\n\n        /**\n         * The checked value\n         *\n         * @property String\n         */\n        checkedValue: [Boolean, Number, String, Object],\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-check'\n        }\n\n    },\n\n    computed: {\n\n        labelClass() {\n            return prefix('label', this.controlClass);\n        },\n\n        inputClass() {\n            return prefix('input', this.controlClass);\n        },\n\n        inlineClass() {\n            return prefix('inline', this.controlClass);\n        },\n\n        controlClass() {\n            return this.custom ? 'custom-control' : this.defaultControlClass;\n        },\n\n        customControlClass() {\n            return this.custom ? prefix(this.$options.name.replace('-field', ''), 'custom') : '';\n        },\n\n        sizeableClass() {\n            return prefix(this.size, 'form-control');\n        }\n\n    }\n\n}\n\n</script>\n","import RadioField from './RadioField';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            RadioField\n        });\n    }\n\n});\n\nexport default RadioField;\n","<template>\n\n    <div class=\"input-group-append\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-append',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n}\n\n</script>\n","<template>\n\n    <div class=\"input-group-prepend\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n\n    name: 'input-group-prepend',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n}\n\n</script>\n","import ListGroup from './ListGroup';\nimport VueInstaller from '../../Helpers/VueInstaller/VueInstaller';\n\nconst plugin = VueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            ListGroup\n        });\n    }\n\n});\n\nexport default ListGroup;\n","<template>\n    <div class=\"navbar-collapse\" id=\"navbarCollapse\" :class=\"{'collapse': collapse}\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-collapse',\n\n    props: {\n\n        collapse: {\n            type: Boolean,\n            default: true\n        }\n\n    }\n\n}\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-text'\n\n}\n</script>\n","<template>\n    <span class=\"navbar-toggler-icon\">\n        <slot/>\n    </span>\n</template>\n\n<script>\nexport default {\n\n    name: 'navbar-toggler-icon'\n\n}\n</script>\n","<template>\n    <!-- TODO: Add tooltip with slide name/key to the control once the tooltip directive has been written. -->\n    <div class=\"slide-deck-controls\">\n        <a v-for=\"slide in slides\" href=\"#\" @click.prevent=\"onClick($event, slide)\" class=\"slide-deck-control-icon\" :class=\"{'is-active': (slide.data ? slide.data.key : slide.key) === active}\">\n            <i class=\"fa fa-circle\"/>\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    name: 'slide-deck-controls',\n\n    props: {\n\n        /**\n         * The slide key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: [String, Number],\n            default: 0\n        },\n\n        /**\n         * An array of slide vnodes\n         *\n         * @type {Number}\n         */\n        slides: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    methods: {\n\n        onClick(event, slide) {\n            this.$emit('click', event, slide)\n        }\n\n    },\n\n    computed: {\n\n    },\n\n    data() {\n        return {}\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n.slide-deck-controls {\n    .slide-deck-control-icon {\n        color: $white;\n        font-size: $font-size-base;\n\n        &:not(:last-child) {\n            margin-right: $font-size-base / 2;\n        }\n    }\n\n    .slide-deck-control-icon.is-active {\n        color: $primary;\n    }\n}\n</style>\n"],"names":["RadioField","model","n","prop","props","[object Object]","i","t","push","index","$emit","use","install","options","VueInstaller","_","CardBody","event","isDragging","this","onDragover","h","components","Dropzone","name","ProgressBar","binding","vnode","context","file","File","undefined","loaded","parseInt","start","error","bytes","floor","Vue","ct","FormControl","select","type","default","document","target","entry","a","left","targetRect","intersectionRect","intersectionArea","s","root","callback","_queuedEntries","threshold","map","ce","e","now","timer","$overlay","node","fn","k","computeRectIntersection","rect2","top","Math","rect1","bottom","rect","_e","arguments","D","parent","nodeType","host","Object","window","intersectionRatio","prototype","USE_MUTATION_OBSERVER","IntersectionObserver","observe","item","element","replace","_observationTargets","_unmonitorIntersections","slice","records","_initThresholds","appendChild","remove","classList","value","parseFloat","margins","_checkForIntersections","POLL_INTERVAL","_domObserver","send","_monitoringInterval","G","length","height","getBoundingClientRect","isIntersecting","toString","display","atRoot","hasOwnProperty","body","html","clientHeight","margin","right","oldEntry","newEntry","thresholds","newRatio","U","_rootContainsTarget","activity","String","scrollIntoViewport","render","InputGroupPrepend","attrs","FormLabel","staticClass","tag","computed","size","onValue","extends","isActive","join","Number","minWidth","dragging","lt","href","Boolean","to","action","variant","classes","isObject","flush","onClickItem","$on","child","src","NavbarTogglerIcon","NavbarText","prefix","expandedClass","colorableClasses","isItem","$el","disabled","list","pills","isCard","contains","flex-column","vertical","NavigationItem","Navigation","NavigationDropdown","NavbarBrand","NavbarToggler","align","methods","currentPage","parentNode","showPages","de","ut","overlay","startPage","diff","pages","HelpText","oldValue","lastSlide","filter","AlertClose","slides","slide","key","FormFeedback","mixins","Colorable","MergeClasses","bindEvents","Array","custom","inline","checked","checkedValue","defaultControlClass","controlClass","$options","checkedValues","indexOf","splice","CheckboxField","Card","files","directives","ready","el","isFunction","$nextTick","hideClose","required","poster","progress","orig_filename","split","pop","toLowerCase","extension","bytesToSize","mime","match","lastModified","lastModifiedDate","moment","readFile","lengthComputable","total","then","image","result","log","round","pow","sizes","url","FilePreview","time","rootBounds","boundingClientRect","width","targetArea","toFixed","opt_options","throttle","bind","THROTTLE_TIMEOUT","_callback","_rootMarginValues","_parseRootMargin","rootMargin","unit","performance","timeout","setTimeout","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","max","min","err","getParentNode","IntersectionObserverEntry","defineProperty","get","some","_registerInstance","_monitorIntersections","unobserve","_unregisterInstance","disconnect","takeRecords","opt_threshold","isArray","sort","isNaN","opt_rootMargin","exec","parts","_monitoringIntersections","setInterval","addEvent","attributes","childList","characterData","subtree","clearInterval","removeEvent","_rootIsInDom","rootRect","rootIsInDom","_getRootRect","forEach","rootContainsTarget","_computeTargetAndRootIntersection","_hasCrossedThreshold","getComputedStyle","parentComputedStyle","parentRect","documentElement","overflow","clientWidth","_expandRectByRootMargin","newRect","oldRatio","containsDeep","ActivityIndicator","background","entries","observer","hasScrolledIntoViewport","scrollOutViewport","id","text","InputGroupText","InputGroupAppend","HasSlots","Sizeable","append","prepend","InputGroup","FormGroup","FormControlMixin","activeClass","offValue","controlSizeClass","spacing","invalidFeedback","querySelector","transitionDuration","numeric","duration","isUndefined","watch","getTransitionInMilliseconds","LightSwitchField","Badge","badge","active","label","prevValue","ListGroupItem","multiple","each","$children","$off","bindEventsToChildren","ListGroup","alt","h1","collapse","expanded","NavbarCollapse","Variant","expand","fixed","sticky","mergeClasses","variantClass","NavigationError","$parent","nav-link","nav-item","NavigationLink","buttons","card","fill","justified","tabs","role","card-header-tabs","card-header-pills","nav-justified","nav-fill","nav-pills","nav-tabs","BtnDropdown","DropdownMenu","Navbar","NavbarNav","validate","page","totalPages","paginate","currentTarget","setActivePage","endPage","startOffset","divider","generate","Pagination","plaintext","customSelectSizeClass","SelectField","currentSlide","$slots","data","extend","findSlideByKey","findSlideByIndex","Modal"],"mappings":"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"}